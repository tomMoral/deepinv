Search.setIndex({"docnames": ["auto_examples/basics/demo_custom_prior", "auto_examples/basics/demo_dataset", "auto_examples/basics/demo_dip", "auto_examples/basics/demo_lidar", "auto_examples/basics/demo_loading", "auto_examples/basics/demo_pansharpening", "auto_examples/basics/demo_physics", "auto_examples/basics/demo_physics_tour", "auto_examples/basics/demo_train_inpainting", "auto_examples/basics/sg_execution_times", "auto_examples/index", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur", "auto_examples/plug-and-play/demo_PnP_custom_optim", "auto_examples/plug-and-play/demo_RED_GSPnP_SR", "auto_examples/plug-and-play/demo_vanilla_PnP", "auto_examples/plug-and-play/sg_execution_times", "auto_examples/sampling/demo_custom_kernel", "auto_examples/sampling/demo_ddrm", "auto_examples/sampling/demo_diffpir", "auto_examples/sampling/demo_dps", "auto_examples/sampling/demo_sampling", "auto_examples/sampling/sg_execution_times", "auto_examples/self-supervised-learning/demo_equivariant_imaging", "auto_examples/self-supervised-learning/demo_multioperator_imaging", "auto_examples/self-supervised-learning/demo_n2n_denoising", "auto_examples/self-supervised-learning/demo_sure_denoising", "auto_examples/self-supervised-learning/sg_execution_times", "auto_examples/unfolded/demo_DEQ", "auto_examples/unfolded/demo_LISTA", "auto_examples/unfolded/demo_custom_prior_unfolded", "auto_examples/unfolded/demo_learned_primal_dual", "auto_examples/unfolded/demo_unfolded_constrained_LISTA", "auto_examples/unfolded/demo_vanilla_unfolded", "auto_examples/unfolded/sg_execution_times", "deepinv.contributing", "deepinv.datasets", "deepinv.loss", "deepinv.models", "deepinv.notation", "deepinv.optim", "deepinv.physics", "deepinv.pnp", "deepinv.sampling", "deepinv.unfolded", "deepinv.utils", "index", "stubs/deepinv.datasets.HDF5Dataset", "stubs/deepinv.datasets.generate_dataset", "stubs/deepinv.loss.CharbonnierLoss", "stubs/deepinv.loss.EILoss", "stubs/deepinv.loss.FNEJacobianSpectralNorm", "stubs/deepinv.loss.JacobianSpectralNorm", "stubs/deepinv.loss.LpNorm", "stubs/deepinv.loss.MCLoss", "stubs/deepinv.loss.MOILoss", "stubs/deepinv.loss.Neighbor2Neighbor", "stubs/deepinv.loss.SplittingLoss", "stubs/deepinv.loss.SupLoss", "stubs/deepinv.loss.SureGaussianLoss", "stubs/deepinv.loss.SurePGLoss", "stubs/deepinv.loss.SurePoissonLoss", "stubs/deepinv.loss.TVLoss", "stubs/deepinv.models.ArtifactRemoval", "stubs/deepinv.models.AutoEncoder", "stubs/deepinv.models.BM3D", "stubs/deepinv.models.ConvDecoder", "stubs/deepinv.models.DRUNet", "stubs/deepinv.models.DeepImagePrior", "stubs/deepinv.models.DiffUNet", "stubs/deepinv.models.DnCNN", "stubs/deepinv.models.GSDRUNet", "stubs/deepinv.models.MedianFilter", "stubs/deepinv.models.SCUNet", "stubs/deepinv.models.SwinIR", "stubs/deepinv.models.TGV", "stubs/deepinv.models.TV", "stubs/deepinv.models.UNet", "stubs/deepinv.models.WaveletDict", "stubs/deepinv.models.WaveletPrior", "stubs/deepinv.optim.BaseOptim", "stubs/deepinv.optim.DataFidelity", "stubs/deepinv.optim.FixedPoint", "stubs/deepinv.optim.IndicatorL2", "stubs/deepinv.optim.L1", "stubs/deepinv.optim.L2", "stubs/deepinv.optim.PnP", "stubs/deepinv.optim.PoissonLikelihood", "stubs/deepinv.optim.Prior", "stubs/deepinv.optim.RED", "stubs/deepinv.optim.ScorePrior", "stubs/deepinv.optim.Tikhonov", "stubs/deepinv.optim.optim_builder", "stubs/deepinv.optim.optim_iterators.ADMMIteration", "stubs/deepinv.optim.optim_iterators.CPIteration", "stubs/deepinv.optim.optim_iterators.DRSIteration", "stubs/deepinv.optim.optim_iterators.HQSIteration", "stubs/deepinv.optim.optim_iterators.OptimIterator", "stubs/deepinv.optim.optim_iterators.PGDIteration", "stubs/deepinv.optim.optim_iterators.admm.fStepADMM", "stubs/deepinv.optim.optim_iterators.admm.gStepADMM", "stubs/deepinv.optim.optim_iterators.drs.fStepDRS", "stubs/deepinv.optim.optim_iterators.drs.gStepDRS", "stubs/deepinv.optim.optim_iterators.hqs.fStepHQS", "stubs/deepinv.optim.optim_iterators.hqs.gStepHQS", "stubs/deepinv.optim.optim_iterators.optim_iterator.fStep", "stubs/deepinv.optim.optim_iterators.optim_iterator.gStep", "stubs/deepinv.optim.optim_iterators.pgd.fStepPGD", "stubs/deepinv.optim.optim_iterators.pgd.gStepPGD", "stubs/deepinv.optim.optim_iterators.primal_dual_CP.fStepCP", "stubs/deepinv.optim.optim_iterators.primal_dual_CP.gStepCP", "stubs/deepinv.physics.BlindBlur", "stubs/deepinv.physics.Blur", "stubs/deepinv.physics.BlurFFT", "stubs/deepinv.physics.CompressedSensing", "stubs/deepinv.physics.Decolorize", "stubs/deepinv.physics.DecomposablePhysics", "stubs/deepinv.physics.Denoising", "stubs/deepinv.physics.Downsampling", "stubs/deepinv.physics.GaussianNoise", "stubs/deepinv.physics.Haze", "stubs/deepinv.physics.Inpainting", "stubs/deepinv.physics.LinearPhysics", "stubs/deepinv.physics.MRI", "stubs/deepinv.physics.Pansharpen", "stubs/deepinv.physics.Physics", "stubs/deepinv.physics.PoissonGaussianNoise", "stubs/deepinv.physics.PoissonNoise", "stubs/deepinv.physics.SinglePhotonLidar", "stubs/deepinv.physics.SinglePixelCamera", "stubs/deepinv.physics.Tomography", "stubs/deepinv.physics.UniformNoise", "stubs/deepinv.sampling.DDRM", "stubs/deepinv.sampling.DPS", "stubs/deepinv.sampling.DiffPIR", "stubs/deepinv.sampling.MonteCarlo", "stubs/deepinv.sampling.SKRock", "stubs/deepinv.sampling.ULA", "stubs/deepinv.test", "stubs/deepinv.train", "stubs/deepinv.transform.Rotate", "stubs/deepinv.transform.Shift", "stubs/deepinv.unfolded.BaseDEQ", "stubs/deepinv.unfolded.BaseUnfold", "stubs/deepinv.unfolded.DEQ_builder", "stubs/deepinv.unfolded.unfolded_builder", "stubs/deepinv.utils.TensorList", "stubs/deepinv.utils.cal_psnr", "stubs/deepinv.utils.get_freer_gpu", "stubs/deepinv.utils.load_url_image", "stubs/deepinv.utils.ones_like", "stubs/deepinv.utils.plot", "stubs/deepinv.utils.plot_curves", "stubs/deepinv.utils.plot_parameters", "stubs/deepinv.utils.rand_like", "stubs/deepinv.utils.randn_like", "stubs/deepinv.utils.zeros_like"], "filenames": ["auto_examples/basics/demo_custom_prior.rst", "auto_examples/basics/demo_dataset.rst", "auto_examples/basics/demo_dip.rst", "auto_examples/basics/demo_lidar.rst", "auto_examples/basics/demo_loading.rst", "auto_examples/basics/demo_pansharpening.rst", "auto_examples/basics/demo_physics.rst", "auto_examples/basics/demo_physics_tour.rst", "auto_examples/basics/demo_train_inpainting.rst", "auto_examples/basics/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur.rst", "auto_examples/plug-and-play/demo_PnP_custom_optim.rst", "auto_examples/plug-and-play/demo_RED_GSPnP_SR.rst", "auto_examples/plug-and-play/demo_vanilla_PnP.rst", "auto_examples/plug-and-play/sg_execution_times.rst", "auto_examples/sampling/demo_custom_kernel.rst", "auto_examples/sampling/demo_ddrm.rst", "auto_examples/sampling/demo_diffpir.rst", "auto_examples/sampling/demo_dps.rst", "auto_examples/sampling/demo_sampling.rst", "auto_examples/sampling/sg_execution_times.rst", "auto_examples/self-supervised-learning/demo_equivariant_imaging.rst", "auto_examples/self-supervised-learning/demo_multioperator_imaging.rst", "auto_examples/self-supervised-learning/demo_n2n_denoising.rst", "auto_examples/self-supervised-learning/demo_sure_denoising.rst", "auto_examples/self-supervised-learning/sg_execution_times.rst", "auto_examples/unfolded/demo_DEQ.rst", "auto_examples/unfolded/demo_LISTA.rst", "auto_examples/unfolded/demo_custom_prior_unfolded.rst", "auto_examples/unfolded/demo_learned_primal_dual.rst", "auto_examples/unfolded/demo_unfolded_constrained_LISTA.rst", "auto_examples/unfolded/demo_vanilla_unfolded.rst", "auto_examples/unfolded/sg_execution_times.rst", "deepinv.contributing.rst", "deepinv.datasets.rst", "deepinv.loss.rst", "deepinv.models.rst", "deepinv.notation.rst", "deepinv.optim.rst", "deepinv.physics.rst", "deepinv.pnp.rst", "deepinv.sampling.rst", "deepinv.unfolded.rst", "deepinv.utils.rst", "index.rst", "stubs/deepinv.datasets.HDF5Dataset.rst", "stubs/deepinv.datasets.generate_dataset.rst", "stubs/deepinv.loss.CharbonnierLoss.rst", "stubs/deepinv.loss.EILoss.rst", "stubs/deepinv.loss.FNEJacobianSpectralNorm.rst", "stubs/deepinv.loss.JacobianSpectralNorm.rst", "stubs/deepinv.loss.LpNorm.rst", "stubs/deepinv.loss.MCLoss.rst", "stubs/deepinv.loss.MOILoss.rst", "stubs/deepinv.loss.Neighbor2Neighbor.rst", "stubs/deepinv.loss.SplittingLoss.rst", "stubs/deepinv.loss.SupLoss.rst", "stubs/deepinv.loss.SureGaussianLoss.rst", "stubs/deepinv.loss.SurePGLoss.rst", "stubs/deepinv.loss.SurePoissonLoss.rst", "stubs/deepinv.loss.TVLoss.rst", "stubs/deepinv.models.ArtifactRemoval.rst", "stubs/deepinv.models.AutoEncoder.rst", "stubs/deepinv.models.BM3D.rst", "stubs/deepinv.models.ConvDecoder.rst", "stubs/deepinv.models.DRUNet.rst", "stubs/deepinv.models.DeepImagePrior.rst", "stubs/deepinv.models.DiffUNet.rst", "stubs/deepinv.models.DnCNN.rst", "stubs/deepinv.models.GSDRUNet.rst", "stubs/deepinv.models.MedianFilter.rst", "stubs/deepinv.models.SCUNet.rst", "stubs/deepinv.models.SwinIR.rst", "stubs/deepinv.models.TGV.rst", "stubs/deepinv.models.TV.rst", "stubs/deepinv.models.UNet.rst", "stubs/deepinv.models.WaveletDict.rst", "stubs/deepinv.models.WaveletPrior.rst", "stubs/deepinv.optim.BaseOptim.rst", "stubs/deepinv.optim.DataFidelity.rst", "stubs/deepinv.optim.FixedPoint.rst", "stubs/deepinv.optim.IndicatorL2.rst", "stubs/deepinv.optim.L1.rst", "stubs/deepinv.optim.L2.rst", "stubs/deepinv.optim.PnP.rst", "stubs/deepinv.optim.PoissonLikelihood.rst", "stubs/deepinv.optim.Prior.rst", "stubs/deepinv.optim.RED.rst", "stubs/deepinv.optim.ScorePrior.rst", "stubs/deepinv.optim.Tikhonov.rst", "stubs/deepinv.optim.optim_builder.rst", "stubs/deepinv.optim.optim_iterators.ADMMIteration.rst", "stubs/deepinv.optim.optim_iterators.CPIteration.rst", "stubs/deepinv.optim.optim_iterators.DRSIteration.rst", "stubs/deepinv.optim.optim_iterators.HQSIteration.rst", "stubs/deepinv.optim.optim_iterators.OptimIterator.rst", "stubs/deepinv.optim.optim_iterators.PGDIteration.rst", "stubs/deepinv.optim.optim_iterators.admm.fStepADMM.rst", "stubs/deepinv.optim.optim_iterators.admm.gStepADMM.rst", "stubs/deepinv.optim.optim_iterators.drs.fStepDRS.rst", "stubs/deepinv.optim.optim_iterators.drs.gStepDRS.rst", "stubs/deepinv.optim.optim_iterators.hqs.fStepHQS.rst", "stubs/deepinv.optim.optim_iterators.hqs.gStepHQS.rst", "stubs/deepinv.optim.optim_iterators.optim_iterator.fStep.rst", "stubs/deepinv.optim.optim_iterators.optim_iterator.gStep.rst", "stubs/deepinv.optim.optim_iterators.pgd.fStepPGD.rst", "stubs/deepinv.optim.optim_iterators.pgd.gStepPGD.rst", "stubs/deepinv.optim.optim_iterators.primal_dual_CP.fStepCP.rst", "stubs/deepinv.optim.optim_iterators.primal_dual_CP.gStepCP.rst", "stubs/deepinv.physics.BlindBlur.rst", "stubs/deepinv.physics.Blur.rst", "stubs/deepinv.physics.BlurFFT.rst", "stubs/deepinv.physics.CompressedSensing.rst", "stubs/deepinv.physics.Decolorize.rst", "stubs/deepinv.physics.DecomposablePhysics.rst", "stubs/deepinv.physics.Denoising.rst", "stubs/deepinv.physics.Downsampling.rst", "stubs/deepinv.physics.GaussianNoise.rst", "stubs/deepinv.physics.Haze.rst", "stubs/deepinv.physics.Inpainting.rst", "stubs/deepinv.physics.LinearPhysics.rst", "stubs/deepinv.physics.MRI.rst", "stubs/deepinv.physics.Pansharpen.rst", "stubs/deepinv.physics.Physics.rst", "stubs/deepinv.physics.PoissonGaussianNoise.rst", "stubs/deepinv.physics.PoissonNoise.rst", "stubs/deepinv.physics.SinglePhotonLidar.rst", "stubs/deepinv.physics.SinglePixelCamera.rst", "stubs/deepinv.physics.Tomography.rst", "stubs/deepinv.physics.UniformNoise.rst", "stubs/deepinv.sampling.DDRM.rst", "stubs/deepinv.sampling.DPS.rst", "stubs/deepinv.sampling.DiffPIR.rst", "stubs/deepinv.sampling.MonteCarlo.rst", "stubs/deepinv.sampling.SKRock.rst", "stubs/deepinv.sampling.ULA.rst", "stubs/deepinv.test.rst", "stubs/deepinv.train.rst", "stubs/deepinv.transform.Rotate.rst", "stubs/deepinv.transform.Shift.rst", "stubs/deepinv.unfolded.BaseDEQ.rst", "stubs/deepinv.unfolded.BaseUnfold.rst", "stubs/deepinv.unfolded.DEQ_builder.rst", "stubs/deepinv.unfolded.unfolded_builder.rst", "stubs/deepinv.utils.TensorList.rst", "stubs/deepinv.utils.cal_psnr.rst", "stubs/deepinv.utils.get_freer_gpu.rst", "stubs/deepinv.utils.load_url_image.rst", "stubs/deepinv.utils.ones_like.rst", "stubs/deepinv.utils.plot.rst", "stubs/deepinv.utils.plot_curves.rst", "stubs/deepinv.utils.plot_parameters.rst", "stubs/deepinv.utils.rand_like.rst", "stubs/deepinv.utils.randn_like.rst", "stubs/deepinv.utils.zeros_like.rst"], "titles": ["Image deblurring with custom deep explicit prior.", "Creating your own dataset", "Reconstructing an image using the deep image prior.", "Single photon lidar operator for depth ranging.", "Saving and loading models", "Stacking and concatenating forward operators.", "Creating a forward operator.", "A tour of forward sensing operators", "Training a reconstruction network.", "Computation times", "Examples", "DPIR method for PnP image deblurring.", "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)", "Regularization by Denoising (RED) for Super-Resolution.", "Vanilla PnP for computed tomography (CT).", "Computation times", "Building your custom sampling algorithm.", "Image reconstruction with a diffusion model", "Implementing DiffPIR", "Implementing DPS", "Uncertainty quantification with PnP-ULA.", "Computation times", "Self-supervised learning with Equivariant Imaging for MRI.", "Self-supervised learning from incomplete measurements of multiple operators.", "Self-supervised denoising with the Neighbor2Neighbor loss.", "Self-supervised denoising with the SURE loss.", "Computation times", "Deep Equilibrium (DEQ) algorithms for image deblurring", "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing", "Learned iterative custom prior", "Learned Primal-Dual algorithm for CT scan.", "Unfolded Chambolle-Pock for constrained image inpainting", "Vanilla Unfolded algorithm for super-resolution", "Computation times", "How to Contribute", "Datasets", "Loss", "Models", "Math Notation", "Optim", "Physics", "PnP and RED algorithms", "Sampling", "Unfolded algorithms", "Utils", "DeepInverse: a Pytorch library for imaging with deep learning", "HDF5Dataset", "generate_dataset", "CharbonnierLoss", "EILoss", "FNEJacobianSpectralNorm", "JacobianSpectralNorm", "LpNorm", "MCLoss", "MOILoss", "Neighbor2Neighbor", "SplittingLoss", "SupLoss", "SureGaussianLoss", "SurePGLoss", "SurePoissonLoss", "TVLoss", "ArtifactRemoval", "AutoEncoder", "BM3D", "ConvDecoder", "DRUNet", "DeepImagePrior", "DiffUNet", "DnCNN", "GSDRUNet", "MedianFilter", "SCUNet", "SwinIR", "TGV", "TV", "UNet", "WaveletDict", "WaveletPrior", "BaseOptim", "DataFidelity", "FixedPoint", "IndicatorL2", "L1", "L2", "PnP", "PoissonLikelihood", "Prior", "RED", "ScorePrior", "Tikhonov", "optim_builder", "ADMMIteration", "CPIteration", "DRSIteration", "HQSIteration", "OptimIterator", "PGDIteration", "fStepADMM", "gStepADMM", "fStepDRS", "gStepDRS", "fStepHQS", "gStepHQS", "fStep", "gStep", "fStepPGD", "gStepPGD", "fStepCP", "gStepCP", "BlindBlur", "Blur", "BlurFFT", "CompressedSensing", "Decolorize", "DecomposablePhysics", "Denoising", "Downsampling", "GaussianNoise", "Haze", "Inpainting", "LinearPhysics", "MRI", "Pansharpen", "Physics", "PoissonGaussianNoise", "PoissonNoise", "SinglePhotonLidar", "SinglePixelCamera", "Tomography", "UniformNoise", "DDRM", "DPS", "DiffPIR", "MonteCarlo", "SKRock", "ULA", "test", "train", "Rotate", "Shift", "BaseDEQ", "BaseUnfold", "DEQ_builder", "unfolded_builder", "TensorList", "cal_psnr", "get_freer_gpu", "load_url_image", "ones_like", "plot", "plot_curves", "plot_parameters", "rand_like", "randn_like", "zeros_like"], "terms": {"go": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "end": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 39, 41, 43, 79, 82, 92, 93, 94, 95, 97, 121, 124, 132, 133, 141, 142], "download": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 66, 68, 69, 70, 72, 73], "full": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 45, 49, 54, 68], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 40, 45, 51, 81], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 55, 68, 73, 74, 75], "In": [0, 3, 4, 5, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 37, 41, 43, 47, 68, 83, 93, 121, 128], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 50, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 92, 95, 110, 111, 113, 119, 120, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 152], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 41, 44, 50, 67, 68, 81, 82, 83, 96], "show": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 14, 16, 17, 18, 20, 22, 23, 24, 25, 27, 28, 29, 32, 79, 81, 150, 151, 152], "how": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 32, 41, 79, 81], "us": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 56, 63, 64, 72, 73, 81, 83, 110, 135], "an": [0, 1, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 19, 20, 22, 23, 25, 28, 29, 31, 34, 39, 40, 41, 43, 45, 50, 58, 59, 60, 65, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 79, 84, 86, 87, 91, 93, 96, 110, 113, 115, 118, 120, 121, 124, 128, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 146, 147, 148, 150], "here": [0, 1, 2, 4, 5, 7, 10, 12, 16, 17, 18, 19, 20, 22, 23, 27, 28, 31, 32, 35, 77], "simpl": [0, 1, 4, 6, 7, 8, 12, 16, 17, 20, 23, 24, 25, 30, 32, 40, 63, 122, 137], "l2": [0, 11, 12, 13, 14, 16, 18, 19, 20, 22, 27, 28, 29, 32, 79, 80, 81, 86, 87, 143], "penal": [0, 39, 79], "squar": [0, 8, 18, 31, 53, 54, 55, 56, 57, 58, 59, 60, 129], "norm": [0, 5, 6, 16, 19, 31, 50, 51, 61, 74, 77, 78, 79, 83, 84, 113, 121, 146], "admm": [0, 45, 81, 91, 92, 98, 99, 143, 144], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 40, 51, 118, 123, 150], "deepinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "dinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 40, 79, 80, 81, 84], "from": [0, 1, 4, 8, 10, 11, 12, 13, 14, 18, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 41, 43, 45, 46, 47, 49, 51, 53, 54, 55, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 96, 113, 115, 118, 120, 121, 124, 128, 131, 132, 133, 137, 138, 141, 147, 148, 150], "pathlib": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "torch": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 37, 40, 44, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 145, 146, 148, 149, 150, 152, 153, 154, 155], "util": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 110, 119, 121, 123, 124, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "dataload": [0, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 137, 138], "data_fidel": [0, 4, 11, 12, 13, 14, 16, 18, 19, 20, 22, 27, 28, 29, 30, 31, 32, 79, 80, 81, 84, 91, 92, 93, 94, 96, 98, 100, 102, 106, 108, 132, 133, 134, 135, 136, 143, 144], "optim_build": [0, 11, 12, 13, 14, 39, 79], "training_util": [0, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "test": [0, 6, 11, 13, 34, 46, 47, 66, 67, 69, 70, 72, 77, 121, 150], "torchvis": [0, 1, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 49], "transform": [0, 1, 7, 8, 11, 12, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 49, 64, 73, 77, 78, 113, 115, 122, 128, 129, 139, 140], "demo": [0, 1, 4, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 27, 30, 31, 32], "load_dataset": [0, 1, 8, 11, 13, 22, 27, 30, 31, 32], "checkpoint": [0, 4, 11, 13, 14, 19, 20, 22, 23, 24, 25, 73], "base_dir": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "original_data_dir": [0, 1, 4, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "data_dir": [0, 1, 4, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "measur": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 22, 24, 25, 26, 27, 30, 31, 32, 36, 38, 40, 42, 44, 46, 47, 49, 53, 54, 55, 56, 58, 59, 60, 62, 67, 76, 79, 80, 81, 82, 83, 84, 86, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 147], "results_dir": [0, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "deg_dir": [0, 4, 8, 11, 13, 22, 23, 24, 25, 31], "global": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "random": [0, 1, 2, 5, 7, 8, 11, 12, 13, 14, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 40, 41, 44, 49, 54, 56, 59, 60, 66, 67, 68, 69, 70, 72, 73, 113, 122, 128, 131, 132, 133, 134, 153], "seed": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 122, 131, 132, 133, 134], "pytorch": [0, 1, 2, 4, 7, 8, 11, 12, 13, 14, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 66, 68, 69, 70, 71, 72, 73], "ensur": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "reproduc": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "manual_se": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 42, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 67, 68, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 84, 86, 87, 89, 91, 92, 93, 94, 110, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 143, 144, 146, 150, 153], "devic": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 47, 62, 66, 69, 70, 72, 77, 78, 111, 112, 113, 117, 120, 122, 123, 127, 128, 129, 132, 133, 137, 138, 142, 147, 148], "get_freer_gpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "cuda": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 111, 112], "is_avail": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "els": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 79, 82, 141], "cpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 47, 62, 66, 69, 70, 72, 77, 78, 111, 112, 113, 117, 120, 122, 123, 127, 128, 129, 132, 133, 137, 138, 142, 148], "cbsd68": [0, 8, 31], "paper": [0, 2, 3, 11, 17, 20, 66, 67, 92, 133], "zhang": [0, 11, 69], "et": [0, 2, 11, 13, 18, 19, 64, 67, 68, 69], "al": [0, 2, 11, 13, 18, 19, 64, 67, 68, 69], "2017": [0, 11], "motion": [0, 11, 13], "kernel": [0, 3, 7, 11, 13, 16, 18, 42, 71, 89, 110, 134], "levin": [0, 11, 13], "2009": [0, 11, 13], "variabl": [0, 1, 4, 11, 12, 13, 14, 20, 25, 30, 31, 39, 41, 59, 60, 74, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 93, 96, 98, 99, 100, 101, 108, 109], "fetch": [0, 1, 11, 12, 14], "method": [0, 2, 6, 8, 10, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 37, 39, 40, 41, 45, 46, 47, 50, 51, 66, 67, 69, 74, 75, 79, 80, 82, 84, 85, 87, 91, 92, 112, 113, 115, 118, 121, 124, 127, 129, 131, 135, 137, 138, 147], "l2_prior": 0, "dataset_nam": [0, 1, 11, 12, 13], "set3c": [0, 1, 8, 11, 12, 13, 27, 30, 31, 32], "img_siz": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 27, 28, 29, 30, 31, 32, 73, 112, 117, 123, 148], "256": [0, 1, 7, 8, 11, 13, 23, 65, 66, 68, 70, 72, 123, 150], "dataset_path": [0, 13], "val_transform": [0, 1, 11, 13], "compos": [0, 1, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 69, 77, 83], "centercrop": [0, 1, 8, 11, 13, 27, 30, 31, 32], "totensor": [0, 1, 8, 11, 13, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35], "blurfft": [0, 11, 16, 18, 27], "modul": [0, 6, 11, 14, 16, 17, 27, 28, 29, 30, 32, 37, 40, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 118, 120, 121, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 152], "The": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 95, 96, 97, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 141, 145, 150, 152], "class": [0, 1, 6, 7, 8, 11, 12, 14, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145], "perform": [0, 2, 8, 11, 14, 18, 19, 30, 31, 32, 39, 41, 43, 48, 52, 63, 65, 67, 68, 71, 72, 74, 75, 79, 81, 87, 91, 96, 110, 111, 112, 133, 138, 139, 140, 141, 142, 143, 144], "convolut": [0, 2, 3, 20, 42, 65, 66, 67, 69, 70, 73, 76, 89, 110, 111, 112], "via": [0, 12, 16, 18, 19, 20, 24, 25, 35, 40, 42, 43, 45, 47, 54, 66, 68, 69, 72, 89, 112, 113, 115, 120, 121, 124, 128, 129], "fourier": [0, 7, 122], "choos": [0, 4, 7, 8, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 43, 55, 68, 81], "gaussian": [0, 1, 2, 3, 5, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 27, 28, 29, 30, 32, 38, 41, 42, 58, 59, 84, 89, 113, 117, 118, 123, 125, 127, 133, 136, 154], "standard": [0, 3, 5, 7, 11, 12, 14, 17, 18, 19, 20, 31, 35, 37, 38, 39, 41, 57, 58, 59, 68, 79, 84, 118, 119, 123, 125, 127, 135, 136, 143, 144, 154], "deviat": [0, 3, 7, 11, 12, 13, 14, 17, 18, 19, 37, 38, 39, 41, 58, 59, 79, 84, 91, 118, 123, 125, 127, 143, 144], "3": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 51, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 84, 110, 114, 120, 123, 127, 133, 150], "add": [0, 1, 11, 13, 73, 118, 121, 124, 125, 126, 130, 145], "nois": [0, 1, 3, 7, 11, 12, 13, 14, 18, 19, 24, 25, 32, 37, 38, 39, 41, 42, 49, 54, 58, 59, 60, 64, 66, 67, 68, 69, 73, 76, 77, 84, 89, 111, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 146], "03": [0, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32], "filter": [0, 2, 5, 7, 11, 13, 16, 18, 27, 64, 71, 110, 111, 112, 117, 123, 127, 129], "filter_torch": 0, "gaussian_blur": [0, 7, 27, 111, 112], "sigma": [0, 2, 3, 4, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 27, 30, 31, 32, 35, 38, 40, 41, 42, 58, 59, 63, 64, 66, 68, 69, 71, 72, 73, 76, 84, 85, 88, 89, 93, 95, 118, 125, 127, 131, 132, 133, 135, 136, 142], "noise_level_img": [0, 11, 12, 13, 14, 27, 30, 32], "n_channel": [0, 1, 4, 8, 11, 12, 13, 14, 22, 27, 28, 29, 30, 31, 32], "color": [0, 1, 5, 6, 7, 8, 11, 12, 13, 14, 27, 30, 31, 32, 123], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 39, 40, 41, 42, 43, 49, 51, 54, 56, 58, 59, 60, 61, 65, 66, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 150, 153], "grai": [0, 1, 7, 8, 11, 12, 13, 14, 27, 30, 31, 32, 123], "scale": [0, 1, 8, 11, 12, 13, 14, 23, 24, 25, 27, 30, 31, 32, 73, 76, 82], "instanc": [0, 12, 18, 29, 30, 39, 41, 48, 52, 63, 65, 71, 72, 74, 75, 79, 81, 87, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 106, 108, 109, 139, 140, 143, 144], "enabl": [0, 19, 40, 141, 142], "comput": [0, 1, 2, 5, 6, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 39, 40, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 69, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 111, 113, 115, 117, 118, 120, 121, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 150, 151], "effic": 0, "backward": [0, 27, 43, 45, 82, 83, 129, 141], "p": [0, 3, 11, 13, 16, 19, 20, 38, 42, 52, 59, 60, 79, 89, 125, 126, 127, 132, 136], "noise_model": [0, 2, 6, 7, 11, 12, 13, 14, 16, 17, 18, 20, 27, 30, 32, 35, 40, 118, 121, 124, 125, 126, 130], "gaussiannois": [0, 1, 2, 6, 7, 11, 12, 13, 14, 16, 17, 18, 20, 27, 30, 32, 35, 40, 116, 123], "parallel": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "gpu": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 47, 62, 66, 69, 70, 72, 77, 78, 120, 122, 127, 129, 137, 138, 147, 148], "fasten": [0, 1, 8, 11, 12, 13, 14, 22, 24, 25, 27, 28, 29, 30, 31, 32], "train": [0, 1, 4, 9, 10, 11, 12, 13, 14, 18, 19, 35, 36, 42, 43, 45, 46, 47, 57, 62, 65, 66, 68, 69, 70, 72, 76, 89, 115, 120, 121, 124, 134, 135, 136, 137, 142, 147, 152], "otherwis": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 49, 50, 51, 52, 54, 56, 68, 79, 81, 108, 109, 110, 111, 113, 117, 121, 123, 128, 129], "all": [0, 1, 2, 8, 10, 11, 12, 13, 14, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 48, 52, 63, 65, 66, 67, 71, 72, 74, 75, 79, 80, 91, 96, 120, 138, 139, 140, 143, 144], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 53, 54, 67, 69, 76, 77, 78, 79, 81, 86, 92, 93, 94, 95, 96, 110, 111, 113, 114, 115, 117, 119, 121, 123, 124, 129, 132, 134, 135, 136, 138, 139, 142, 146, 148, 150, 152], "synchron": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "num_work": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 47], "4": [0, 1, 3, 7, 8, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 47, 65, 66, 71, 72, 73, 76, 79, 80, 81, 84, 122, 123, 141, 150], "n_images_max": [0, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "maxim": [0, 8, 11, 13, 27, 28, 29, 30, 31, 32, 80, 86, 87], "number": [0, 2, 4, 6, 8, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 45, 47, 59, 60, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 113, 121, 124, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 150, 153, 154], "restor": [0, 11, 13, 22, 27, 28, 29, 32, 37, 45, 66, 73, 131, 133], "input": [0, 2, 3, 7, 11, 12, 13, 14, 18, 19, 30, 32, 37, 39, 41, 50, 51, 63, 65, 66, 67, 68, 69, 70, 72, 73, 76, 81, 89, 91, 92, 93, 94, 96, 98, 100, 102, 106, 108, 110, 112, 113, 117, 119, 120, 123, 127, 129, 138, 139, 140, 141, 143, 144], "measurement_dir": [0, 1, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "deepinv_dataset_path": 0, "generate_dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35], "train_dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 47], "test_dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 47], "none": [0, 1, 11, 12, 13, 22, 23, 24, 25, 27, 32, 47, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 91, 96, 117, 122, 123, 124, 131, 132, 133, 134, 135, 136, 138, 141, 143, 144, 148, 150, 151, 152], "save_dir": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 47, 150, 151, 152], "train_datapoint": [0, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 47], "vector": [0, 1, 8, 11, 13, 16, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 38, 51, 58, 59, 60, 65, 67, 74, 79, 115, 136, 138], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 39, 42, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 90, 93, 94, 96, 97, 113, 115, 117, 118, 119, 121, 122, 125, 128, 132, 133, 134, 135, 136], "00": [0, 1, 2, 4, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "": [0, 1, 2, 4, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 42, 66, 68, 69, 70, 72, 73, 74, 75, 89, 110, 113, 115, 117, 122, 134, 137, 138], "100": [0, 1, 2, 3, 4, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 82, 83, 121, 133], "47": [0, 11, 13, 18, 19, 22, 31, 32], "27it": [0, 22, 28, 31], "ha": [0, 1, 2, 3, 5, 6, 8, 11, 13, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 55, 66, 79, 80, 81, 86, 87, 110, 111, 112, 113, 117, 120, 122, 123, 128, 129, 131, 132, 150], "been": [0, 1, 2, 8, 11, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 55, 81], "save": [0, 1, 8, 9, 10, 11, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 32, 35, 44, 47, 73, 78, 80, 82, 85, 87, 113, 115, 120, 121, 124, 128, 137, 138, 142, 144, 147, 150, 151, 152], "function": [0, 1, 2, 3, 6, 7, 8, 11, 12, 13, 18, 19, 22, 23, 27, 28, 29, 30, 31, 32, 36, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 56, 63, 65, 67, 68, 69, 71, 72, 74, 75, 79, 80, 81, 82, 83, 84, 86, 87, 91, 92, 93, 94, 96, 113, 115, 121, 124, 127, 129, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144], "instanti": [0, 11, 12, 13, 14, 79], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 146, 148, 150], "proxim": [0, 6, 12, 13, 14, 18, 30, 40, 41, 43, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 97, 102, 103, 115, 117, 120, 121, 135, 143, 144], "gradient": [0, 12, 13, 14, 19, 20, 24, 41, 43, 49, 55, 70, 74, 75, 80, 81, 83, 84, 86, 87, 88, 90, 91, 97, 113, 117, 121, 124, 129, 132, 138, 141, 143, 144], "descent": [0, 14, 29, 41, 80, 86, 87, 91, 97, 124, 143, 144], "follow": [0, 11, 12, 14, 16, 18, 19, 20, 28, 31, 34, 37, 38, 39, 41, 45, 58, 59, 60, 78, 79, 114, 132, 133, 136, 142], "min_": [0, 2, 67], "x": [0, 1, 2, 3, 5, 6, 7, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 27, 28, 29, 30, 31, 32, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 145, 149, 153, 154, 155], "frac": [0, 16, 18, 19, 20, 25, 28, 29, 42, 43, 50, 51, 56, 58, 59, 60, 74, 75, 79, 82, 83, 84, 89, 90, 113, 115, 121, 125, 126, 132, 133, 135, 136, 141, 146], "y": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 14, 16, 17, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 67, 68, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 92, 93, 94, 96, 98, 100, 102, 106, 108, 110, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142], "ax": [0, 20, 28, 29, 31, 39, 42, 79, 80, 81, 83, 84, 93, 113, 115, 121, 124, 129], "_2": [0, 19, 23, 25, 28, 29, 31, 39, 50, 51, 58, 59, 60, 61, 74, 75, 79, 81, 82, 83, 84, 90, 135, 136], "rho": [0, 18, 19], "where": [0, 2, 3, 7, 8, 11, 12, 16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 35, 39, 40, 41, 42, 43, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 74, 75, 77, 78, 79, 80, 81, 82, 86, 89, 92, 93, 94, 95, 96, 97, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 136, 138, 141, 142, 146, 150, 152], "A": [0, 4, 6, 8, 9, 10, 12, 13, 16, 18, 19, 23, 27, 28, 29, 30, 31, 36, 38, 39, 40, 41, 42, 43, 45, 51, 53, 58, 59, 60, 62, 66, 68, 74, 75, 78, 79, 80, 81, 82, 83, 84, 93, 96, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 136, 137, 138, 142, 147, 150], "forward": [0, 1, 9, 10, 19, 22, 27, 28, 29, 30, 35, 36, 37, 39, 40, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 145, 147, 150], "regular": [0, 2, 4, 10, 12, 14, 15, 18, 20, 22, 24, 27, 28, 29, 31, 32, 38, 39, 41, 43, 45, 46, 47, 55, 56, 69, 70, 79, 80, 81, 84, 87, 88, 89, 90, 91, 96, 117, 118, 121, 124, 135, 136, 137, 141, 142, 143, 144, 147], "paramet": [0, 2, 4, 8, 11, 12, 13, 16, 18, 19, 20, 31, 41, 43, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152], "creat": [0, 5, 9, 10, 12, 40, 44, 46, 47, 51, 79, 80, 81, 84, 113, 115, 116, 118, 121, 122, 124, 131, 134, 147, 150], "which": [0, 1, 4, 5, 7, 11, 13, 16, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 31, 32, 36, 37, 39, 40, 42, 43, 45, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 66, 69, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 112, 113, 117, 120, 121, 124, 128, 129, 131, 132, 134, 137, 138, 142, 148], "inherit": [0, 6, 13, 16, 30, 39, 40, 41, 122], "l2prior": 0, "def": [0, 4, 6, 12, 13, 16, 18, 19, 29, 30, 31, 81, 134], "__init__": [0, 6, 12, 13, 16, 30, 134], "self": [0, 3, 6, 12, 13, 16, 26, 30, 45, 46, 47, 49, 53, 54, 55, 56, 58, 59, 60, 62, 69, 76, 80, 82, 84, 85, 87, 113, 115, 116, 120, 121, 122, 124, 126, 128, 134, 137, 138, 139, 142, 144, 147], "arg": [0, 13, 29, 30, 31, 39, 41, 74, 75, 77, 78, 79, 80, 81, 85, 87, 88, 89, 90, 121, 141, 142], "kwarg": [0, 6, 12, 13, 30, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 73, 80, 81, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 128, 129, 137, 141, 142, 143, 144], "super": [0, 6, 10, 12, 15, 16, 30, 33, 46, 47, 57, 69, 70, 79, 80, 84, 85, 87, 88, 91, 117, 118, 121, 124, 134, 137, 138, 142, 144, 147, 152], "explicit_prior": [0, 13, 87], "true": [0, 1, 2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 46, 47, 49, 50, 51, 54, 56, 62, 63, 67, 68, 69, 71, 73, 76, 79, 81, 86, 87, 92, 93, 94, 96, 104, 105, 113, 117, 120, 121, 126, 128, 129, 131, 132, 133, 134, 137, 141, 146, 150, 151, 152], "g": [0, 1, 3, 10, 12, 13, 16, 19, 23, 28, 29, 35, 36, 37, 39, 40, 43, 47, 49, 53, 54, 55, 56, 57, 79, 81, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 107, 109, 111, 112, 116, 120, 129, 132, 138, 142, 143, 144, 146], "5": [0, 2, 4, 5, 6, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 59, 60, 68, 73, 74, 75, 76, 79, 80, 81, 84, 113, 136, 141], "view": [0, 7, 19, 20], "shape": [0, 2, 7, 17, 18, 19, 20, 29, 65, 66, 73, 82, 113, 123, 128, 145, 150], "dim": [0, 3, 6, 7, 17, 19, 20, 72, 73], "return": [0, 1, 4, 6, 12, 13, 14, 16, 17, 18, 19, 20, 23, 29, 30, 31, 37, 39, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 110, 111, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 130, 134, 137, 138, 141, 145, 147, 148, 149, 153, 154, 155], "specifi": [0, 7, 11, 12, 13, 14, 30, 31, 32, 69, 87], "select": [0, 4, 11, 12, 13, 14, 22, 27, 28, 29, 31, 32, 79], "fidel": [0, 4, 11, 12, 13, 14, 22, 27, 28, 29, 31, 32, 38, 41, 43, 79, 80, 81, 83, 84, 86, 91, 93, 96, 98, 100, 102, 104, 106, 108, 132, 133, 143, 144], "term": [0, 4, 11, 12, 13, 14, 18, 19, 22, 27, 28, 29, 31, 32, 38, 39, 41, 43, 74, 75, 79, 80, 81, 83, 87, 88, 90, 91, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 133, 143, 144], "specif": [0, 6, 11, 13, 79, 81], "given": [0, 18, 42, 50, 51, 79, 81, 89, 93, 94, 95, 97, 120, 127], "note": [0, 16, 18, 19, 27, 29, 32, 80, 82, 86, 93, 95, 137, 138], "have": [0, 2, 3, 10, 14, 17, 18, 19, 23, 37, 40, 45, 51, 68, 80, 121, 122, 124, 127, 128, 131, 142, 146], "params_algo": [0, 4, 11, 12, 13, 14, 22, 27, 28, 29, 30, 31, 32, 39, 79, 91, 142, 143, 144, 152], "stepsiz": [0, 4, 11, 12, 13, 14, 22, 27, 28, 29, 31, 32, 39, 41, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 97, 108, 109, 142, 143, 144], "lambda": [0, 4, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 31, 32, 38, 39, 41, 75, 77, 78, 79, 80, 81, 84, 87, 91, 92, 93, 94, 95, 96, 97, 98, 108, 115, 121, 124, 133, 134, 135, 136, 142, 143, 144], "log": [0, 14, 16, 19, 20, 27, 28, 29, 30, 32, 42, 84, 86, 89, 113, 128, 132, 134, 135, 136], "verbos": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 50, 51, 67, 74, 75, 79, 121, 131, 132, 133, 134, 135, 136, 137, 138], "plot_metr": [0, 11, 13, 14, 27, 30, 32, 137, 138], "converg": [0, 5, 6, 11, 12, 13, 14, 17, 30, 32, 39, 41, 50, 51, 74, 75, 79, 80, 81, 82, 83, 86, 87, 95, 96, 121, 134, 135, 136], "metric": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 27, 28, 29, 30, 31, 32, 49, 52, 53, 54, 55, 56, 57, 79, 81, 137, 141, 151], "along": [0, 12, 14, 30, 32, 79, 81, 137], "curv": [0, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "early_stop": [0, 11, 12, 13, 14, 79, 81], "stop": [0, 2, 11, 12, 13, 67, 79, 81], "when": [0, 7, 12, 13, 16, 19, 20, 24, 34, 41, 54, 55, 67, 68, 80, 81, 86, 87, 133], "criteria": [0, 11, 13, 134], "reach": [0, 12, 13, 79, 81], "crit_conv": [0, 13, 79, 82, 83, 134, 136], "cost": [0, 12, 13, 79, 81, 91, 92, 93, 94, 96, 143, 144], "differ": [0, 2, 13, 19, 23, 24, 29, 36, 41, 44, 54, 55, 61, 67, 73, 123, 131, 132, 145], "between": [0, 2, 5, 11, 13, 14, 18, 19, 38, 39, 49, 50, 56, 63, 76, 79, 80, 86, 87, 96, 129, 133, 134, 136, 138, 150], "consecut": [0, 13, 80, 86, 87], "iter": [0, 1, 2, 4, 5, 6, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 27, 31, 32, 33, 43, 46, 47, 50, 51, 57, 67, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 121, 124, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 147, 152], "smaller": [0, 13, 39, 56, 68, 80, 86, 87, 110, 111, 117, 123, 135, 136], "than": [0, 1, 4, 13, 18, 28, 31, 39, 44, 80, 86, 87, 110, 111, 113, 117, 121, 123, 128, 129, 135, 136, 150], "thres_conv": [0, 13, 79], "1e": [0, 2, 5, 6, 8, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 48, 51, 74, 75, 79, 81, 82, 83, 141], "backtrack": [0, 13, 79], "fals": [0, 1, 4, 7, 8, 11, 12, 13, 14, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 39, 46, 47, 50, 51, 52, 56, 62, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 91, 92, 93, 94, 96, 104, 105, 113, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 146, 148], "backtrak": 0, "automat": [0, 13, 14, 19, 34, 80, 86, 87, 88], "adjust": [0, 13], "max_it": [0, 4, 11, 12, 13, 14, 16, 17, 20, 22, 27, 28, 29, 30, 31, 32, 50, 51, 77, 79, 81, 82, 83, 121, 124, 132, 133, 134, 135, 136], "500": 0, "maximum": [0, 17, 18, 42, 50, 51, 74, 75, 79, 81, 82, 83, 89, 110, 121, 124, 137, 138, 141, 146, 150], "ip": [0, 11, 12, 13, 14], "model": [0, 9, 10, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 44, 49, 50, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 92, 93, 94, 96, 98, 100, 102, 106, 108, 115, 118, 119, 120, 121, 123, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 146, 147, 148, 150, 152], "g_first": [0, 4, 13, 29, 31, 39, 91, 92, 93, 94, 96, 104, 105, 108, 109, 143, 144], "can": [0, 1, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 72, 73, 76, 77, 78, 79, 81, 84, 89, 91, 113, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 137, 138, 141, 142, 143, 144, 152], "batch_siz": [0, 1, 8, 11, 13, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 47, 66], "wandb_vi": [0, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 137, 138], "plot": [0, 1, 5, 6, 7, 8, 11, 13, 18, 19, 22, 23, 24, 25, 27, 30, 31, 79, 123, 137, 138, 141, 151, 152], "weight": [0, 4, 8, 11, 13, 14, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 37, 49, 54, 61, 66, 68, 69, 70, 72, 73, 137, 138, 142], "bia": [0, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 69, 73, 76], "plot_imag": [0, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 137, 138], "hdf5dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35], "shuffl": [0, 1, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 66, 70], "test_dataload": [0, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 137], "save_fold": [0, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 137], "process": [0, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 36, 47, 64, 82, 113, 121, 124, 133], "out": [0, 8, 11, 13, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 45, 51, 113, 134, 135, 136], "33": [0, 8, 11, 13, 14, 15, 18, 19, 22, 30, 32], "26": [0, 11, 13, 18, 19, 22, 27, 29, 31, 32], "52": [0, 2, 8, 11, 13, 19, 20, 22, 23, 28, 31, 32], "21": [0, 6, 8, 11, 12, 13, 18, 19, 22, 23, 27, 28, 31, 32], "36": [0, 8, 11, 13, 19, 22, 23, 25, 31, 32], "current": [0, 12, 13, 16, 17, 18, 19, 22, 30, 79, 81, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109], "crit": [0, 13, 17, 74, 75], "77e": 0, "06": [0, 8, 11, 13, 17, 19, 22, 23, 24, 26, 29, 31, 32], "object": [0, 2, 5, 7, 13, 17, 20, 22, 27, 28, 29, 30, 31, 32, 39, 41, 96, 121, 124, 141, 145], "00e": [0, 13, 17, 28], "05": [0, 7, 8, 9, 11, 13, 18, 19, 22, 23, 24, 25, 27, 31, 32, 33, 35, 40, 74, 75, 79, 82, 83, 133, 135, 136], "67": [0, 8, 11, 13, 18, 19, 22, 31, 32], "28": [0, 8, 11, 13, 15, 18, 19, 22, 23, 24, 28, 29, 31, 32, 35, 40], "12": [0, 8, 9, 11, 13, 18, 19, 22, 23, 27, 28, 29, 31, 32], "14": [0, 8, 11, 13, 18, 19, 22, 23, 25, 27, 28, 30, 31, 32], "45": [0, 2, 6, 7, 8, 11, 13, 19, 22, 23, 24, 25, 32], "07e": [0, 27], "31": [0, 2, 8, 9, 11, 13, 19, 22, 23, 28, 29, 30, 31, 32], "7": [0, 5, 8, 11, 12, 13, 17, 18, 19, 22, 23, 24, 27, 28, 29, 31, 32, 65, 133], "83": [0, 8, 11, 13, 18, 19, 22, 23, 28, 31, 32], "10": [0, 2, 3, 6, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 50, 51, 69, 77, 129, 134, 135, 146], "40": [0, 8, 11, 13, 17, 18, 19, 22, 29, 31, 32, 33], "psnr": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 79, 137, 141, 146], "linear": [0, 2, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 39, 61, 62, 74, 75, 80, 81, 111, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 128, 129, 137], "rec": [0, 5, 6, 8, 11, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "16": [0, 5, 8, 9, 11, 13, 14, 18, 19, 20, 22, 23, 27, 29, 31, 32, 33], "91": [0, 8, 11, 13, 19, 22, 23, 31, 32], "29": [0, 2, 11, 13, 16, 17, 18, 19, 20, 22, 23, 31, 32], "db": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "19": [0, 2, 5, 8, 11, 13, 15, 17, 18, 19, 22, 23, 24, 25, 29, 31, 32], "75": [0, 7, 8, 11, 13, 18, 19, 22, 24, 31, 32], "75107192993164": 0, "2591548061178632": 0, "9091952641805": 0, "2942947546189876": 0, "total": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 54, 61, 63, 74, 75, 78], "run": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 48, 52, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 91, 131, 132, 133, 134, 136, 139, 140, 143, 144], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 39, 41, 68, 79, 113, 115, 117, 120, 127, 137, 138], "script": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "minut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "828": [0, 9], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 39, 41, 79, 96, 98, 99, 100, 101, 108, 109, 110, 122, 123, 127], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 64], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "demo_custom_prior": [0, 9], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "jupyt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "notebook": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "ipynb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "galleri": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "sphinx": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "deep": [1, 9, 10, 11, 33, 34, 46, 47, 57, 62, 65, 66, 67, 69, 79, 80, 84, 85, 87, 91, 112, 115, 118, 120, 121, 124, 137, 138, 141, 142, 143, 146, 147, 148, 150], "invers": [1, 2, 5, 6, 7, 8, 13, 16, 17, 20, 22, 23, 25, 34, 36, 38, 40, 41, 43, 44, 45, 49, 53, 54, 57, 58, 59, 60, 62, 110, 112, 119, 120, 122, 124, 129, 131, 137], "problem": [1, 2, 6, 8, 17, 22, 23, 27, 28, 31, 34, 36, 39, 41, 43, 44, 45, 67, 74, 75, 77, 78, 79, 81, 96, 113, 116, 117, 119, 121, 129, 131, 133], "natur": [1, 24, 44, 68], "contain": [1, 3, 4, 12, 22, 27, 28, 29, 31, 32, 36, 39, 40, 41, 42, 43, 46, 54, 79, 81, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 127, 134, 135, 136, 143, 144, 148, 152], "set3": 1, "imagefold": 1, "you": [1, 6, 10, 17, 18, 19, 20, 22, 23, 24, 25, 27, 30, 32, 34, 45], "ani": [1, 6, 34, 45, 49, 53, 54, 55, 56, 57, 93, 121, 122, 124, 137, 138, 141, 142], "other": [1, 5, 18, 35, 39, 41, 49, 53, 54, 55, 56, 57, 78, 121, 124, 137, 138, 145], "long": [1, 19, 138], "set": [1, 2, 4, 7, 13, 16, 17, 18, 20, 27, 28, 29, 30, 32, 36, 37, 40, 42, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 66, 67, 68, 69, 70, 72, 73, 78, 82, 84, 89, 92, 93, 94, 118, 120, 121, 124, 125, 126, 130, 134, 136, 137, 138], "up": [1, 4, 6, 27, 28, 30, 32, 40, 68], "oper": [1, 9, 10, 18, 19, 24, 25, 26, 35, 36, 38, 39, 41, 45, 46, 47, 49, 53, 54, 55, 56, 58, 59, 60, 61, 62, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 145, 147, 150], "32": [1, 2, 4, 6, 8, 11, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 63, 113, 128], "batch": [1, 11, 13, 22, 23, 28, 29, 47, 64, 66, 67, 68, 79, 80, 82, 84, 127, 137, 150], "channel": [1, 2, 3, 5, 6, 7, 11, 13, 65, 66, 68, 69, 70, 72, 73, 76, 113, 114, 120, 122, 127, 128, 150], "dimens": [1, 11, 13, 63, 68, 73, 80, 82, 83, 86], "displai": 1, "unsqueez": [1, 6, 7, 11, 13, 17, 20, 80], "zip": [1, 8, 10, 11, 19, 31, 32], "385k": [1, 11, 32], "ib": [1, 8, 11, 22, 31, 32], "17": [1, 8, 11, 13, 16, 18, 19, 22, 23, 24, 29, 30, 31, 32], "64": [1, 2, 5, 6, 7, 8, 11, 12, 13, 14, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 66, 69, 70, 72], "5k": 1, "625kib": 1, "49": [1, 8, 11, 13, 19, 22, 23, 25, 31, 32], "187k": 1, "878kib": 1, "40mib": [1, 32], "denois": [1, 2, 4, 10, 11, 12, 14, 15, 16, 20, 22, 23, 26, 27, 28, 31, 32, 38, 39, 42, 43, 45, 46, 47, 55, 58, 59, 60, 62, 64, 66, 68, 69, 70, 72, 73, 76, 77, 78, 79, 80, 84, 85, 87, 88, 89, 91, 115, 117, 118, 121, 124, 126, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 147], "ignor": [1, 37, 48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "attribut": [1, 18, 92, 93, 94, 118, 152], "e": [1, 3, 6, 10, 12, 16, 17, 18, 22, 23, 24, 25, 35, 36, 37, 39, 40, 41, 42, 43, 47, 49, 50, 51, 53, 54, 55, 56, 57, 66, 69, 70, 77, 79, 80, 81, 82, 83, 84, 86, 89, 91, 111, 112, 113, 114, 116, 118, 120, 121, 122, 126, 129, 131, 134, 135, 136, 138, 141, 142, 143, 144, 146], "label": [1, 25, 28, 39, 41, 68, 79], "physic": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 38, 39, 41, 47, 49, 53, 54, 55, 56, 58, 59, 60, 62, 67, 79, 80, 81, 82, 83, 84, 92, 93, 94, 96, 98, 100, 102, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141], "dinv_dataset_path": [1, 11, 13], "101": [1, 8, 19], "96it": [1, 23, 32], "over": [1, 19, 74, 75, 81, 129], "pair": [1, 8, 23, 31, 35, 36, 46, 47, 56, 137], "signal": [1, 6, 7, 36, 37, 38, 44, 46, 47, 49, 53, 54, 57, 62, 82, 89, 110, 111, 113, 114, 115, 117, 121, 123, 124, 127, 129, 146], "adapt": [1, 44, 55, 58, 59, 60, 68, 73, 74, 75, 79], "build": [1, 10, 12, 20, 21, 37, 43, 45, 71, 80, 84, 87, 89, 91, 112, 115, 118, 121, 124, 134, 136, 143, 144, 146, 147, 148, 150], "custom": [1, 4, 9, 10, 14, 15, 21, 31, 33, 45, 46, 47, 57, 69, 71, 79, 80, 84, 85, 87, 89, 91, 96, 97, 112, 113, 115, 117, 118, 121, 123, 124, 128, 134, 136, 137, 138, 142, 143, 144, 146, 147, 148, 150, 151, 152], "case": [1, 3, 12, 19, 35, 37, 41, 47, 68, 82, 83, 96, 113, 121, 124, 128, 129, 132], "doesn": [1, 89], "t": [1, 3, 18, 19, 28, 29, 68, 71, 74, 81, 86, 89, 90, 119, 127, 132, 133, 137, 141], "meet": [1, 20], "need": [1, 4, 16, 18, 31, 34, 39, 48, 52, 63, 65, 71, 72, 74, 75, 93, 138, 139, 140], "13": [1, 8, 9, 11, 13, 18, 19, 22, 23, 28, 31, 32], "094": [1, 9], "demo_dataset": [1, 9], "noisi": [2, 16, 17, 18, 19, 20, 37, 40, 55, 58, 59, 60, 64, 66, 68, 69, 73, 76, 77, 78, 118, 123, 124, 125, 126, 130], "incomplet": [2, 10, 17, 20, 26, 46, 47, 49, 53, 54, 62, 76, 113, 115, 120, 121, 124, 129, 137, 138, 147], "base": [2, 16, 19, 35, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 145], "ulyanov": [2, 67], "2018": [2, 30, 67], "minim": [2, 23, 28, 31, 39, 41, 67, 74, 79, 95, 96, 132], "loss": [2, 8, 10, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 76, 80, 84, 115, 116, 121, 124, 126, 137, 138, 147], "theta": [2, 8, 23, 31, 41, 67, 132, 133], "af_": [2, 67], "z": [2, 12, 30, 39, 41, 42, 58, 59, 60, 67, 81, 83, 86, 89, 92, 94, 96, 98, 99, 100, 101, 108, 109, 115, 117, 118, 121, 124, 125, 136], "f_": [2, 8, 67], "decod": [2, 65, 66, 67], "network": [2, 9, 10, 18, 19, 20, 38, 41, 43, 46, 47, 50, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 76, 115, 120, 121, 124, 132, 133, 137, 138, 147], "should": [2, 3, 12, 22, 27, 39, 47, 48, 52, 56, 58, 59, 60, 63, 65, 67, 71, 72, 73, 74, 75, 87, 91, 93, 97, 111, 113, 115, 117, 119, 121, 122, 123, 128, 129, 131, 134, 136, 137, 139, 140, 142, 143, 144, 150], "earli": [2, 13, 67], "avoid": [2, 16, 67, 134], "overfit": [2, 67], "adam": [2, 8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 67], "optim": [2, 4, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 41, 42, 43, 67, 69, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 115, 118, 121, 124, 128, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152], "load_url_imag": [2, 12, 14, 16, 17, 18, 19, 20], "lionel": [2, 16, 17, 20], "messi": [2, 16, 17, 20], "wikipedia": [2, 16, 17, 20, 113, 121, 129], "url": [2, 4, 7, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 73, 148], "http": [2, 4, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 45, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 68, 69, 73, 74, 75, 93, 113, 117, 119, 121, 127, 129, 131, 132, 133, 135, 136, 137, 138], "upload": [2, 16, 17, 20], "wikimedia": [2, 16, 17, 20], "org": [2, 16, 17, 20, 49, 50, 51, 52, 54, 58, 59, 60, 62, 69, 113, 117, 119, 121, 127, 129, 131, 132, 133, 135, 136], "common": [2, 16, 17, 20, 27, 32, 39], "b": [2, 3, 4, 11, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 29, 31, 58, 59, 60, 71, 73, 80, 82, 84, 122, 127, 134, 135, 136, 146, 150], "b4": [2, 16, 17, 20], "argentina": [2, 16, 17, 20], "2022": [2, 16, 17, 20], "fifa": [2, 16, 17, 20], "world": [2, 16, 17, 20], "cup_": [2, 16, 17, 20], "28crop": [2, 16, 17, 20], "jpg": [2, 16, 17, 20], "_c": [2, 7, 20], "0x7f8436571b90": [2, 7, 20], "inpaint": [2, 4, 8, 10, 17, 19, 20, 23, 33, 45, 46, 47, 57, 78, 80, 82, 85, 87, 115, 121, 124, 137, 138, 142, 144, 147], "level": [2, 3, 4, 7, 12, 14, 16, 17, 18, 19, 20, 28, 31, 32, 37, 39, 42, 64, 66, 68, 69, 73, 76, 77, 78, 84, 86, 89, 127, 131, 132, 133, 135, 136], "mask": [2, 4, 6, 7, 8, 16, 17, 19, 20, 22, 23, 24, 31, 55, 56, 115, 120, 122], "tensor_s": [2, 7, 17, 19, 20, 23, 120], "appli": [2, 12, 16, 17, 18, 19, 20, 22, 30, 32, 39, 64, 68, 79, 89, 117, 120, 122, 123, 127, 128], "onli": [2, 6, 8, 11, 12, 13, 16, 18, 19, 22, 23, 24, 25, 27, 30, 31, 39, 47, 66, 67, 68, 69, 70, 72, 73, 77, 78, 80, 87, 132, 134, 137, 138, 141, 150], "work": [2, 3, 4, 8, 13, 17, 18, 19, 22, 28, 31, 67], "certain": [2, 35, 67], "recommend": [2, 4, 5, 6, 8, 18, 22, 24, 25, 28, 31, 39, 45, 67, 113, 121, 128], "convdecod": [2, 67], "learn": [2, 8, 11, 13, 26, 31, 33, 34, 37, 41, 46, 47, 49, 53, 54, 57, 62, 66, 67, 69, 76, 77, 78, 80, 84, 85, 87, 93, 96, 97, 113, 115, 117, 118, 120, 121, 122, 124, 137, 138, 139, 142, 144, 147, 152], "rate": [2, 67, 72, 73, 138], "manual": [2, 14], "obtain": [2, 5, 7, 16, 20, 42, 43, 131, 132, 133, 134, 135], "good": [2, 8, 31, 129], "howev": [2, 22, 49, 53, 54, 55, 56, 57, 67, 123], "valu": [2, 5, 6, 7, 16, 17, 18, 22, 25, 27, 28, 29, 39, 40, 42, 44, 58, 59, 60, 67, 68, 73, 74, 79, 81, 89, 91, 112, 115, 122, 128, 129, 131, 133, 135, 136, 138, 143, 144, 146, 150], "mai": [2, 3, 39, 41, 67, 79, 96], "experi": [2, 67], "small": [2, 25, 27, 30, 32, 39, 59, 60, 74, 129], "reduc": [2, 18, 19, 22, 23, 24, 25], "runtim": 2, "could": 2, "improv": [2, 62], "more": [2, 4, 16, 31, 39, 40, 41, 43, 77, 79, 91, 113, 121, 124, 129, 135, 136, 137, 138, 141, 143, 144], "lr": [2, 8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "per": [2, 3, 17, 20, 22, 23, 41, 66, 68, 69, 72, 127, 128, 139, 140], "layer": [2, 22, 30, 32, 43, 63, 65, 66, 68, 69, 72, 73, 76], "in_siz": [2, 65], "size": [2, 3, 7, 8, 11, 13, 16, 18, 19, 20, 22, 27, 28, 29, 31, 32, 38, 39, 40, 43, 44, 47, 56, 58, 59, 60, 65, 67, 68, 71, 73, 79, 80, 81, 82, 83, 84, 93, 95, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 127, 128, 129, 135, 136, 141, 145, 146, 148, 150], "backbon": [2, 8, 28, 43], "img_shap": [2, 7, 12, 28, 29, 35, 40, 65, 113, 128], "f": [2, 3, 5, 6, 12, 14, 16, 17, 18, 20, 35, 39, 41, 43, 50, 51, 59, 71, 74, 79, 80, 81, 83, 84, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 115, 121, 122, 133, 134, 143, 144], "deepimageprior": [2, 65], "learning_r": [2, 8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 67], "input_s": [2, 67], "somewhat": 2, "surpris": 2, "sinc": [2, 16, 19, 20, 48, 52, 63, 65, 71, 72, 74, 75, 81, 82, 83, 113, 128, 139, 140], "mani": [2, 43, 45, 117], "potenti": [2, 13, 29], "data": [2, 35, 36, 38, 41, 43, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 72, 79, 80, 81, 82, 83, 84, 86, 91, 92, 93, 94, 96, 98, 100, 102, 104, 106, 108, 132, 133, 137, 138, 139, 140, 143, 144], "architectur": [2, 4, 8, 18, 22, 24, 25, 27, 31, 32, 37, 43, 45, 62, 63, 65, 66, 69, 70, 72, 73, 76], "act": [2, 25, 39, 40, 79], "implicit": [2, 39, 41, 43, 87, 141], "provid": [2, 6, 7, 12, 13, 14, 16, 37, 43, 44, 47, 123, 129, 137], "while": [2, 6, 22, 39, 41, 48, 52, 63, 65, 71, 72, 74, 75, 79, 139, 140], "phenomenon": 2, "yet": 2, "well": [2, 5, 6, 19, 45, 49, 53, 54, 55, 56, 57, 65, 81, 96, 137, 142], "understood": 2, "some": [2, 6, 7, 16, 19, 37, 40, 44, 121, 124], "effort": 2, "explain": [2, 45], "For": [2, 4, 8, 12, 14, 18, 19, 22, 27, 28, 29, 30, 31, 32, 35, 39, 41, 74, 79, 87, 127, 135, 136, 141], "see": [2, 3, 16, 19, 20, 25, 28, 29, 31, 38, 39, 40, 43, 54, 55, 56, 59, 60, 65, 74, 75, 77, 79, 81, 91, 92, 113, 121, 124, 127, 128, 137, 138, 141, 142, 143, 144], "neural": [2, 8, 19, 20, 30, 41, 50, 65], "tangent": 2, "link": [2, 10, 18, 38, 68, 134, 135, 136], "cnn": [2, 11, 66], "non": [2, 20, 111, 113, 115, 117, 119, 121, 123, 124, 129, 142], "local": [2, 24, 34], "x_lin": [2, 12, 14, 16, 17, 20], "a_adjoint": [2, 4, 6, 7, 12, 14, 16, 17, 20, 30, 31, 40, 79, 80, 81, 84, 111, 113, 115, 117, 121, 123, 129], "print": [2, 4, 5, 6, 8, 12, 14, 16, 17, 20, 22, 23, 24, 25, 31, 50, 51, 67, 74, 75, 79, 80, 84, 121, 131, 132, 133, 134, 135, 136], "cal_psnr": [2, 12, 14, 16, 17, 20], "2f": [2, 5, 6, 12, 14, 16, 17, 20, 50], "titl": [2, 3, 5, 6, 7, 12, 14, 16, 17, 18, 19, 20, 123, 150], "ground": [2, 8, 12, 14, 16, 17, 18, 19, 20, 28, 29, 31, 57, 79, 81, 137, 138, 141], "truth": [2, 8, 12, 14, 16, 17, 18, 19, 20, 28, 29, 31, 57, 79, 81, 137, 141], "92": [2, 8, 11, 13, 19, 22, 23, 24, 31, 32], "16it": 2, "20": [2, 4, 7, 11, 13, 17, 18, 19, 22, 23, 24, 25, 27, 28, 31, 32, 69, 146], "96": [2, 6, 11, 13, 19, 22, 23, 31, 32], "33it": [2, 25], "98": [2, 8, 11, 13, 19, 22, 23, 24, 27, 31, 32], "67it": [2, 18, 19, 23], "42": [2, 8, 11, 13, 19, 20, 22, 23, 28, 29, 32], "99": [2, 11, 13, 19, 22, 23, 32], "77it": [2, 18, 19], "76it": [2, 19, 22], "63": [2, 8, 11, 13, 17, 18, 19, 20, 22, 32], "39it": [2, 17], "74": [2, 11, 13, 19, 22, 23, 25, 31, 32], "43it": 2, "84": [2, 11, 13, 19, 20, 22, 23, 30, 31, 32], "29it": [2, 23], "94": [2, 8, 11, 13, 19, 22, 23, 28, 31, 32], "46it": [2, 24], "01": [2, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 31, 32, 33, 58, 59, 60, 67], "63it": [2, 19, 22], "8": [2, 5, 8, 11, 13, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 73, 137, 138], "58": [2, 8, 11, 13, 19, 22, 23, 29, 31, 32], "399": [2, 9], "demo_dip": [2, 9], "singlephotonlidar": 3, "matplotlib": [3, 18, 28], "pyplot": [3, 18, 28], "plt": [3, 18, 28], "bin": [3, 127], "pixel": [3, 4, 8, 12, 17, 19, 20, 25, 28, 29, 31, 40, 63, 66, 70, 120, 121, 124, 127, 128, 129, 146], "impuls": [3, 127], "respons": [3, 127], "defin": [3, 5, 6, 18, 22, 23, 24, 25, 35, 39, 40, 41, 43, 48, 49, 52, 53, 54, 57, 63, 65, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 93, 94, 96, 98, 99, 100, 101, 102, 106, 108, 109, 116, 117, 119, 121, 122, 124, 125, 126, 129, 130, 132, 134, 139, 140], "y_": [3, 127], "j": [3, 19, 74, 75, 79, 113, 127], "mathcal": [3, 18, 19, 20, 23, 31, 36, 42, 58, 59, 60, 82, 89, 113, 118, 125, 126, 127, 130, 132, 133, 136], "h": [3, 29, 67, 73, 81, 111, 112, 113, 117, 120, 122, 127, 128, 146, 150], "d_": [3, 31, 127, 132, 133], "r_": [3, 16, 23, 127], "b_": [3, 127], "poisson": [3, 7, 24, 25, 42, 59, 60, 86, 125, 126, 127], "scene": [3, 119, 127], "intens": [3, 119, 127], "background": [3, 86, 127], "irf_sigma": 3, "peak": [3, 127, 146], "locat": 3, "around": [3, 44], "50th": 3, "ratio": [3, 7, 56, 73, 146], "w": [3, 11, 19, 29, 30, 67, 73, 86, 108, 109, 110, 111, 112, 113, 120, 122, 127, 128, 137, 146, 150], "first": [3, 5, 7, 11, 13, 18, 19, 29, 30, 39, 41, 61, 79, 80, 96, 98, 99, 100, 101, 108, 109, 110, 122, 123, 127, 128, 137, 150], "third": [3, 127], "associ": [3, 7, 18, 35, 47, 49, 53, 54, 55, 56, 58, 59, 60, 79, 80, 81, 84, 134], "sbr": 3, "50": [3, 4, 8, 11, 13, 17, 18, 19, 22, 23, 24, 31, 32, 51, 73, 79, 80, 81, 87, 121, 124, 127, 141], "bkg_level": 3, "d": [3, 16, 20, 31, 39, 42, 50, 52, 61, 68, 74, 75, 80, 82, 83, 84, 85, 86, 88, 89, 113, 119, 127], "ones": [3, 4, 6, 7, 16, 18, 19, 28, 31, 41, 44, 129, 149], "r": [3, 6, 12, 13, 16, 18, 19, 24, 25, 30, 31, 39, 41, 50, 51, 55, 56, 58, 59, 60, 66, 70, 71, 74, 79, 82, 86, 113, 115, 120, 127, 137], "ones_lik": 3, "cat": [3, 6, 7, 19, 76], "shown": [3, 41], "blue": 3, "red": [3, 10, 15, 46, 47, 70, 79, 80, 84, 87, 89, 91, 117, 118, 121, 124, 137, 147], "xhat": [3, 17, 18, 19, 79], "a_dagg": [3, 5, 6, 7, 40, 110, 113, 115, 119, 121, 123, 124, 127, 129], "figur": [3, 18], "subplot": [3, 18], "detach": [3, 4, 18, 19, 28, 31], "numpi": [3, 16, 17, 18, 19, 131], "stem": 3, "linefmt": 3, "markerfmt": 3, "tight_layout": [3, 18], "home": [3, 4, 11, 13, 14, 18, 19, 20, 22, 23, 24, 25, 28, 31], "runner": [3, 4, 11, 13, 14, 18, 19, 20, 22, 23, 24, 25, 28, 31], "77": [3, 8, 11, 13, 18, 19, 22, 23, 31, 32], "userwarn": [3, 4, 18, 22, 28, 31], "pad": [3, 8, 22, 23, 24, 25, 27, 30, 32, 71, 76, 110, 111, 112, 117, 123, 139, 140], "same": [3, 4, 16, 22, 23, 24, 25, 31, 39, 71, 79, 80, 82, 83, 86, 91, 110, 111, 113, 117, 123, 143, 144, 146, 149, 150, 153, 154, 155], "even": [3, 19], "length": [3, 4, 22, 28, 29, 31, 32, 79, 150], "odd": 3, "dilat": [3, 8, 23, 24, 25], "requir": [3, 6, 12, 16, 17, 22, 31, 39, 41, 79, 89, 93, 131, 133, 134, 135, 136], "zero": [3, 5, 6, 7, 16, 18, 19, 29, 44, 78, 120, 139, 155], "copi": [3, 4, 18, 27, 28, 29, 31, 32], "trigger": 3, "intern": [3, 13, 80, 86, 87], "aten": 3, "src": 3, "nativ": 3, "cpp": 3, "1008": 3, "nn": [3, 4, 7, 16, 28, 29, 31, 37, 40, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 67, 73, 113, 116, 120, 123, 128, 131, 132, 133, 134, 135, 136, 137, 138, 152], "conv1d": 3, "irf": 3, "368": [3, 9], "demo_lidar": [3, 9], "wai": [4, 22, 23, 24, 25, 34, 45], "purpos": 4, "unfold": [4, 22, 23, 27, 30, 33, 45, 46, 47, 57, 69, 78, 80, 82, 84, 85, 87, 115, 117, 118, 120, 121, 124, 137, 138, 141, 142, 143, 144, 147, 152], "chambol": [4, 10, 30, 33, 46, 47, 57, 74, 75, 78, 80, 82, 85, 87, 91, 93, 108, 109, 115, 120, 121, 124, 137, 138, 142, 143, 144, 147], "pock": [4, 10, 30, 33, 46, 47, 57, 74, 75, 78, 80, 82, 85, 87, 91, 93, 108, 109, 115, 120, 121, 124, 137, 138, 142, 143, 144, 147], "algorithm": [4, 6, 10, 15, 21, 22, 31, 33, 39, 42, 45, 46, 47, 57, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 112, 113, 115, 117, 118, 121, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152], "its": [4, 6, 12, 18, 28, 29, 30, 31, 36, 40, 74, 75, 79, 118, 126], "describ": [4, 11, 20, 23, 110, 120, 121, 124, 131, 132, 133], "constrain": [4, 10, 33, 46, 47, 57, 78, 80, 82, 85, 87, 115, 120, 121, 124, 137, 138, 142, 144, 147], "indicatorl2": [4, 31], "prior": [4, 9, 10, 11, 12, 14, 22, 27, 28, 31, 32, 33, 38, 42, 43, 45, 46, 47, 57, 65, 66, 67, 79, 80, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 101, 103, 105, 107, 109, 112, 113, 115, 118, 120, 121, 124, 134, 135, 136, 137, 138, 142, 143, 144, 146, 147, 148, 150, 152], "pnp": [4, 10, 15, 21, 22, 27, 28, 31, 39, 45, 46, 47, 50, 66, 69, 79, 80, 84, 87, 89, 91, 96, 112, 115, 118, 120, 121, 124, 128, 129, 133, 134, 136, 137, 138, 146, 147, 148, 150, 151], "unfolded_build": [4, 22, 28, 29, 30, 31, 32, 43], "online_weights_path": [4, 22, 23, 24, 25], "dataset": [4, 9, 10, 14, 19, 36, 45, 46, 47, 115, 116, 118, 121, 124, 137, 147, 150], "degrad": [4, 14, 24, 25], "ckpt_dir": [4, 8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "ckpt": [4, 8, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "miss": 4, "rather": [4, 18, 28, 31, 42, 44, 89], "complex": [4, 7, 113, 122, 128], "consist": [4, 7, 12, 18, 19, 22, 23, 31, 38, 43, 53, 54, 55, 56, 57, 79, 123], "radiu": [4, 31, 82, 83], "trainabl": [4, 8, 22, 23, 24, 25, 27, 28, 29, 31, 32, 43, 55, 56, 58, 59, 60, 76, 142], "soft": [4, 10, 29, 31, 33, 46, 47, 57, 77, 78, 80, 83, 84, 85, 87, 97, 113, 121, 124, 137, 138, 142, 144, 147, 152], "threshold": [4, 10, 29, 31, 33, 46, 47, 57, 77, 78, 79, 80, 83, 84, 85, 87, 97, 113, 121, 124, 134, 136, 137, 138, 142, 144, 147, 152], "wavelet": [4, 28, 31, 77, 78], "basi": [4, 28, 31], "If": [4, 5, 6, 22, 23, 28, 29, 31, 34, 45, 47, 52, 56, 58, 59, 60, 62, 66, 67, 68, 69, 70, 72, 73, 78, 79, 82, 89, 91, 92, 93, 94, 96, 104, 105, 110, 111, 113, 115, 117, 120, 121, 123, 124, 126, 128, 129, 134, 135, 136, 138, 141, 143, 144, 146, 148, 150], "initi": [4, 13, 18, 19, 22, 27, 28, 29, 31, 32, 66, 67, 68, 69, 70, 72, 73, 79, 81, 124, 132, 133, 152], "list": [4, 5, 7, 18, 19, 22, 23, 27, 28, 29, 30, 31, 32, 39, 44, 45, 47, 54, 66, 67, 70, 72, 77, 79, 91, 110, 111, 113, 115, 117, 119, 123, 124, 129, 131, 137, 138, 142, 143, 144, 145, 150], "distinct": [4, 22, 28, 29, 30, 31, 32, 39, 79, 91, 143, 144], "each": [4, 16, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 39, 55, 59, 60, 64, 67, 72, 73, 77, 78, 79, 81, 91, 96, 121, 124, 138, 142, 143, 144, 150], "cp": [4, 31, 39, 91, 143, 144], "fix": [4, 11, 22, 27, 28, 29, 31, 32, 39, 41, 43, 79, 81, 96, 121, 124, 141], "across": [4, 22, 28, 29, 31, 32, 47, 79, 128, 138, 141], "singl": [4, 9, 10, 12, 17, 22, 24, 27, 28, 29, 30, 31, 32, 39, 44, 47, 55, 79, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 121, 122, 124, 127, 128, 143, 144, 145, 147, 150], "30": [4, 8, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25, 28, 31, 32], "unrol": [4, 22, 27, 28, 29, 30, 31, 32, 37, 43, 137, 138, 141], "waveletprior": [4, 28, 31, 77], "wv": [4, 28, 31, 77, 78], "db8": [4, 28, 31, 77, 78], "rang": [4, 6, 9, 10, 18, 19, 22, 23, 28, 30, 31, 51, 68, 73, 81, 124, 127, 133, 138, 139, 147], "lamb": [4, 11, 12, 13, 22, 27, 28, 29, 31, 32, 80, 87], "sigma_denois": [4, 11, 13, 20, 22, 27, 28, 31, 32, 85, 88], "g_param": [4, 11, 12, 13, 14, 16, 22, 27, 28, 29, 30, 31, 32, 39, 81, 109, 142], "k": [4, 7, 11, 12, 16, 20, 28, 29, 30, 31, 39, 41, 43, 74, 77, 78, 79, 81, 92, 93, 94, 95, 96, 97, 135, 136, 142], "k_adjoint": [4, 30, 31], "trainable_param": [4, 22, 27, 28, 29, 31, 32, 142], "becaus": [4, 31], "custom_init_cp": [4, 31], "x_init": [4, 31, 79, 81, 124, 132, 133, 134], "u_init": [4, 31], "est": [4, 12, 30, 31, 79, 81, 92, 93, 94, 96], "custom_init": [4, 30, 31, 79], "39": [4, 8, 11, 13, 19, 22, 23, 24, 28, 29, 31, 32, 33], "To": [4, 18, 22, 27, 28, 30, 31, 32, 87], "construct": [4, 18, 28, 31, 40, 118, 126], "tensor": [4, 5, 6, 7, 12, 13, 18, 19, 22, 28, 30, 31, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 141, 145, 146, 148, 149, 150, 153, 154, 155], "sourcetensor": [4, 18, 28, 31], "clone": [4, 18, 19, 28, 31], "requires_grad_": [4, 18, 19, 28, 31, 51], "el": [4, 28, 31], "param_valu": [4, 28, 31], "state_dict": [4, 22, 23, 24, 25, 31], "model_nontrain": 4, "pth": [4, 11, 14, 20, 22, 23, 24, 25, 31, 113, 120, 128], "pgd": [4, 13, 14, 27, 28, 29, 31, 39, 41, 43, 79, 81, 91, 96, 97, 106, 107, 141, 143, 144], "prior_new": [4, 31], "params_algo_new": [4, 31], "model_new": [4, 31], "init": 4, "n": [4, 13, 18, 19, 20, 23, 38, 40, 42, 50, 51, 58, 59, 68, 89, 113, 115, 118, 120, 121, 123, 124, 125, 128, 132, 133, 136, 146], "demo_unfolded_cp_2": 4, "ckpt_state_dict": 4, "hub": [4, 11, 13, 14, 19, 20, 22, 23, 24, 25], "load_state_dict_from_url": [4, 22, 23, 24, 25], "map_loc": [4, 22, 23, 24, 25], "storag": [4, 22, 23, 24, 25], "loc": [4, 22, 23, 24, 25], "file_nam": [4, 22, 23, 24, 25], "load_state_dict": [4, 22, 23, 24, 25, 31, 113, 120, 128], "after": [4, 16, 34, 73, 81, 134, 152], "0100": 4, "requires_grad": [4, 51], "mycor": [4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25], "core": [4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25], "cloud": [4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25], "net": [4, 8, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 66, 76], "index": [4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25], "php": [4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25], "9ezdqcjxqujkyul": [4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25], "2fweight": [4, 11, 13, 14, 19, 20, 22, 23, 24, 25], "file": [4, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 33, 39, 46, 113, 120, 128, 148], "cach": [4, 11, 13, 14, 19, 20, 22, 23, 24, 25], "66": [4, 8, 11, 13, 14, 19, 22, 23, 31, 32], "8k": 4, "761kb": 4, "0545": 4, "0512": 4, "0481": 4, "0484": 4, "0526": 4, "0535": 4, "0427": 4, "416": [4, 9], "demo_load": [4, 9], "gener": [4, 7, 10, 12, 13, 14, 19, 35, 37, 41, 43, 47, 49, 54, 67, 74, 82, 83, 93, 96, 113, 124, 131, 132, 133, 134, 138, 139, 140], "new": [5, 6, 16, 31, 122, 134], "particular": [5, 43, 93, 129], "pan": 5, "sharpen": 5, "downsampl": [5, 7, 13, 27, 30, 32, 66, 70, 76, 123], "grayscal": [5, 6, 7, 12, 14, 40, 114, 123, 148], "exist": [5, 43, 113, 120, 121, 124, 128, 129], "mathemat": 5, "equival": [5, 19], "begin": [5, 12, 18, 19, 31, 39, 41, 43, 79, 82, 92, 93, 94, 95, 97, 121, 124, 132, 133, 141, 142], "bmatrix": [5, 121, 124], "y_1": [5, 56], "y_2": [5, 56], "a_1": [5, 24, 55, 56, 121, 124], "a_2": [5, 24, 55, 56, 121, 124], "two": [5, 18, 19, 22, 23, 24, 39, 41, 55, 56, 80, 84, 86, 87, 96, 110, 121, 124, 129, 145], "one": [5, 19, 23, 39, 41, 45, 46, 48, 50, 51, 52, 63, 65, 71, 72, 74, 75, 119, 134, 135, 136, 139, 140], "anoth": 5, "convert": [5, 6, 17, 68, 114, 148], "pansharpen": [5, 7], "factor": [5, 7, 13, 28, 29, 30, 32, 73, 82, 84, 117, 122, 123], "physics1": 5, "physics2": [5, 6], "decolor": [5, 6], "physics_stack": 5, "tensorlist": [5, 121, 123, 124, 149, 153, 154, 155], "ad": [5, 10, 18, 38, 44, 118, 125, 126, 130], "multipli": [5, 32, 39, 44, 92, 145], "etc": [5, 6, 16, 22, 39, 41, 42, 43, 44, 45, 47, 49, 81, 145], "It": [5, 22, 38, 41, 43, 44, 47, 49, 61, 68, 69, 84, 112, 113, 117, 118, 121, 123, 124, 125, 126, 128, 130, 131, 145], "also": [5, 6, 7, 17, 19, 22, 25, 28, 29, 34, 39, 41, 42, 44, 45, 47, 66, 68, 69, 70, 72, 73, 78, 83, 87, 89], "possibl": [5, 27, 34, 68, 69, 79, 123, 141, 146], "fill": [5, 149, 153, 154, 155], "line": [5, 10, 122, 129], "similarli": [5, 31, 39, 87], "48": [5, 8, 11, 13, 16, 19, 22, 23, 32], "xlin": [5, 6], "pseudo": [5, 6, 40, 62, 112, 120, 122, 129], "high": [5, 7, 123], "re": [5, 7, 67, 122, 123], "low": [5, 7, 12, 42, 89, 117, 123], "transpos": [5, 6, 62, 66, 70, 79, 80, 81, 84, 111, 113, 115, 117, 121, 123, 129], "linearphys": [5, 6, 40, 79, 80, 81, 84, 111, 113, 115, 117, 123, 129, 132, 133], "adjointness_test": [5, 6, 121], "unit": [5, 6, 18, 113, 121], "compute_norm": [5, 6, 121, 136], "power": [5, 6, 18, 50, 51, 68, 121, 128], "68": [5, 11, 13, 19, 22, 23, 24, 31, 32], "physics_concat": 5, "11": [5, 8, 11, 13, 18, 19, 22, 23, 27, 28, 29, 31, 32], "192": [5, 9, 19], "demo_pansharpen": [5, 9], "offer": 6, "larg": [6, 40, 45, 67, 68, 74, 113], "might": [6, 133], "want": [6, 50, 51], "your": [6, 9, 10, 12, 21, 34, 45, 46, 47, 71, 80, 84, 87, 89, 112, 115, 116, 118, 121, 124, 134, 136, 146, 147, 148, 150], "own": [6, 9, 10, 12, 30, 46, 47, 66, 68, 69, 70, 72, 73, 115, 116, 118, 121, 124, 147, 150], "walk": 6, "through": [6, 19, 49, 50, 51], "creation": 6, "rgb": [6, 7, 114, 119, 123], "averag": [6, 17, 20, 66, 70], "exploit": [6, 16, 24, 25], "singular": [6, 16, 17, 40, 112, 115, 122, 128, 131], "decomposit": [6, 16, 17, 40, 77, 78, 112, 115, 120, 122, 128, 131], "speed": [6, 47], "evalu": [6, 17, 19, 27, 28, 29, 37, 51, 81, 138], "remain": [6, 18], "structur": [6, 40, 66, 122], "onc": [6, 8, 19, 31, 79], "adjoint": [6, 14, 31, 38, 40, 121, 129], "must": [6, 7, 12, 14, 51, 66, 114, 131, 133, 145], "colour": [6, 114], "2989": 6, "5870": 6, "1140": 6, "128": [6, 8, 19, 22, 23, 24, 25, 31, 66, 68, 70, 73], "mea": 6, "close": [6, 16, 17, 40, 77, 78, 82, 83, 113, 117, 121, 124, 129], "form": [6, 8, 17, 29, 34, 39, 40, 41, 43, 77, 78, 79, 81, 82, 83, 96, 112, 113, 121, 122, 124, 129, 142], "svd": [6, 115, 120], "implement": [6, 7, 10, 12, 21, 28, 29, 30, 39, 41, 45, 68, 73, 80, 81, 84, 86, 87, 93, 96, 112, 115, 118, 120, 121, 124, 131, 132, 133, 147, 148, 150], "decomposablephys": [6, 16, 17, 40, 112, 114, 116, 120, 122, 128, 131], "so": [6, 19, 32, 122], "decolorizesvd": 6, "447": 6, "v_adjoint": [6, 16, 115], "6687": 6, "3132": 6, "2550": 6, "v": [6, 12, 16, 43, 79, 80, 81, 84, 96, 115, 141], "y2": [6, 40], "xlin2": 6, "main": [6, 34], "solut": [6, 39, 41, 43, 75, 77, 78, 79, 81, 96, 113, 121, 129, 141], "moreov": [6, 19, 79], "sampl": [6, 13, 19, 21, 23, 28, 29, 45, 49, 54, 71, 72, 80, 84, 87, 89, 112, 113, 115, 118, 120, 121, 122, 124, 129, 131, 132, 133, 134, 135, 136, 138, 146, 147, 148, 150], "ddrm": [6, 17], "start": [6, 22, 23, 24, 25, 96, 104, 105], "xprox": 6, "prox_l2": [6, 40, 115, 117, 121], "elaps": [6, 16, 17, 20], "xprox2": 6, "2e": 6, "74e": 6, "450": [6, 9], "demo_phys": [6, 9], "deepinvers": [7, 34, 46], "restrict": [7, 41, 129, 132], "ourselv": 7, "2d": [7, 122, 128, 139, 140], "found": [7, 17, 77], "request": [7, 34], "imageio": 7, "v2": 7, "imread": 7, "io": [7, 74, 75], "bytesio": 7, "logo": 7, "cnr": 7, "www": 7, "iuem": 7, "univ": 7, "brest": 7, "fr": 7, "intranet": 7, "commun": [7, 34], "tutel": 7, "poster": 7, "png": [7, 14, 18, 19, 150], "get": [7, 18, 19, 22, 23, 24, 25, 34, 68, 132, 133], "content": 7, "255": [7, 18, 19, 20, 73], "dtype": [7, 18, 19, 29, 79, 81, 113, 121, 128, 129], "float": [7, 29, 39, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 64, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 96, 115, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 146], "permut": 7, "interpol": [7, 13, 19, 50, 129], "ident": [7, 12, 50, 79, 81, 116, 121, 124, 134, 135, 136], "poissonnois": [7, 24, 25], "result": [7, 18, 19, 43, 44, 121, 124, 133, 135, 136, 137, 138], "unless": 7, "explicit": [7, 9, 10, 13, 29, 45, 46, 47, 79, 80, 84, 87, 91, 112, 115, 118, 121, 124, 135, 137, 147], "consid": [7, 19], "compressedsens": [7, 28, 29, 35, 40], "matrix": [7, 16, 28, 29, 51, 111, 113, 115, 117, 120, 121, 123, 128, 129], "take": [7, 16, 18, 19, 25, 36, 37, 39, 41, 48, 52, 59, 60, 63, 65, 66, 68, 71, 72, 74, 75, 81, 96, 129, 138, 139, 140], "2048": 7, "64x64": [7, 18, 19], "correspond": [7, 13, 18, 19, 28, 29, 37, 39, 79, 93, 96, 121, 122, 124], "m": [7, 12, 25, 28, 29, 34, 35, 38, 40, 56, 58, 59, 60, 113, 115, 120, 121, 124, 128, 135], "fast": [7, 28, 29, 63, 112, 113, 120, 122, 128, 140], "channelwis": [7, 113], "spars": [7, 64], "radon": [7, 129], "mix": [7, 25], "img_width": [7, 14, 129], "angl": [7, 14, 129, 139], "poissongaussiannois": 7, "gain": [7, 25, 59, 60, 86, 125, 126], "min": [7, 19, 31, 39, 41, 74, 75, 77, 78, 79, 93, 121, 150], "max": [7, 17, 19, 20, 52, 66, 70, 150], "sinogram": 7, "backproject": 7, "subsampl": [7, 113, 117, 122, 128], "indic": [7, 31, 47, 78, 81, 82, 134], "coeffici": [7, 77, 78], "cartesian": 7, "approxim": [7, 16, 20, 29, 42, 58, 59, 60, 89, 129, 132, 135], "real": [7, 22, 122], "part": [7, 22, 43, 66, 122], "imaginari": [7, 22, 122], "rand": [7, 40, 118, 150], "int": [7, 8, 16, 18, 20, 22, 23, 24, 25, 27, 30, 31, 32, 47, 50, 51, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 110, 113, 117, 121, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 148, 150], "x2": [7, 74, 75], "zeros_lik": [7, 29], "space": [7, 22, 63, 129], "singlepixelcamera": [7, 12], "binari": [7, 23, 120, 122, 128], "pattern": [7, 11], "hadamard": [7, 12, 128], "degre": [7, 22, 129, 139], "693": [7, 9], "demo_physics_tour": [7, 9], "32x32": [8, 31], "avail": [8, 31, 37, 66, 68, 69, 70, 72, 73, 77, 78, 82, 83], "128x128": [8, 22, 31], "train_dataset_nam": [8, 22, 24, 25, 27, 28, 29, 30, 31, 32], "test_dataset_nam": [8, 27, 30, 31, 32], "test_transform": [8, 27, 30, 31, 32], "train_transform": [8, 27, 30, 31, 32], "randomcrop": [8, 27, 30, 31, 32], "8m": [8, 11, 13, 19, 22, 23, 31, 32], "93": [8, 11, 13, 18, 19, 22, 27, 31, 32], "2k": [8, 32], "37": [8, 11, 13, 18, 19, 22, 23, 24, 27, 30, 31, 32], "526kib": 8, "388k": 8, "60mib": 8, "683k": 8, "08": [8, 11, 13, 19, 22, 23, 31, 32], "13mib": [8, 32], "01m": 8, "07": [8, 11, 13, 15, 19, 22, 23, 25, 27, 31, 32], "38mib": [8, 32], "6": [8, 11, 13, 17, 18, 19, 22, 23, 27, 28, 30, 31, 32, 73], "27m": [8, 11, 22, 23, 25, 31, 32], "27mib": [8, 22], "64m": [8, 22], "69mib": [8, 32], "94m": [8, 19, 22], "79mib": [8, 22, 31, 32], "28m": [8, 11, 13], "80mib": [8, 22, 31, 32], "57m": [8, 22, 31], "61mib": [8, 22, 31], "15": [8, 11, 13, 16, 18, 19, 22, 23, 27, 30, 31, 32, 73], "89mib": [8, 22, 32], "24m": [8, 13, 19, 22], "92mib": [8, 22, 31, 32], "18": [8, 11, 13, 17, 18, 19, 22, 23, 24, 25, 27, 29, 31, 32], "53m": 8, "90mib": [8, 22, 31, 32], "83m": [8, 11, 22, 23, 25], "12m": [8, 11, 14, 22], "67mib": [8, 32], "22": [8, 11, 12, 13, 16, 18, 19, 22, 23, 24, 27, 28, 29, 31, 32], "43m": [8, 13, 14, 19, 20, 23], "78mib": [8, 22, 31, 32], "24": [8, 11, 13, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33], "72m": [8, 13, 22, 23], "25": [8, 11, 13, 16, 18, 19, 22, 23, 25, 27, 29, 31, 32, 73, 133], "02m": [8, 11, 13, 23, 24, 25], "84mib": [8, 22, 31, 32], "27": [8, 11, 13, 18, 19, 22, 23, 27, 30, 31, 32, 33], "31m": [8, 13, 19, 32], "02": [8, 9, 11, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 68, 133], "87mib": [8, 22, 31, 32], "60m": [8, 13, 20], "74mib": [8, 22, 31, 32], "89m": [8, 13, 19], "77mib": [8, 22, 32], "19m": [8, 31], "04": [8, 11, 13, 14, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33], "49m": 8, "88mib": [8, 22, 31, 32], "34": [8, 11, 13, 17, 19, 21, 22, 23, 24, 31, 32], "78m": [8, 13], "85mib": [8, 22, 31, 32], "08m": [8, 22], "37m": [8, 25], "66m": [8, 19, 31], "81mib": [8, 22, 31, 32], "96m": [8, 11, 23], "25m": [8, 19, 22], "43": [8, 11, 13, 18, 19, 22, 27, 31, 32], "55m": [8, 11, 14, 22, 25, 32], "86mib": [8, 22, 31, 32], "85m": [8, 13, 19, 22], "46": [8, 11, 13, 19, 22, 23, 25, 26, 28, 31, 32], "9": [8, 11, 13, 14, 17, 18, 19, 20, 22, 23, 25, 27, 28, 30, 31, 32, 56, 71, 79], "14m": [8, 20, 24, 25], "51": [8, 11, 13, 19, 20, 21, 22, 24, 27, 31, 32, 51], "0m": [8, 11, 13, 19, 22, 23, 31, 32], "3m": [8, 11, 13, 19, 22, 23, 31, 32], "54": [8, 11, 13, 19, 22, 23, 28, 32], "6m": [8, 11, 13, 19, 22, 23, 31, 32], "55": [8, 11, 13, 19, 22, 31, 32], "9m": [8, 11, 13, 19, 22, 23, 31, 32], "57": [8, 11, 12, 13, 18, 19, 22, 23, 24, 28, 32, 33], "2m": [8, 11, 13, 19, 22, 23, 31, 32], "76mib": [8, 22, 31, 32], "5m": [8, 11, 13, 19, 22, 23, 31, 32], "60": [8, 11, 13, 17, 18, 19, 22, 23, 24, 31, 32], "83mib": [8, 22, 31, 32], "61": [8, 11, 13, 19, 22, 23, 31, 32], "1m": [8, 11, 13, 19, 22, 23, 31, 32], "4m": [8, 11, 13, 19, 22, 23, 31, 32], "7m": [8, 11, 13, 19, 22, 23, 31, 32], "69": [8, 11, 13, 19, 22, 23, 25, 32], "82mib": [8, 22, 31, 32], "70": [8, 11, 13, 17, 18, 19, 22, 23, 31, 32], "72": [8, 11, 13, 19, 22, 23, 25, 27, 32], "73": [8, 11, 13, 18, 19, 20, 22, 23, 31, 32], "76": [8, 11, 13, 19, 22, 23, 32], "79": [8, 11, 13, 19, 22, 23, 24, 25, 32], "80": [8, 11, 13, 17, 18, 19, 20, 22, 23, 24, 25, 28, 31, 32], "82": [8, 11, 13, 19, 22, 25, 27, 32], "85": [8, 11, 13, 19, 22, 23, 25, 27, 32, 131], "86": [8, 11, 13, 19, 22, 24, 28, 31, 32], "88": [8, 11, 13, 19, 22, 23, 24, 31, 32], "89": [8, 11, 13, 17, 19, 22, 23, 31, 32], "95": [8, 11, 13, 19, 20, 22, 23, 25, 32], "97": [8, 11, 13, 18, 19, 22, 27, 28, 31, 32], "randomli": [8, 19, 31, 139, 140], "probabl": [8, 25, 31, 59, 60, 113, 120, 128], "probability_mask": [8, 31], "1000": [8, 18, 19, 27, 28, 29, 30, 32, 63, 68, 74, 75, 132, 133, 134, 135, 136], "my_dataset_nam": [8, 22, 23, 24, 27, 28, 29, 30, 31, 32], "demo_training_inpaint": [8, 31], "deepinv_datasets_path": [8, 22, 23, 24, 25, 31], "dataset_filenam": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 47], "str": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 46, 47, 66, 68, 69, 70, 72, 73, 77, 78, 79, 91, 110, 111, 112, 113, 117, 123, 127, 128, 129, 132, 133, 137, 138, 143, 144, 148, 150, 151, 152], "train_batch_s": [8, 27, 28, 29, 30, 31, 32], "test_batch_s": [8, 27, 28, 29, 30, 31, 32], "train_dataload": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 138], "25it": [8, 23], "24it": [8, 28], "07it": [8, 22], "phi_": [8, 23], "top": [8, 10, 12, 16, 23, 25, 30, 31, 38, 43, 58, 59, 60, 62, 77, 78, 79, 86, 93, 108, 109, 111, 113, 115, 117, 121, 123, 129], "post": [8, 17, 20], "u": [8, 12, 16, 18, 19, 23, 24, 25, 30, 38, 43, 58, 59, 60, 66, 76, 80, 82, 83, 84, 86, 96, 108, 109, 115, 121, 130, 141], "unet": [8, 23, 24, 25, 68, 72], "in_channel": [8, 12, 14, 22, 23, 24, 25, 27, 30, 66, 68, 69, 70, 76], "out_channel": [8, 12, 14, 22, 23, 24, 25, 27, 66, 68, 69, 70, 76], "batch_norm": [8, 76], "artifactremov": [8, 23, 24, 25, 137, 138], "supervis": [8, 26, 27, 28, 29, 30, 31, 32, 45, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 62, 69, 76, 80, 84, 85, 87, 115, 116, 120, 121, 122, 124, 126, 137, 138, 139, 142, 144, 147], "mean": [8, 16, 17, 18, 19, 20, 22, 31, 38, 39, 53, 54, 55, 56, 57, 58, 59, 60, 134, 135, 136], "error": [8, 17, 18, 20, 31, 49, 52, 53, 54, 55, 56, 57, 87, 129], "easili": [8, 18, 19, 31, 34, 35, 47], "done": [8, 17, 18, 19, 27, 28, 29, 30, 31, 32, 34, 35, 78, 123], "suploss": [8, 27, 28, 29, 30, 31, 32], "few": [8, 31], "epoch": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 138], "keep": [8, 19, 27, 31, 78, 113, 120, 121, 124, 128, 134, 135, 136], "short": [8, 31], "qualiti": [8, 31], "least": [8, 31], "5e": [8, 22, 23, 24, 25, 27, 30, 32], "inform": [8, 22, 23, 24, 25, 31, 36, 37, 79, 121, 137, 138], "mse": [8, 27, 28, 29, 30, 31, 32, 49, 53, 54, 55, 56, 57], "schedul": [8, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 133, 138], "weight_decai": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "lr_schedul": [8, 22, 23, 24, 25, 27, 30, 31, 32], "steplr": [8, 22, 23, 24, 25, 27, 30, 31, 32], "step_siz": [8, 16, 20, 22, 23, 24, 25, 27, 30, 31, 32, 134, 135, 136], "save_path": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 113, 120, 128, 138], "log_interv": [8, 22, 23, 31, 138], "eval_interv": [8, 22, 23, 31, 138], "ckp_interv": [8, 22, 23, 31, 138], "2067779": 8, "23": [8, 11, 13, 14, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "95e": 8, "loss_sup": [8, 27, 28, 29, 30, 31, 32], "train_psnr_model": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "90": [8, 11, 13, 14, 17, 18, 19, 22, 25, 31, 32], "59e": 8, "backbone_net": [8, 23, 24, 25, 62], "maxpool": [8, 23, 24, 25, 66, 70], "maxpool2d": [8, 23, 24, 25], "kernel_s": [8, 22, 23, 24, 25, 27, 30, 32, 71, 110], "stride": [8, 22, 23, 24, 25, 27, 30, 32, 66, 70], "ceil_mod": [8, 23, 24, 25], "conv1": [8, 23, 24, 25], "sequenti": [8, 23, 24, 25, 64], "conv2d": [8, 22, 23, 24, 25, 27, 30, 32, 110, 111], "relu": [8, 22, 23, 24, 25, 27, 32, 66, 69, 70], "inplac": [8, 23, 24, 25], "conv2": [8, 23, 24, 25], "conv3": [8, 23], "up3": [8, 23], "upsampl": [8, 23, 24, 25, 66, 70, 73], "scale_factor": [8, 23, 24, 25], "mode": [8, 23, 24, 25, 30, 32, 66, 69, 70, 72, 128, 150], "nearest": [8, 23, 24, 25, 66, 68, 70, 73, 133], "up_conv3": [8, 23], "up2": [8, 23, 24, 25], "up_conv2": [8, 23, 24, 25], "conv_1x1": [8, 23, 24, 25], "now": [8, 17, 18, 19, 27, 28, 29, 31, 141], "test_psnr": [8, 31, 137], "artifact_remov": [8, 31], "test_std_psnr": [8, 31, 137], "init_psnr": [8, 31], "init_std_psnr": [8, 31], "99it": [8, 17, 18, 22, 23], "678": [8, 9], "demo_train_inpaint": [8, 9], "118": [9, 19], "execut": [9, 15, 21, 26, 33], "auto_examples_bas": 9, "mb": [9, 15, 21, 26, 33, 68], "imag": [9, 10, 15, 18, 19, 21, 26, 33, 37, 38, 40, 41, 42, 46, 47, 49, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 91, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151], "deblur": [9, 10, 15, 18, 33, 45, 46, 47, 57, 66, 69, 79, 80, 84, 85, 87, 91, 112, 115, 118, 121, 124, 137, 138, 141, 143, 147], "reconstruct": [9, 10, 12, 13, 14, 16, 18, 20, 21, 30, 35, 37, 38, 42, 43, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 73, 76, 111, 113, 115, 117, 118, 120, 121, 123, 124, 129, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 150], "tour": [9, 10, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 147, 150], "sens": [9, 10, 19, 29, 33, 35, 46, 47, 49, 54, 57, 77, 78, 80, 84, 85, 87, 97, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 137, 138, 142, 144, 147, 150, 152], "load": [9, 10, 18, 35, 40, 47, 78, 80, 82, 85, 87, 113, 115, 120, 121, 124, 128, 142, 144, 147, 148], "stack": [9, 10, 114, 115, 117, 121, 123, 124, 145, 147, 150], "concaten": [9, 10, 44, 73, 114, 115, 117, 121, 123, 124, 145, 147, 150], "photon": [9, 10, 124, 127, 147], "lidar": [9, 10, 124, 127, 147], "depth": [9, 10, 22, 27, 32, 69, 72, 73, 119, 124, 127, 147], "googl": 10, "colab": 10, "them": [10, 27, 28, 29, 48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "pip": [10, 45], "instal": [10, 34], "git": [10, 45], "github": [10, 34, 45, 55, 68, 73, 74, 75], "com": [10, 25, 28, 45, 55, 68, 73], "egg": [10, 45], "vanilla": [10, 15, 33, 37, 46, 47, 57, 69, 79, 80, 84, 85, 87, 91, 117, 118, 121, 124, 129, 137, 138, 142, 144, 146, 147, 148, 150, 151, 152], "tomographi": [10, 15, 69, 79, 80, 84, 85, 87, 91, 118, 121, 124, 146, 147, 148, 150, 151], "ct": [10, 15, 33, 45, 46, 47, 57, 69, 79, 80, 84, 85, 87, 91, 93, 96, 117, 118, 121, 124, 129, 137, 138, 142, 144, 146, 147, 148, 150, 151], "dpir": [10, 15, 45, 46, 47, 66, 79, 80, 84, 85, 87, 91, 112, 115, 118, 121, 124, 137, 147], "resolut": [10, 15, 33, 46, 47, 57, 69, 70, 72, 79, 80, 84, 85, 87, 88, 91, 117, 118, 121, 123, 124, 137, 138, 142, 144, 147, 152], "condat": [10, 15, 69, 74, 75, 79, 80, 84, 85, 87, 91, 96, 115, 118, 121, 124, 128, 146, 147, 148, 150, 151], "vu": [10, 15, 69, 79, 80, 84, 85, 87, 91, 96, 115, 118, 121, 124, 128, 146, 147, 148, 150, 151], "primal": [10, 15, 31, 33, 46, 47, 57, 69, 74, 75, 79, 80, 81, 84, 85, 87, 91, 93, 96, 115, 117, 118, 121, 124, 128, 137, 138, 142, 144, 146, 147, 148, 150, 151], "dual": [10, 15, 31, 33, 46, 47, 57, 69, 74, 75, 79, 80, 82, 83, 84, 85, 87, 91, 93, 96, 115, 117, 118, 121, 124, 128, 137, 138, 142, 144, 146, 147, 148, 150, 151], "uncertainti": [10, 17, 21, 45, 50, 69, 80, 84, 87, 89, 115, 118, 120, 121, 124, 134, 136, 146, 147, 148, 150], "quantif": [10, 21, 45, 50, 69, 80, 84, 87, 89, 115, 118, 120, 121, 124, 134, 136, 146, 147, 148, 150], "ula": [10, 21, 50, 69, 80, 84, 87, 89, 115, 118, 120, 121, 124, 134, 146, 147, 148, 150], "diffus": [10, 18, 21, 45, 66, 68, 115, 118, 120, 121, 124, 131, 132, 133, 134, 146, 147, 148, 150], "dp": [10, 21, 68, 80, 84, 115, 120, 121, 124, 147, 148, 150], "diffpir": [10, 19, 21, 45, 68, 80, 84, 86, 112, 115, 118, 121, 124, 147, 148, 150], "sure": [10, 20, 26, 34, 46, 47, 58, 59, 60, 62, 76, 115, 116, 121, 124, 126, 137, 138, 147], "neighbor2neighbor": [10, 26, 46, 47, 62, 76, 115, 116, 121, 124, 126, 137, 138, 147], "multipl": [10, 11, 12, 17, 25, 26, 46, 47, 52, 53, 54, 59, 60, 62, 76, 115, 119, 120, 121, 124, 137, 138, 147], "equivari": [10, 26, 36, 46, 47, 49, 53, 69, 80, 84, 85, 87, 115, 121, 122, 124, 137, 138, 139, 142, 144, 147], "mri": [10, 26, 45, 46, 47, 49, 53, 65, 69, 80, 84, 85, 87, 115, 121, 124, 137, 138, 139, 142, 144, 147], "lista": [10, 29, 31, 33, 46, 47, 57, 77, 78, 80, 84, 85, 87, 97, 113, 121, 124, 137, 138, 142, 144, 147, 152], "compress": [10, 33, 35, 46, 47, 57, 73, 77, 78, 80, 84, 85, 87, 97, 113, 121, 124, 137, 138, 142, 144, 147, 152], "equilibrium": [10, 33, 45, 46, 47, 57, 69, 80, 84, 85, 87, 112, 115, 118, 121, 124, 137, 138, 141, 143, 147], "deq": [10, 33, 43, 45, 46, 47, 57, 69, 80, 84, 85, 87, 112, 115, 118, 121, 124, 137, 138, 141, 143, 147], "scan": [10, 33, 46, 47, 57, 80, 87, 93, 96, 117, 118, 121, 124, 137, 138, 142, 144, 147], "auto_examples_python": 10, "auto_examples_jupyt": 10, "zuo": 11, "gu": 11, "l": [11, 23, 36, 66, 70, 71, 74, 75, 135, 136], "proceed": 11, "ieee": [11, 30, 52, 58, 59, 60, 64, 119, 127], "confer": [11, 13], "vision": 11, "recognit": 11, "pp": [11, 74, 75], "3929": 11, "3938": 11, "drunet": [11, 17, 27, 30, 32, 70], "get_dpir_param": 11, "load_degrad": [11, 13, 22], "kernel_index": [11, 13], "chose": [11, 79], "among": [11, 39], "levin09": 11, "mat": 11, "kernel_torch": [11, 13], "npy": [11, 13, 22], "7k": 11, "721kib": 11, "155k": 11, "773kib": 11, "30mib": 11, "hdf5": [11, 13, 27, 28, 29, 35, 46], "folder": [11, 13, 27, 28, 29, 46, 47], "dir": [11, 13, 35], "dinv_dataset0": [11, 13], "h5": [11, 13, 35], "As": [11, 18, 19, 22, 23, 41], "60it": [11, 18, 19, 30], "half": [11, 22, 27, 91, 95, 133, 143, 144], "quadrat": [11, 22, 27, 91, 95, 133, 143, 144], "split": [11, 22, 27, 31, 32, 41, 53, 55, 56, 74, 75, 82, 91, 93, 94, 95, 96, 133, 143, 144], "hq": [11, 22, 27, 39, 91, 95, 102, 103, 133, 141, 143, 144], "altern": [11, 14, 18, 19, 92, 96], "step": [11, 12, 13, 14, 16, 20, 22, 39, 41, 43, 70, 76, 79, 81, 82, 83, 91, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 129, 133, 135, 136, 137, 141, 142, 143, 144], "pretrain": [11, 12, 13, 14, 17, 18, 20, 22, 23, 24, 25, 27, 32, 37, 45, 62, 66, 68, 69, 70, 72, 73], "do": [11, 37, 79, 87], "drunet_color": 11, "125m": [11, 13, 19, 22], "120k": 11, "59": [11, 13, 19, 22, 25, 31, 32], "09mb": [11, 13, 23], "296k": 11, "53": [11, 13, 18, 19, 22, 23, 25, 31, 32], "14mb": [11, 13], "728k": 11, "19mb": 11, "23mb": [11, 14, 25], "39m": [11, 19], "70mb": [11, 13, 14, 19, 23, 24, 25], "68m": [11, 23, 31], "99m": [11, 14, 23, 31, 32], "55mb": [11, 13, 19, 24], "33m": [11, 20, 22, 23], "80mb": [11, 13, 19, 23], "65m": [11, 22, 32], "44": [11, 13, 14, 17, 19, 20, 22, 23, 27, 30, 31, 32], "86mb": [11, 13, 19], "67mb": [11, 13, 19, 20, 23], "30m": [11, 23, 24], "87mb": [11, 13, 19, 25], "62m": [11, 13, 19, 22, 24, 31], "92mb": [11, 13, 19], "93m": 11, "89mb": [11, 13, 19, 23], "59m": 11, "93mb": [11, 19], "90m": [11, 19, 25, 32], "72mb": [11, 13, 19, 23, 24, 25], "23m": 11, "90mb": [11, 13, 19], "94mb": [11, 13, 14, 19], "87m": [11, 22], "73mb": [11, 13, 19, 23, 24], "20m": [11, 13, 19, 32], "91mb": [11, 13, 19], "52m": [11, 13, 19, 25], "41": [11, 13, 19, 22, 23, 25, 28, 31, 32], "01mb": [11, 13], "76mb": [11, 13, 19, 23, 24], "45m": [11, 13, 22, 24], "74m": [11, 22, 23, 25, 32], "05m": [11, 13, 22, 23, 24, 31], "68mb": [11, 13, 19], "36m": 11, "83mb": [11, 13, 19, 23], "70m": [11, 14, 31], "69mb": [11, 13, 14, 19, 23], "61m": [11, 13, 19, 22, 32], "91m": [11, 13, 22, 24, 31, 32], "96mb": [11, 13, 19, 23], "97mb": [11, 13, 19, 23], "38": [11, 13, 19, 22, 23, 24, 25, 26, 28, 31, 32], "95mb": [11, 13, 19], "74mb": [11, 13, 19, 23], "88mb": [11, 13, 19, 24], "98mb": [11, 13, 19, 23, 25], "65mb": [11, 13, 19], "64mb": [11, 13, 19, 22], "35": [11, 13, 19, 22, 23, 24, 25, 30, 31, 32], "66mb": [11, 13, 19], "09": [11, 13, 19, 20, 21, 22, 23, 27, 29, 32, 48], "99mb": [11, 13, 19, 24], "81mb": [11, 13, 19, 23, 24], "85mb": [11, 13, 19, 23], "75mb": [11, 13, 19, 23, 24], "84mb": [11, 13, 19, 22, 23, 25], "56": [11, 13, 14, 17, 19, 22, 23, 24, 31, 32], "71mb": [11, 13, 19, 23], "62": [11, 13, 16, 19, 22, 23, 24, 28, 31, 32], "65": [11, 13, 19, 22, 23, 31, 32], "71": [11, 13, 19, 22, 27, 31, 32], "78": [11, 13, 14, 19, 22, 23, 27, 28, 29, 31, 32], "81": [11, 13, 19, 22, 23, 31, 32], "03mb": [11, 13, 19, 22, 23, 24], "04mb": [11, 13, 19, 23], "77mb": [11, 13, 19], "05mb": [11, 13, 19, 23], "87": [11, 12, 13, 18, 19, 22, 23, 28, 31, 32], "07mb": [11, 19, 23], "78mb": [11, 13, 19, 23], "82mb": [11, 13, 19, 23], "100m": [11, 13, 19, 22], "101m": [11, 13, 19, 22], "102m": [11, 13, 19, 22], "103m": [11, 13, 19, 22], "104m": [11, 13, 19, 22], "105m": [11, 13, 19, 22], "106m": [11, 13, 19, 22], "107m": [11, 13, 19, 22], "79mb": [11, 13, 19, 23], "108m": [11, 13, 19, 22], "109m": [11, 13, 19, 22], "110m": [11, 13, 19, 22], "111m": [11, 13, 19, 22], "112m": [11, 13, 19, 22], "113m": [11, 13, 19, 22], "114m": [11, 13, 19, 22], "115m": [11, 13, 19, 22], "116m": [11, 13, 19, 22], "117m": [11, 13, 19, 22], "118m": [11, 13, 19, 22], "119m": [11, 13, 19, 22], "120m": [11, 13, 19, 22], "121m": [11, 13, 19, 22], "122m": [11, 13, 19, 22], "123m": [11, 13, 19, 22], "124m": [11, 13, 19, 22], "plot_only_first_batch": [11, 13, 137], "By": [11, 13, 49, 53, 54, 55, 56, 57, 79, 80, 86, 87, 88, 96, 121, 123, 124, 134, 135, 136], "default": [11, 13, 22, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 96, 104, 105, 121, 123, 124, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 152], "305654525756836": 11, "96754264831543": 11, "270": [11, 15], "demo_pnp_dpir_deblur": [11, 15], "camera": [12, 128], "dncnn": [12, 14, 20, 22, 27, 32, 37], "plot_curv": [12, 14], "optim_iter": [12, 28, 29, 30, 31, 79, 81, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 142, 143, 144], "optimiter": [12, 79, 91, 92, 93, 94, 95, 97, 143, 144], "definit": [12, 19], "subclass": [12, 30, 48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "align": [12, 18, 19, 31, 41, 43, 92, 93, 94, 95, 97, 132, 133, 142], "v_k": 12, "x_k": [12, 20, 28, 29, 31, 39, 41, 43, 79, 81, 92, 93, 95, 96, 97, 102, 103, 106, 107, 136, 142], "tau": [12, 25, 31, 58, 59, 60, 79, 93], "z_k": [12, 20, 31, 39, 41, 43, 79, 92, 93, 94, 96, 142], "x_": [12, 16, 20, 28, 29, 31, 39, 41, 43, 79, 81, 92, 93, 94, 95, 96, 97, 133, 136, 142], "operatornam": [12, 18, 29, 31, 39, 41, 43, 50, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 133, 141, 142], "prox": [12, 18, 28, 29, 30, 31, 39, 40, 41, 80, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 95, 97, 112, 122, 133], "_": [12, 18, 19, 23, 28, 29, 31, 39, 41, 54, 74, 75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 97, 113, 115, 121, 129, 132, 133], "u_k": [12, 31, 41, 81, 93, 95, 97], "2x_": [12, 31], "z_": [12, 16, 31, 39, 41, 43, 79, 92, 93, 94, 96, 136, 142], "fenchel": [12, 93], "legendr": [12, 93], "conjug": [12, 80, 87, 93, 113, 117, 121, 129], "cviter": 12, "g_step": [12, 22, 27, 28, 29, 30, 31, 32], "gstepcv": 12, "f_step": [12, 22, 27, 28, 29, 30, 31, 32], "fstepcv": 12, "cur_data_fidel": [12, 30, 81, 92, 93, 94, 96, 98, 100, 102, 106, 108], "cur_prior": [12, 30, 81, 92, 93, 94, 96, 99, 101, 103, 107, 109], "cur_param": [12, 81, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109], "param": [12, 13, 16, 30, 81, 106, 134], "dict": [12, 22, 79, 81, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 137, 138, 141, 143, 144, 151, 152], "dictionari": [12, 22, 27, 28, 29, 32, 39, 79, 81, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 137, 138, 142, 143, 144, 151, 152], "estim": [12, 18, 19, 25, 58, 59, 60, 62, 68, 86, 92, 93, 94, 96, 115, 119, 121, 133, 134, 136, 137, 146], "datafidel": [12, 30, 39, 42, 79, 81, 82, 83, 84, 86, 87, 91, 92, 93, 94, 96, 98, 100, 102, 106, 108, 132, 133, 134, 135, 136, 143, 144], "relat": [12, 28, 29], "interest": [12, 18, 79], "updat": [12, 18, 19, 22, 30, 31, 34, 39, 79, 81, 92, 93, 94, 96, 138], "x_prev": [12, 79, 81], "z_prev": 12, "f_fn": [12, 79, 91, 96, 143, 144], "has_cost": [12, 79, 96], "reli": [12, 39, 87], "u_": [12, 31, 41, 81, 92, 93, 94, 95, 97], "moreau": [12, 42, 80, 87, 89, 95], "math": [12, 13, 18, 29, 30, 57, 80, 87, 89], "phyic": 12, "2ax_": 12, "kei": [12, 19, 39, 73, 79, 108, 109, 142], "prox_d_conjug": [12, 80], "2fdataset": [12, 14, 18, 19], "barbara": 12, "jpeg": 12, "resize_mod": [12, 14, 148], "resiz": [12, 14, 22, 148], "single_pixel": 12, "frequenc": 12, "our": [12, 16, 19, 28, 29, 31, 34, 45, 93], "condatvu": 12, "200": [12, 19, 28, 29, 31], "output": [12, 14, 18, 19, 28, 29, 51, 63, 65, 66, 68, 69, 70, 76, 79, 80, 81, 82, 110, 111, 117, 123, 126, 127, 137, 138, 141], "x_gt": [12, 14, 79, 81, 141], "compute_metr": [12, 14, 79, 81, 141], "x_model": [12, 14], "img": [12, 14, 16, 17, 18, 19, 20, 150], "gt": [12, 14, 28, 29], "recon": [12, 14, 19, 28, 29], "336": [12, 15], "demo_pnp_custom_optim": [12, 15], "plug": [13, 16, 19, 20, 32, 37, 41, 45, 85, 133, 135, 136, 151], "gspnp": 13, "hurault": [13, 45], "leclair": 13, "papadaki": 13, "plai": [13, 15, 16, 20, 32, 37, 41, 45, 85, 133, 135, 136, 151], "represent": 13, "get_gspnp_param": 13, "blur": [13, 16, 18, 27, 30, 32, 110, 112, 117, 123], "kernels_12": 13, "down": 13, "standart": [13, 14, 91], "49it": 13, "solv": [13, 18, 19, 27, 31, 41, 43, 45, 67, 74, 75, 79, 81, 93], "use_bicubic_init": 13, "bicub": [13, 117, 123], "necessarili": [13, 96], "thu": [13, 30, 67, 77, 78, 122, 134, 135, 136], "write": [13, 18, 19, 30, 132, 133], "denoiser_nam": 13, "gsdrunet": 13, "return_aux": [13, 79], "195m": [13, 19, 22], "0k": [13, 14, 19, 20, 23, 24, 25], "474kb": 13, "104k": 13, "382kb": 13, "208k": [13, 20], "632kb": 13, "344k": 13, "890kb": 13, "568k": 13, "27mb": 13, "816k": 13, "52mb": [13, 19, 23], "09m": [13, 23, 25, 32], "35m": [13, 31], "18mb": [13, 19], "37mb": 13, "95m": [13, 22, 31, 32], "57mb": [13, 14, 19, 20, 25], "63mb": [13, 19, 23, 24], "32m": 13, "48m": [13, 31], "76m": [13, 22, 23], "03m": [13, 19], "18m": 13, "73m": [13, 19, 24], "88m": [13, 31], "16m": [13, 22, 23], "00m": [13, 19, 25], "58m": [13, 31, 32], "36mb": [13, 14, 20, 25], "13mb": 13, "29mb": [13, 19], "41mb": [13, 19], "53mb": [13, 19], "44mb": [13, 23], "54mb": [13, 19, 20, 22], "20mb": 13, "42mb": [13, 14, 19], "38mb": [13, 14, 25], "126m": [13, 19, 22], "50mb": [13, 19, 25], "59mb": [13, 19], "127m": [13, 19, 22], "128m": [13, 19, 22], "129m": [13, 19, 22], "130m": [13, 19, 22], "447kb": 13, "591kb": 13, "131m": [13, 19, 22], "730kb": 13, "952kb": 13, "132m": [13, 19, 22], "48mb": 13, "00mb": [13, 19], "02mb": [13, 19, 23, 25], "133m": [13, 19, 22], "21mb": 13, "39mb": [13, 20, 23], "134m": [13, 19, 22], "58mb": [13, 19, 25], "135m": [13, 19, 22], "136m": [13, 19, 22], "60mb": [13, 19], "137m": [13, 19, 22], "56mb": [13, 19], "138m": [13, 19, 22], "139m": [13, 19, 22], "140m": [13, 19, 22], "141m": [13, 19, 22], "142m": [13, 19, 22], "61mb": [13, 19, 24, 25], "143m": [13, 19, 22], "144m": [13, 19, 22], "145m": [13, 19, 22], "146m": [13, 19, 22], "62mb": [13, 19, 24, 25], "147m": [13, 19, 22], "148m": [13, 19, 22], "149m": [13, 19, 22], "150m": [13, 19, 22], "151m": [13, 19, 22], "152m": [13, 19, 22], "34mb": 13, "153m": [13, 19, 22], "43mb": 13, "154m": [13, 19, 22], "06mb": [13, 19, 23], "31mb": 13, "155m": [13, 19, 22], "156m": [13, 19, 22], "157m": [13, 19, 22], "158m": [13, 19, 22], "159m": [13, 19, 22], "160m": [13, 19, 22], "161m": [13, 19, 22], "162m": [13, 19, 22], "163m": [13, 19, 22], "164m": [13, 19, 22], "165m": [13, 19, 22], "166m": [13, 19, 22], "167m": [13, 19, 22], "168m": [13, 19, 22], "169m": [13, 19, 22], "170m": [13, 19, 22], "171m": [13, 19, 22], "172m": [13, 19, 22], "173m": [13, 19, 22], "174m": [13, 19, 22], "175m": [13, 19, 22], "176m": [13, 19, 22], "177m": [13, 19, 22], "178m": [13, 19, 22], "179m": [13, 19, 22], "180m": [13, 19, 22], "181m": [13, 19, 22], "182m": [13, 19, 22], "183m": [13, 19, 22], "184m": [13, 19, 22], "185m": [13, 19, 22], "186m": [13, 19, 22], "187m": [13, 19, 22], "188m": [13, 19, 22], "189m": [13, 19, 22], "190m": [13, 19, 22], "191m": [13, 19, 22], "192m": [13, 19, 22], "193m": [13, 19, 22], "194m": [13, 19, 22], "03e": 13, "84e": [13, 23], "61e": [13, 27], "255969365437824": 13, "5749008109846732": 13, "060149669647217": 13, "18362178934248": 13, "729": [13, 15], "demo_red_gspnp_sr": [13, 15], "shepplogan": 14, "circl": [14, 129], "chosen": [14, 18, 27, 32, 47, 73, 79, 121, 138], "dncnn_sigma2_grai": 14, "607kb": 14, "232k": [14, 32], "906kb": 14, "592k": 14, "864k": 14, "29m": [14, 22, 25, 31, 32], "cumput": 14, "590": [14, 15], "demo_vanilla_pnp": [14, 15], "926": 15, "auto_examples_plug": 15, "unadjust": [16, 20, 135, 136], "langevin": [16, 20, 45, 135, 136], "preconula": 16, "advantag": 16, "acceler": [16, 22, 27, 65, 79, 81, 122, 135, 141], "np": [16, 17, 18, 19, 113], "5x5": [16, 18], "box": [16, 134, 135, 136], "001": [16, 50, 51, 59, 60, 80, 87, 121, 124, 134, 135, 136], "order": [16, 17, 18, 19, 22, 49, 61, 74, 121, 128, 131], "possibli": [16, 36, 54, 119, 134], "markov": [16, 134, 135, 136], "depend": [16, 38, 39, 43, 68, 79, 133, 134], "previou": [16, 18, 79, 81, 92, 93, 94, 134], "next": [16, 18, 81], "likelihood": [16, 19, 38, 42, 84, 86, 134, 135, 136], "account": [16, 34, 36, 66], "usv": 16, "modifi": 16, "eta": [16, 19, 20, 79, 121, 124, 131, 132, 135, 136], "ax_": 16, "alpha": [16, 18, 19, 20, 68, 70, 132, 133, 134, 135, 136], "nabla": [16, 20, 29, 39, 41, 42, 87, 88, 89, 97, 136], "sqrt": [16, 17, 18, 19, 20, 29, 113, 128, 132, 133, 136, 146], "eta_0": 16, "vrv": 16, "diagon": [16, 51, 120], "entri": [16, 39, 58, 59, 60, 113, 120, 121, 124, 128, 136], "s_": 16, "epsilon": [16, 19, 59, 118, 125, 130], "numer": [16, 50, 51, 121, 129, 134, 135, 136], "issu": [16, 34, 45], "algebra": 16, "product": [16, 51], "effici": [16, 40, 113, 115, 121, 124, 128, 129], "trivial": [16, 110, 119, 120], "thei": [16, 29, 36, 37, 43, 79, 87, 131], "matric": 16, "pulaiter": 16, "noise_std": 16, "x_bar": 16, "y_bar": 16, "u_adjoint": [16, 115], "pow": 16, "randn_lik": [16, 18, 19, 51], "sigma2_nois": 16, "lhood": 16, "lprior": 16, "montecarlo": [16, 135, 136], "care": [16, 48, 52, 63, 65, 71, 72, 74, 75, 133, 139, 140], "procedur": [16, 31], "calcul": [16, 80, 87, 88, 90], "varianc": [16, 17, 18, 20, 134, 135, 136], "thin": [16, 134, 135, 136], "burnin": 16, "conveni": 16, "interfac": [16, 39], "user": [16, 39, 41, 43, 47, 66, 68, 69, 70, 72, 73, 91, 116, 123, 143, 144], "1e3": [16, 134], "burnin_ratio": [16, 134, 135, 136], "clip": [16, 19, 134, 135, 136, 138, 150], "score": [16, 19, 20, 89], "distribut": [16, 17, 20, 25, 38, 42, 89, 116, 120, 131, 132, 133, 134, 135, 136], "scoreprior": [16, 20, 42, 134, 135, 136], "p_": [16, 20, 42, 89], "sigma_d": 16, "approx": [16, 19, 20, 38, 51], "left": [16, 18, 20, 23, 25, 42, 43, 58, 59, 60, 82, 89, 121, 124, 133, 136, 141], "right": [16, 18, 20, 23, 25, 42, 43, 58, 59, 60, 82, 89, 121, 124, 133, 136, 141], "median": [16, 71], "hyperparamet": [16, 19, 20, 28, 29, 38, 58, 77, 78, 115, 121, 131, 132, 133], "control": [16, 18, 20, 36, 38, 58, 76, 132, 136], "strength": [16, 20], "medianfilt": 16, "1e2": 16, "pula": 16, "posterior": [16, 17, 19, 20, 42, 131, 132, 133, 134, 135, 136], "compar": [16, 17, 20, 141], "signific": [16, 34], "evid": 16, "easi": [16, 45], "wherea": [16, 18, 19, 113, 128], "ula_mean": 16, "ula_var": 16, "pula_mean": 16, "pula_var": 16, "392": 16, "73it": [16, 19, 28], "mont": [16, 20, 58, 59, 60, 134, 135, 136], "carlo": [16, 20, 58, 59, 60, 134, 135, 136], "finish": [16, 17, 20, 96, 104, 105], "366": 16, "03it": [16, 17, 18, 22, 27], "404": [16, 21], "demo_custom_kernel": [16, 21], "arxiv": [17, 49, 50, 51, 54, 62, 69, 113, 117, 131, 132, 133, 135, 136], "pdf": [17, 49, 62], "2209": [17, 132], "11888": 17, "known": [17, 83], "variou": [17, 25], "linspac": [17, 18, 19, 129], "diff": 17, "etab": [17, 131], "ab": [17, 18, 20, 50, 51, 54, 69, 81, 113, 117, 131, 132, 133, 135, 136], "sum": [17, 19, 20, 29, 39, 41, 96, 145], "34it": [17, 22], "35it": [17, 25], "give": [17, 80, 84], "diffusionsampl": 17, "fulli": [17, 22, 23, 24, 25, 63, 76], "fledg": 17, "var": [17, 20, 134], "std": [17, 20], "dev": [17, 20], "flatten": [17, 20, 145], "69it": [17, 19, 22, 23], "85it": [17, 19], "94it": 17, "01it": [17, 22, 23], "02it": [17, 18, 22, 28], "39e": 17, "32e": 17, "419": [17, 21], "demo_ddrm": [17, 21], "tutori": [18, 19, 43, 141], "revisit": 18, "zhou": 18, "tqdm": [18, 19], "butterfli": [18, 19], "best": [18, 19, 24, 25], "256x256": [18, 19], "path": [18, 19, 20, 35, 46, 66, 68, 69, 70, 72, 73, 150, 151, 152], "x_true": [18, 19], "sigma_nois": 18, "revers": [18, 19], "decreas": [18, 19, 79, 131, 132, 133], "equat": [18, 19, 31, 39, 41, 43, 79, 92, 93, 94, 95, 97, 132, 133, 141], "mathbf": [18, 19, 132, 133], "_t": [18, 19, 132, 133], "overlin": [18, 19, 132, 133], "widehat": [18, 19, 132, 133], "cdot": [18, 19, 39, 41, 42, 43, 77, 78, 79, 80, 82, 86, 89, 132, 133], "rho_t": [18, 133], "varepsilon": [18, 19, 132, 133], "zeta": [18, 133], "amount": [18, 38, 136], "refer": [18, 38, 41, 49, 146], "poissonlikelihood": 18, "leq": [18, 82, 93, 97], "sequenc": [18, 68, 128, 132, 133], "posit": [18, 25, 39, 59, 60, 73, 86], "detail": [18, 19, 31, 41, 43, 50, 51, 55, 59, 60, 74, 75, 77, 79, 91, 137, 138, 141, 143, 144], "later": [18, 19], "let": [18, 19], "section": [18, 41], "condit": [18, 23, 68, 133], "author": [18, 19, 68, 73], "ho": [18, 68], "diffunet": [18, 19], "large_model": [18, 19, 68], "befor": [18, 19, 31, 51, 67, 73, 81, 91, 138, 143, 144, 152], "being": 18, "abl": [18, 19], "timestep": [18, 19, 68, 132, 133], "dure": [18, 19, 79], "get_alpha": 18, "beta_start": [18, 19, 68, 133], "beta_end": [18, 19, 68, 133], "num_train_timestep": [18, 19, 68, 133], "beta": [18, 19, 22, 27, 28, 29, 30, 31, 32, 39, 86, 92, 93, 94, 96, 119, 132, 133], "float32": [18, 19, 22, 27, 28, 29, 31, 32, 68, 113, 128, 129], "from_numpi": [18, 19], "alphas_cumprod": 18, "cumprod": [18, 19], "axi": 18, "demo_diffpir": [18, 21], "120": [18, 19], "sigma_t": [18, 19], "find_nearest": [18, 68, 133], "arrai": [18, 68, 131, 133], "asarrai": 18, "idx": 18, "argmin": [18, 68, 82, 83, 84, 133], "arbitrari": [18, 19], "x_noisi": 18, "den": 18, "librari": [18, 27, 28, 29, 30, 32, 34, 138], "simpli": [18, 19, 29, 40], "meaning": 18, "y_denois": 18, "carefulli": 18, "simplic": [18, 27, 30, 32], "x_prox": [18, 40], "gamma": [18, 24, 25, 28, 29, 41, 55, 59, 60, 79, 80, 82, 83, 84, 85, 86, 87, 90, 92, 94, 95, 97, 115, 117, 121, 125, 126, 142], "last": [18, 81], "firstli": 18, "effect": 18, "residu": [18, 19, 63, 73, 76, 79, 134], "assum": [18, 19, 49, 68, 82, 112, 135, 136], "usual": [18, 19, 41], "why": [18, 19], "rescal": [18, 19, 150], "x_prox_scal": 18, "y_scale": 18, "t_i": 18, "ep": [18, 23, 24, 25, 48], "notic": [18, 82], "secondli": 18, "combin": [18, 133], "realiz": [18, 122, 138], "white": [18, 19], "x_sampled_sc": 18, "x_sampl": 18, "appropri": [18, 84], "suggest": [18, 19, 45, 82], "diffusion_step": 18, "lambda_": [18, 133], "seq": [18, 19], "figsiz": 18, "rcparam": 18, "font": 18, "121": [18, 19], "xlabel": 18, "ylabel": 18, "122": [18, 19], "suptitl": 18, "regularis": [18, 31, 39, 41, 51, 79, 81, 91, 143, 144], "eventu": 18, "no_grad": [18, 49], "len": 18, "curr_sigma": 18, "x0": [18, 19, 30, 121], "normal": [18, 19, 28, 29, 61, 73, 84, 86, 89, 121, 126, 146], "next_sigma": 18, "t_im1": 18, "09it": [18, 22], "22it": 18, "66it": [18, 19], "89it": 18, "97it": [18, 31], "06it": [18, 22, 25], "58it": [18, 19], "90it": [18, 22], "00it": [18, 27], "08it": 18, "11it": [18, 25], "83it": [18, 19, 22], "95it": 18, "14it": 18, "15it": [18, 22], "65it": [18, 19], "80it": [18, 19, 29], "04it": [18, 23], "78it": [18, 19], "91it": [18, 22, 25], "readili": [18, 19], "736": [18, 21], "introduc": [19, 64, 65, 69, 72, 73, 135], "chung": 19, "visual": [19, 27, 28, 29, 30, 32, 137, 138], "progress": [19, 67, 131, 132, 133, 134, 135, 136, 137, 138], "addition": 19, "addit": [19, 39, 40, 41, 50, 66, 70, 79, 84, 91, 104, 105, 118, 143, 144], "awgn": 19, "pixelwis": [19, 120], "groundtruth": 19, "pre": [19, 43], "wa": [19, 64, 65, 69, 72, 73, 135], "name": [19, 31, 77, 91, 143, 144], "ffhq": [19, 68], "human": 19, "face": 19, "veri": 19, "nevertheless": 19, "suffici": [19, 23, 79], "diffusion_ffhq_10m": 19, "pt": [19, 22], "357m": [19, 22], "101kb": 19, "381kb": 19, "216k": 19, "712kb": 19, "448k": 19, "24mb": 19, "760k": 19, "06m": [19, 23], "34m": [19, 23, 31], "49mb": [19, 22], "82m": [19, 25], "10m": 19, "41m": [19, 22, 23], "97m": [19, 23], "13m": [19, 23, 24], "196m": [19, 22], "197m": [19, 22], "198m": [19, 22], "199m": [19, 22], "200m": [19, 22], "201m": [19, 22], "202m": [19, 22], "203m": [19, 22], "204m": [19, 22], "205m": [19, 22], "206m": [19, 22], "207m": [19, 22], "208m": [19, 22], "209m": [19, 22], "210m": [19, 22], "211m": [19, 22], "212m": [19, 22], "213m": [19, 22], "214m": [19, 22], "215m": [19, 22], "216m": [19, 22], "217m": [19, 22], "218m": [19, 22], "219m": [19, 22], "220m": [19, 22], "221m": [19, 22], "222m": [19, 22], "223m": [19, 22], "224m": [19, 22], "225m": [19, 22], "226m": [19, 22], "227m": [19, 22], "228m": [19, 22], "229m": [19, 22], "230m": [19, 22], "231m": [19, 22], "232m": [19, 22], "233m": [19, 22], "234m": [19, 22], "235m": [19, 22], "236m": [19, 22], "237m": [19, 22], "238m": [19, 22], "239m": [19, 22], "240m": [19, 22], "241m": [19, 22], "242m": [19, 22], "243m": [19, 22], "244m": [19, 22], "245m": [19, 22], "246m": [19, 22], "247m": [19, 22], "248m": [19, 22], "249m": [19, 22], "250m": [19, 22], "251m": [19, 22], "252m": [19, 22], "253m": [19, 22], "254m": [19, 22], "255m": [19, 22], "256m": [19, 22], "257m": [19, 22], "258m": [19, 22], "259m": [19, 22], "260m": [19, 22], "261m": [19, 22], "262m": [19, 22], "263m": [19, 22], "264m": [19, 22], "265m": [19, 22], "266m": [19, 22], "267m": [19, 22], "268m": [19, 22], "269m": [19, 22], "270m": [19, 22], "271m": [19, 22], "272m": [19, 22], "273m": [19, 22], "274m": [19, 22], "275m": [19, 22], "276m": [19, 22], "277m": [19, 22], "278m": [19, 22], "279m": [19, 22], "280m": [19, 22], "281m": [19, 22], "282m": [19, 22], "283m": [19, 22], "284m": [19, 22], "285m": [19, 22], "286m": [19, 22], "287m": [19, 22], "288m": [19, 22], "289m": [19, 22], "290m": [19, 22], "291m": [19, 22], "292m": [19, 22], "293m": [19, 22], "294m": [19, 22], "295m": [19, 22], "296m": [19, 22], "297m": [19, 22], "298m": [19, 22], "299m": [19, 22], "300m": [19, 22], "301m": [19, 22], "302m": [19, 22], "303m": [19, 22], "304m": [19, 22], "305m": [19, 22], "306m": [19, 22], "307m": [19, 22], "308m": [19, 22], "17mb": 19, "08mb": [19, 23], "309m": [19, 22], "310m": [19, 22], "311m": [19, 22], "312m": [19, 22], "313m": [19, 22], "314m": [19, 22], "315m": [19, 22], "316m": [19, 22], "11mb": 19, "317m": [19, 22], "318m": [19, 22], "319m": [19, 22], "320m": [19, 22], "321m": [19, 22], "322m": [19, 22], "323m": [19, 22], "324m": [19, 22], "325m": [19, 22], "326m": [19, 22], "327m": [19, 22], "328m": [19, 22], "329m": [19, 22], "330m": [19, 22], "331m": [19, 22], "332m": [19, 22], "333m": [19, 22], "334m": [19, 22], "335m": [19, 22], "336m": [19, 22], "337m": [19, 22], "338m": [19, 22], "339m": [19, 22], "340m": [19, 22], "341m": [19, 22], "342m": [19, 22], "343m": [19, 22], "344m": [19, 22], "345m": [19, 22], "346m": [19, 22], "347m": [19, 22], "348m": [19, 22], "349m": [19, 22], "350m": [19, 22], "351m": [19, 22], "352m": [19, 22], "353m": [19, 22], "354m": [19, 22], "355m": [19, 22], "356m": [19, 22], "beta_t": 19, "beta_": 19, "rm": 19, "alpha_t": 19, "bar": [19, 133], "prod_": 19, "alpha_j": 19, "alwai": [19, 128], "sim": [19, 20, 49, 58, 59, 60, 113, 118, 125, 130, 136], "hereaft": 19, "_0": 19, "reparametr": 19, "trick": 19, "get_beta": 19, "retriev": 19, "compute_alpha": 19, "index_select": 19, "nabla_": [19, 84, 132], "a_t": [19, 132], "b_t": [19, 132], "tild": [19, 111, 113, 115, 117, 121, 123, 124, 126, 129, 132], "constant": [19, 27, 36, 58, 59, 60, 119, 121, 132, 134, 135, 136], "q": [19, 81], "sigmat": 19, "xt": 19, "x0_t": 19, "bay": 19, "rule": [19, 79], "former": [19, 48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "tweedi": [19, 20, 42, 89], "formula": [19, 20, 42, 80, 87, 89, 113, 117, 121, 124, 129], "latter": [19, 47, 48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "intract": 19, "propos": [19, 29, 50, 51], "theorem": [19, 43, 141], "remark": 19, "hat": [19, 23, 49, 54, 61], "sigma_i": 19, "differenti": [19, 39, 41, 49, 80, 86, 87, 88, 93, 132, 135, 136], "enable_grad": 19, "turn": [19, 43, 141, 142], "ll": 19, "grad_ll": 19, "autograd": 19, "grad": [19, 80, 84, 87, 88, 90], "visit": 19, "compon": 19, "readi": 19, "everi": [19, 48, 52, 63, 65, 67, 71, 72, 74, 75, 138, 139, 140], "backpropag": [19, 50, 51], "ddpm": 19, "im": 19, "There": [19, 25], "caveat": 19, "origin": [19, 28, 58, 67], "ancestr": 19, "ddim": [19, 132], "sampler": [19, 134, 135, 136], "One": 19, "freeli": 19, "nfe": 19, "advis": 19, "actual": [19, 96], "static": 19, "ell_2": [19, 31, 61, 82, 83, 84, 121], "simeq": 19, "With": 19, "mind": 19, "num_step": 19, "skip": [19, 76], "seq_next": 19, "time_pair": 19, "x_t": [19, 133], "x0_pred": 19, "next_t": 19, "at_next": 19, "call": [19, 22, 40, 41, 43, 48, 52, 63, 65, 71, 72, 74, 75, 81, 96, 138, 139, 140], "instead": [19, 48, 50, 52, 62, 63, 65, 71, 72, 74, 75, 95, 139, 140], "aux_x": 19, "option": [19, 39, 76, 79, 81, 86, 110, 111, 117, 123, 128, 137, 141, 148], "l2_loss": 19, "norm_grad": 19, "sigma_tild": 19, "c2": 19, "xt_next": 19, "append": [19, 145], "92it": 19, "93it": 19, "72it": [19, 22, 28], "74it": [19, 22, 23], "75it": 19, "70it": 19, "71it": [19, 22], "57it": [19, 25], "54it": [19, 28], "55it": 19, "61it": 19, "68it": 19, "62it": [19, 22, 23], "64it": [19, 28], "102": 19, "103": 19, "104": 19, "105": 19, "106": 19, "107": 19, "108": 19, "109": 19, "110": 19, "111": 19, "112": [19, 20], "113": [19, 22], "114": 19, "115": 19, "116": 19, "117": 19, "119": 19, "123": 19, "124": 19, "125": 19, "126": 19, "127": 19, "129": 19, "130": 19, "131": 19, "132": 19, "133": 19, "134": 19, "135": 19, "136": 19, "137": 19, "138": 19, "139": 19, "140": 19, "141": 19, "142": 19, "143": 19, "144": 19, "145": 19, "146": 19, "147": 19, "59it": [19, 32], "148": 19, "149": 19, "150": [19, 22], "151": 19, "152": 19, "153": 19, "154": 19, "155": 19, "156": 19, "157": 19, "158": [19, 74, 75], "159": 19, "160": 19, "161": 19, "162": 19, "163": 19, "164": 19, "165": 19, "166": 19, "167": 19, "168": 19, "169": 19, "170": 19, "171": 19, "172": 19, "173": 19, "174": 19, "175": 19, "176": 19, "177": [19, 22], "178": 19, "179": 19, "180": [19, 73, 129], "181": 19, "182": 19, "183": [19, 22], "184": 19, "185": 19, "186": 19, "187": 19, "188": 19, "189": 19, "190": 19, "191": 19, "193": 19, "194": 19, "195": 19, "196": 19, "197": 19, "198": 19, "199": 19, "341": [19, 21], "demo_dp": [19, 21], "quantifi": 20, "bayesian": 20, "neg": [20, 42, 86, 134, 135, 136], "propto": [20, 42, 89], "point": [20, 27, 34, 39, 41, 43, 50, 79, 80, 81, 82, 84, 96, 121, 141], "role": 20, "fnejacobianspectralnorm": 20, "make": [20, 34, 138], "firmli": 20, "expans": 20, "nonexpans": [20, 50], "help": [20, 34], "stabil": 20, "download_lipschitz": [20, 69], "dncnn_sigma2_lipschitz_color": 20, "56m": 20, "721kb": 20, "944kb": 20, "416k": 20, "28mb": [20, 22], "792k": 20, "16mb": 20, "07m": 20, "45mb": 20, "47mb": 20, "86m": [20, 32], "5e3": 20, "31it": [20, 22], "712": [20, 21, 32, 33], "demo_sampl": [20, 21], "613": 21, "auto_examples_sampl": 21, "present": [22, 23, 24], "beyond": 22, "subset": [22, 24, 25, 120], "coil": [22, 122], "fastmri": 22, "973": 22, "320x320": 22, "faster": 22, "fastmri_knee_singlecoil": 22, "399m": 22, "3k": 22, "954kib": 22, "196k": 22, "952kib": 22, "466k": 22, "56mib": 22, "802k": 22, "11mib": 22, "45mib": 22, "71mib": [22, 31, 32], "50mib": [22, 32], "68mib": [22, 32], "73mib": [22, 31], "92m": [22, 32], "95mib": [22, 32], "54m": [22, 25, 32], "11m": [22, 31], "04m": [22, 32], "94mib": [22, 32], "96mib": [22, 32], "44m": 22, "97mib": [22, 32], "38m": [22, 23], "75mib": [22, 32], "93mib": [22, 32], "59mib": 22, "22mib": 22, "46mib": 22, "62mib": [22, 31], "417kib": 22, "508kib": 22, "707kib": 22, "920kib": 22, "08mib": 22, "35mib": 22, "18mib": 22, "19mib": 22, "36mib": [22, 32], "70mib": [22, 32], "72mib": 22, "91mib": [22, 31, 32], "358m": 22, "359m": 22, "360m": 22, "361m": 22, "362m": 22, "363m": 22, "364m": 22, "365m": 22, "366m": 22, "367m": 22, "368m": 22, "369m": 22, "370m": 22, "371m": 22, "372m": 22, "373m": 22, "374m": 22, "375m": 22, "376m": 22, "377m": 22, "378m": 22, "379m": 22, "380m": 22, "381m": 22, "382m": 22, "383m": 22, "384m": 22, "385m": 22, "386m": 22, "387m": 22, "388m": 22, "389m": 22, "390m": 22, "391m": 22, "392m": 22, "393m": 22, "394m": 22, "395m": 22, "396m": 22, "397m": 22, "398m": 22, "mri_mask_128x128": 22, "900": 22, "demo_equivariant_imag": [22, 26], "opt": 22, "hostedtoolcach": 22, "x64": 22, "lib": 22, "python3": 22, "site": 22, "packag": [22, 36, 37, 39, 40, 42, 43, 64], "1603": 22, "antialia": 22, "randomresizedcrop": 22, "chang": [22, 34, 79, 81, 138], "v0": [22, 73], "pil": 22, "backend": 22, "suppress": 22, "warn": [22, 87], "directli": [22, 30, 45, 68, 73, 91, 143, 144], "pass": [22, 27, 34, 39, 43, 48, 52, 63, 65, 71, 72, 74, 75, 91, 117, 139, 140, 141, 142, 143, 144], "futur": [22, 34], "still": 22, "antialias": 22, "infer": 22, "37it": [22, 23], "79it": 22, "tabl": [22, 28, 29, 38], "wrap": [22, 27, 28, 29, 32, 64], "scheme": [22, 23], "mc": [22, 23], "ei": [22, 49], "group": [22, 49], "rotat": [22, 23, 49], "acquisit": [22, 40, 79, 121, 124, 128, 134, 135, 136], "translat": [22, 49, 140], "scratch": [22, 23, 24, 25], "mcloss": [22, 23], "eiloss": 22, "new_demo_ei_ckp_150_v3": 22, "17m": [22, 31], "112k": 22, "643kb": 22, "320k": 22, "608k": 22, "920k": 22, "32mb": [22, 25], "eval_dataload": [22, 23, 24, 25, 27, 28, 29, 30, 32, 138], "187019": 22, "40e": 22, "loss_mc": [22, 23], "26e": 22, "loss_ei": 22, "28e": 22, "eval_psnr_model": [22, 23, 24, 25, 27, 28, 29, 30, 32], "baseunfold": [22, 28, 29, 30, 31, 32, 43, 141, 143, 144], "fixed_point": [22, 27, 28, 29, 30, 31, 32], "fixedpoint": [22, 27, 28, 29, 30, 31, 32, 39, 41, 43, 79, 96, 141], "hqsiter": [22, 27], "fstephq": [22, 27], "gstephq": [22, 27], "init_params_algo": [22, 27, 28, 29, 30, 31, 32], "parameterdict": [22, 27, 28, 29, 30, 31, 32], "type": [22, 27, 28, 29, 30, 31, 32, 70, 113, 129, 149, 153, 154, 155], "parameterlist": [22, 27, 28, 29, 31, 32], "modulelist": [22, 27, 28, 29, 30, 31, 32], "in_conv": [22, 27, 30, 32], "conv_list": [22, 27, 30, 32], "out_conv": [22, 27, 30, 32], "nl_list": [22, 27, 30, 32], "equivariant_imag": 22, "21it": [22, 23], "98it": 22, "40it": [22, 28], "13it": 22, "32it": [22, 23, 25, 30], "48it": 22, "36it": 22, "53it": [22, 28], "42it": 22, "18it": 22, "41it": [22, 23], "83869761636812": 22, "07567093164765": 22, "70320406352004": 22, "140405830716642": 22, "375": [22, 26], "y_i": [23, 54], "a_": [23, 54, 113], "g_i": [23, 54], "dot": [23, 54, 77], "approach": [23, 62], "unsupervis": [23, 138], "sum_": 23, "mnist": [23, 24, 25, 28, 29, 35, 47], "train_base_dataset": [23, 27, 28, 29, 30, 31, 32], "root": [23, 24, 25, 28, 29, 34, 35], "test_base_dataset": [23, 27, 28, 29, 30, 31, 32], "receiv": 23, "whole": [23, 24, 25, 134], "number_of_oper": 23, "demo_multioperator_imag": [23, 26], "test_datapoint": [23, 24, 25, 28, 29, 47], "329": 23, "713": 23, "389": 23, "756": 23, "397": 23, "26it": [23, 28], "738": 23, "82it": [23, 28], "398": 23, "765": 23, "52it": 23, "19it": 23, "741": 23, "393": 23, "50it": 23, "753": 23, "56it": 23, "396": 23, "745": 23, "394": 23, "28it": [23, 31], "401": 23, "743": 23, "artifact": [23, 62, 73, 137, 138], "remov": [23, 41, 62, 137, 138], "phi": [23, 62], "multi": [23, 54], "moi": [23, 54], "necessari": [23, 34, 68, 132, 133], "moiloss": 23, "demo_moi_ckp_10": 23, "790kb": 23, "192k": 23, "849kb": 23, "504k": [23, 24], "904k": 23, "46m": [23, 31], "84m": [23, 24, 32], "79m": 23, "69m": 23, "67m": 23, "10mb": 23, "2069441": 23, "51e": [23, 27], "67e": 23, "loss_moi": 23, "bfbatchnorm2d": [23, 24, 25], "momentum": [23, 24, 25, 79, 81, 141], "affin": [23, 24, 25], "track_running_stat": [23, 24, 25], "multioperator_imag": 23, "51it": 23, "19961757659912": 23, "608243800995434": 23, "103665542602538": 23, "7379695636842403": 23, "820": [23, 26], "correl": 24, "neighbor": [24, 55], "map": [24, 30, 38, 40, 42, 55, 68, 74, 75, 89, 116, 121, 124, 132, 133], "propag": [24, 49, 55], "corrupt": [24, 25], "demo_n2n": 24, "317": 24, "695": 24, "23it": [24, 28], "ckp_50_demo_n2n": 24, "780kb": 24, "248k": 24, "12mb": [24, 25], "912k": 24, "51mb": 24, "15m": [24, 31], "46mb": [24, 25], "21m": [24, 31], "50m": [24, 31], "40m": [24, 31], "71m": 24, "444737": [24, 25], "04e": 24, "loss_neigh2neigh": 24, "45it": 24, "59684829711914": 24, "498270922944005": 24, "346026992797853": [24, 25], "7863424937640642": [24, 25], "899": [24, 26], "demo_n2n_denois": [24, 26], "knowledg": 25, "about": [25, 36, 37], "unbias": [25, 58, 59, 60], "odot": [25, 59, 60, 119], "bernoulli": [25, 59, 60, 120], "elementwis": [25, 59, 60], "yann": [25, 28], "lecun": [25, 28], "exdb": [25, 28], "idx3": [25, 28], "ubyt": [25, 28], "gz": [25, 28], "raw": [25, 28], "9912422": [25, 28], "163659418": 25, "extract": [25, 28], "idx1": [25, 28], "28881": [25, 28], "153530663": 25, "t10k": [25, 28], "1648877": [25, 28], "55413132": 25, "4542": [25, 28], "29129248": 25, "88it": 25, "demo_sur": 25, "250": 25, "703": 25, "surepoissonloss": 25, "suregaussianloss": 25, "surepgloss": 25, "ckp_10_demo_sur": 25, "677kb": 25, "200k": 25, "991kb": 25, "464k": 25, "720k": 25, "877kb": 25, "925kb": 25, "63m": [25, 32], "80e": 25, "loss_surepoisson": 25, "588863372802734": 25, "8207126642763243": 25, "251": [25, 26], "demo_sure_denois": [25, 26], "345": 26, "auto_examples_self": 26, "toi": 27, "larger": [27, 30, 32, 47, 68, 113, 121, 129, 135, 136], "wandb": [27, 32, 137, 138], "gd": [27, 141], "deq_build": [27, 43], "cbsd500": [27, 30, 32], "replac": [27, 30, 32, 41, 43], "demo_deq": [27, 33], "generated_datasets_path": [27, 28, 29, 30, 32], "helper": [27, 32, 91, 143, 144], "anderson_acceleration_forward": 27, "anderson": [27, 79, 81, 141], "anderson_acceleration_backward": [27, 141], "anderson_history_s": 27, "histori": [27, 79, 81, 141], "anderson_acceler": [27, 79, 81], "history_size_backward": [27, 141], "history_s": [27, 79, 81], "188166": 27, "76e": [27, 32], "36e": [27, 28], "93e": 27, "89e": 27, "71e": 27, "64e": 27, "basedeq": [27, 43, 143], "deq_hq": 27, "77739715576172": 27, "124963760375977": 27, "673": [27, 33], "nutshel": 28, "involv": [28, 74, 75], "learnabl": [28, 29, 31, 41, 43, 73, 76, 142], "mnist_train": [28, 29], "train_test_transform": [28, 29], "143261768": 28, "160232399": 28, "196608": 28, "1510852": 28, "360448": 28, "1176380": 28, "491520": 28, "1082003": 28, "622592": 28, "1044213": 28, "38it": 28, "753664": 28, "1035121": 28, "884736": 28, "1025685": 28, "1015808": 28, "1083489": 28, "1605632": 28, "2377751": 28, "1590042": 28, "12it": 28, "32676721": 28, "highli": [28, 29], "10x": [28, 29], "under": [28, 29, 41], "demo_lista": [28, 33], "527": 28, "min_x": [28, 29, 79, 81], "wx": 28, "_1": [28, 79, 81, 83], "pgditer": [28, 29, 79, 81], "text": [28, 29, 58, 60, 79, 82, 83, 84, 113, 115, 120, 146], "ax_k": [28, 29], "waveletdict": 28, "both": [28, 29, 30, 128, 129], "These": [28, 29, 36, 87, 142], "yield": [28, 29], "sigma_denoiser_init": 28, "loader": [28, 29, 137], "69e": [28, 30], "22e": 28, "14e": 28, "fsteppgd": [28, 29], "gsteppgd": [28, 29], "2x3": 28, "dwt": [28, 31], "dwtforward": [28, 31], "iwt": [28, 31], "dwtinvers": [28, 31], "column": [28, 29, 150], "back": [28, 29, 129], "project": [28, 29, 34, 82, 83, 129, 134, 135, 136], "domain": [28, 29, 64], "unfolded_pgd": [28, 29], "869588851928711": 28, "419172286987305": 28, "plot_paramet": [28, 29, 32], "init_param": [28, 29, 32, 152], "739": [28, 33], "demo_licp": 29, "537": 29, "minimis": [29, 79, 92, 93, 94, 95, 97], "tv": [29, 61, 74], "smooth": [29, 86], "c": [29, 31, 40, 59, 67, 68, 73, 82, 111, 112, 113, 115, 120, 128, 146, 150], "finit": 29, "dx": [29, 74, 75], "tv_smooth": 29, "mse_loss": 29, "reduct": [29, 73], "meth": [29, 31], "share": 29, "08e": 29, "86e": [29, 32], "72e": 29, "66e": 29, "65e": 29, "170351028442383": 29, "276493072509766": 29, "were": 29, "check": [29, 31, 34, 79, 81, 121], "608": [29, 33], "demo_custom_prior_unfold": [29, 33], "adler": 30, "jona": 30, "ozan": 30, "\u00f6ktem": 30, "transact": [30, 64], "medic": 30, "1322": 30, "1332": 30, "cpiter": [30, 31], "fstep": [30, 39, 41, 98, 100, 102, 106, 108], "gstep": [30, 39, 41, 99, 101, 103, 107, 109], "primalblock": 30, "dualblock": 30, "clean": [30, 32, 110, 111, 113, 115, 117, 123, 124, 129], "gauss": [30, 32], "demo_unfolded_sr": [30, 32], "pditer": 30, "redefin": 30, "respect": [30, 43, 96], "afterward": [30, 48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "pdnetiter": 30, "gsteppdnet": 30, "fsteppdnet": 30, "Their": 30, "pdnetprior": 30, "pdnetdatafid": 30, "z0": 30, "u0": 30, "7125": 30, "50e": 30, "prelu": 30, "num_paramet": 30, "440112113952637": 30, "99602746963501": [30, 32], "723": [30, 33], "demo_learned_primal_du": [30, 33], "reformul": 31, "underset": [31, 39, 41, 74, 75, 77, 78, 79, 82, 83, 84, 93, 121], "iota_": [31, 82], "regnam": [31, 39, 41, 79, 93], "ball": [31, 82, 83], "center": [31, 82, 83], "recal": [31, 43, 142], "convex": [31, 39, 74, 75, 80, 82, 87], "infti": [31, 82], "fashion": [31, 43, 44, 113, 120, 128, 145], "4k": [31, 32], "9kib": 31, "1k": [31, 32], "370kib": 31, "228k": 31, "713kib": 31, "515k": 31, "44mib": [31, 32], "794k": 31, "31mib": 31, "42m": [31, 32], "43mib": 31, "54mib": 31, "77m": 31, "81m": 31, "98m": [31, 32], "75m": 31, "stepsize_du": [31, 39, 108, 109], "document": [31, 34, 38, 41, 52, 58, 59, 60, 93, 119, 127], "21e": 31, "57e": 31, "20e": 31, "85e": 31, "fstepcp": 31, "gstepcp": 31, "3x3": 31, "vialis": 31, "correctli": 31, "model_spec": 31, "eval": 31, "569": [31, 33], "demo_unfolded_constrained_lista": [31, 33], "jointli": 32, "109kib": 32, "199kib": 32, "144k": 32, "501kib": 32, "261k": 32, "724kib": 32, "458k": 32, "12mib": 32, "769k": 32, "07mib": 32, "33mib": 32, "51mib": 32, "65mib": 32, "268kib": 32, "397kib": 32, "543kib": 32, "26m": 32, "692kib": 32, "963kib": 32, "26mib": 32, "98mib": 32, "20mib": 32, "52mib": 32, "63mib": 32, "22m": 32, "66mib": 32, "01mib": 32, "99mib": 32, "506kib": 32, "631kib": 32, "848kib": 32, "53mib": 32, "29mib": 32, "58mib": 32, "64mib": 32, "653kib": 32, "dr": [32, 39, 91, 94, 100, 101, 143, 144], "dougla": [32, 91, 94, 143, 144], "rachford": [32, 91, 94, 143, 144], "resp": [32, 41], "lenght": 32, "element": [32, 38, 52, 63, 110, 113, 119, 123], "relax": [32, 39, 41, 70, 74, 75, 92, 93, 94, 96], "188179": 32, "drsiter": 32, "fstepdr": 32, "gstepdr": 32, "unfolded_dr": 32, "292417526245117": 32, "demo_vanilla_unfold": [32, 33], "024": 33, "auto_examples_unfold": 33, "driven": 34, "welcom": 34, "ultim": 34, "aim": [34, 41, 43], "comprehens": 34, "acknowledg": 34, "contributor": 34, "taken": 34, "decid": 34, "authorship": 34, "public": 34, "prefer": 34, "fork": 34, "repositori": [34, 45, 55, 66, 68, 69, 70, 72, 73], "submit": 34, "pull": 34, "pr": 34, "prepar": 34, "pleas": [34, 45], "compliant": 34, "black": 34, "style": 34, "directori": [34, 35, 137, 138, 152], "desir": [34, 47], "machin": 34, "pytest": 34, "html": [34, 74, 75], "doc": [34, 137, 138], "familiar": 34, "workflow": 34, "open": [34, 45], "tracker": [34, 45], "ask": 34, "question": [34, 45], "discord": [34, 45], "server": [34, 45], "try": [34, 45], "address": 34, "soon": 34, "send": 34, "email": 34, "develop": 34, "idea": 34, "subpackag": 35, "celeba": [35, 47], "transform_data": 35, "data_train": 35, "data_test": 35, "300": [35, 40], "format": [35, 47], "dinv_dataset": [35, 47], "popular": 36, "especi": 36, "design": [36, 58, 59, 60], "written": [36, 39, 79], "alon": [36, 49], "submodul": 36, "augment": [36, 47, 49, 54], "togeth": 36, "lipschitz": [36, 86, 121, 135, 136], "quick": 37, "block": [37, 66, 70, 73], "standalon": 37, "unifi": 38, "summar": 38, "xset": [38, 39, 40, 41, 79, 80, 121, 124], "underli": [38, 68], "yset": [38, 39, 40, 41, 79, 80, 121, 124], "observ": [38, 54, 80, 92, 94, 96, 98, 121, 124], "often": 38, "forw": [38, 40, 41, 49, 53, 54], "determinist": [38, 40, 121, 124], "captur": [38, 40, 121, 124], "system": [38, 81], "colon": 38, "stochast": [38, 40, 72, 73, 121, 124, 132, 135], "mapsto": [38, 39, 40, 41, 79, 121, 124], "datafid": [38, 39, 41, 43, 79, 80, 83, 84, 86], "distanc": [38, 39, 79, 80, 83, 84, 86, 87], "enforc": [38, 39, 41, 53, 71, 79], "choic": [38, 39, 58, 59, 60], "below": 38, "discrep": [38, 39, 79], "reg": [38, 39, 41, 42, 43, 79], "promot": 38, "plausibl": 38, "collect": [39, 40, 43, 45], "routin": [39, 43], "eq": [39, 41, 79], "min_prob": [39, 41, 79], "tag": [39, 73, 79], "quad": [39, 41, 58, 60, 79], "datafidnam": [39, 41, 79, 80, 84, 86], "mathbb": [39, 41, 50, 51, 79, 113, 115, 120], "precis": [39, 41, 79, 121], "abov": [39, 79, 93], "qquad": [39, 41, 79, 81, 96], "baseoptim": [39, 41, 91, 142], "either": [39, 41, 43, 47, 68, 73, 77, 78, 79, 91, 143, 144, 150], "predefin": [39, 45, 121, 124], "serv": [39, 78], "come": [39, 87], "distancenam": [39, 80, 84, 86, 93], "circ": [39, 52, 121, 124], "tikhonov": [39, 41], "overwritten": [39, 41, 87, 113, 121, 124, 129], "store": [39, 79, 81, 96, 113, 128, 134], "whose": [39, 119, 129, 152], "typic": [39, 42, 89], "enough": 39, "theori": [39, 41, 74, 75], "_g": [39, 41, 43, 96, 142], "appear": 40, "applic": [40, 74, 75], "character": [40, 121, 124], "affect": [40, 47, 82, 121, 124], "x_adj": [40, 123], "x_dagger": 40, "bilinear": [40, 117, 123], "optimis": 41, "read": 41, "denoisernam": 41, "On": 41, "hand": 41, "assumpt": [41, 93, 132], "g_": 41, "parametr": 41, "consequ": 41, "encompass": [41, 142], "aris": 41, "reader": 41, "includ": [42, 47], "leverag": [42, 43, 51, 115, 141], "convolv": [42, 89], "valid": [42, 80, 87, 110, 111, 117, 123], "posteriori": [42, 89], "yosida": [42, 89], "envelop": [42, 89, 95], "inf_z": [42, 89], "_f": [43, 96, 142], "sometim": 43, "builder": 43, "virtual": [43, 49, 141], "infinit": [43, 141], "look": 43, "partial": [43, 83, 141], "star": [43, 141], "incom": [43, 141], "basic": [44, 45], "wrapper": 44, "repres": [44, 79, 110, 123, 145], "better": 44, "scalar": [44, 61, 119, 138], "similar": [44, 113, 120, 128, 145], "quickli": 44, "framework": 45, "state": 45, "art": 45, "latest": 45, "version": [45, 74, 75, 139, 140, 145], "pick": 45, "join": 45, "convers": 45, "touch": 45, "julian": 45, "tachella": 45, "dongdong": 45, "chen": 45, "samuel": 45, "matthieu": 45, "terri": 45, "bool": [46, 47, 49, 50, 51, 54, 56, 62, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 91, 96, 104, 105, 113, 120, 121, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 146, 148, 150, 151, 152], "hd5": 47, "hd5dataset": 47, "assign": [47, 123], "evenli": 47, "datapoint": 47, "filenam": 47, "worker": 47, "charbonni": 48, "overridden": [48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "although": [48, 52, 63, 65, 71, 72, 74, 75, 87, 139, 140], "recip": [48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "within": [48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "regist": [48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "hook": [48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "silent": [48, 52, 63, 65, 71, 72, 74, 75, 139, 140], "mseloss": [49, 53, 54, 55, 56, 57], "apply_nois": [49, 54], "invari": [49, 82], "2103": [49, 136], "14756": 49, "t_g": 49, "ell_1": [49, 53, 54, 55, 56, 57, 74, 77, 78, 83], "sensor": [49, 54, 111, 113, 115, 117, 121, 123, 124, 129], "doe": [49, 50, 51, 82, 95, 121, 124, 142], "x_net": [49, 53, 54, 57, 58, 59, 60, 61, 138], "tol": [50, 51, 121, 124], "eval_mod": [50, 51], "firm": 50, "jacobian": [50, 51, 74], "spectral": [50, 51, 121], "id": [50, 88], "denot": [50, 52, 82, 95, 110, 111, 112, 119], "du": [50, 51], "2012": [50, 51], "13247v2": [50, 51], "jacobianspectralnorm": 50, "toler": [50, 51, 121, 124], "whether": [50, 51, 73, 74, 75, 79, 91, 141, 143, 144, 148, 152], "y_in": 50, "x_in": 50, "args_model": 50, "kwargs_model": 50, "fne": 50, "argument": [50, 79, 81, 91, 104, 105, 142, 143, 144], "kargs_model": 50, "keyword": [50, 81, 104, 105, 142], "df": 51, "usag": [51, 123, 150], "reg_l2": 51, "diag": [51, 113, 115, 120], "largest": [51, 78, 79], "eigenvalu": 51, "regval": 51, "onesid": 52, "ell_p": 52, "_p": 52, "side": 52, "ieeexplor": [52, 58, 59, 60, 119, 127], "abstract": [52, 58, 59, 60, 119, 127], "6418031": 52, "wise": [52, 119], "physics_list": 54, "a_g": 54, "x_i": 54, "2201": [54, 131], "12151": 54, "taohuang2018": 55, "split_ratio": 56, "regular_mask": 56, "m_1": 56, "m_2": 56, "inversef": [56, 138], "pubm": 56, "ncbi": 56, "nlm": 56, "nih": 56, "gov": 56, "32614100": 56, "increas": [56, 76], "target": 57, "b_i": 58, "geq": [58, 68, 86, 134, 135, 136], "diverg": [58, 59, 60], "4099398": 58, "truli": [58, 59, 60], "noiseless": [58, 59, 60, 68], "sensit": [58, 59, 60], "proport": [58, 59, 60, 78], "tau1": 59, "tau2": 59, "tau_1": 59, "tau_2": 59, "2a": 59, "6714502": [59, 60], "variat": [61, 74, 75, 121], "vertic": [61, 122], "horizont": 61, "pinv": 62, "ckpt_path": 62, "inspir": [62, 133], "fbpconvnet": 62, "1611": 62, "03679": 62, "dagger": [62, 115], "dim_input": 63, "dim_mid": 63, "dim_hid": 63, "connect": [63, 73, 76], "debug": 63, "prototyp": 63, "featur": 63, "intermedi": [63, 76], "latent": 63, "3d": 64, "collabor": 64, "davob": 64, "2007": 64, "un": 65, "suit": 65, "tupl": [65, 67, 71, 73, 79, 81, 110, 112, 113, 117, 119, 120, 122, 123, 128, 134, 135, 136, 137, 148], "scale_out": 65, "nc": [66, 70], "512": [66, 70], "nb": [66, 70], "act_mod": [66, 70], "downsample_mod": [66, 70], "strideconv": [66, 70], "upsample_mod": [66, 70], "convtranspos": [66, 70], "like": [66, 74], "encod": 66, "nf": [66, 69], "activ": [66, 69, 70], "leakyrelu": [66, 70], "elu": [66, 70], "softplu": [66, 70], "avgpool": [66, 70], "pool": [66, 70, 71], "pixelsuffl": [66, 70], "upconv": [66, 70], "neighbour": [66, 70], "onlin": [66, 68, 69, 70, 72, 73, 138], "final": [66, 68, 69, 70, 72, 73], "2500": 67, "re_init": 67, "minimiza": 67, "slow": [67, 117], "use_fp16": 68, "attent": [68, 73], "noise_level": 68, "embed": [68, 73], "jychoi118": 68, "ilvr_adm": 68, "hidden": [68, 73], "imagenet128": 68, "handl": [68, 131, 132], "n_1": 68, "n_2": 68, "gb": 68, "357": 68, "convert_to_fp16": 68, "torso": 68, "float16": 68, "convert_to_fp32": 68, "find": [68, 127, 133, 141], "type_t": 68, "tradit": 68, "forward_denois": 68, "width": [68, 122, 129, 150], "height": [68, 122, 129, 150], "divis": 68, "forward_diffus": 68, "get_alpha_prod": [68, 133], "0001": [68, 79, 81, 133, 141], "pure": [68, 133], "1608": 69, "03981": 69, "seri": 69, "bias": [69, 76, 137, 138], "epub": 69, "siam": [69, 74], "doi": 69, "1137": 69, "20m1387961": 69, "overrid": [71, 73], "boolean": [71, 134], "in_nc": 72, "config": 72, "drop_path_r": [72, 73], "input_resolut": 72, "swin": [72, 73], "conv": [72, 73], "practic": [72, 121], "blind": [72, 110], "synthesi": 72, "stage": 72, "drop": 72, "patch_siz": 73, "in_chan": 73, "embed_dim": 73, "num_head": 73, "window_s": 73, "mlp_ratio": 73, "qkv_bia": 73, "qk_scale": 73, "drop_rat": 73, "attn_drop_r": 73, "norm_lay": 73, "layernorm": 73, "ap": 73, "patch_norm": 73, "use_checkpoint": 73, "upscal": 73, "img_rang": 73, "resi_connect": 73, "1conv": 73, "pretrained_noise_level": 73, "offici": 73, "patch": 73, "head": 73, "window": 73, "mlp": 73, "queri": 73, "qk": 73, "head_dim": 73, "dropout": 73, "absolut": [73, 121, 124], "memori": [73, 138, 147], "sr": 73, "pixelshuffl": 73, "pixelshuffledirect": 73, "3conv": 73, "jingyunliang": 73, "releas": 73, "n_it_max": [74, 75], "u2": [74, 75], "r2": 74, "2nd": 74, "generalis": 74, "bredi": 74, "kunisch": 74, "sci": 74, "492": 74, "526": 74, "2010": 74, "uniqu": [74, 75], "auxiliari": [74, 79, 81], "field": [74, 75], "lambda_1": 74, "lambda_2": 74, "behav": 74, "frobeniu": 74, "hessian": 74, "lipschitzian": [74, 75], "composit": [74, 75], "vol": [74, 75], "460": [74, 75], "479": [74, 75], "2013": [74, 75], "descript": [74, 75], "laurent": [74, 75], "matlab": [74, 75], "lcondat": [74, 75], "softwar": [74, 75], "daniil": [74, 75], "smolyakov": [74, 75], "criterion": [74, 75, 79, 81, 82, 83, 121], "primari": [74, 75], "th": [74, 75, 77, 78, 136], "isotrop": 75, "circular_pad": 76, "circular": [76, 110, 111, 112, 117, 123, 140], "list_wv": 77, "db4": 77, "non_linear": [77, 78], "overcomplet": [77, 113, 121, 129], "psi": [77, 78], "_n": [77, 78], "psi_1": 77, "psi_2": 77, "psi_l": 77, "ell_0": [77, 78], "hard": [77, 78], "variant": [77, 78], "topk": [77, 78], "kept": [77, 78], "mother": [77, 78], "orthonorm": [78, 115], "subband": 78, "cheap": 78, "pywavelet": 78, "convent": [78, 114], "equal": [78, 89, 119, 120, 123, 128, 129], "hard_threshold_topk": 78, "interpret": 78, "prox_l0": 78, "prox_l1": 78, "gamma_backtrack": 79, "eta_backtrack": 79, "custom_metr": 79, "beta_anderson_acc": [79, 81], "eps_anderson_acc": [79, 81], "consit": 79, "achiev": 79, "leftarrow": 79, "relev": [79, 91, 143, 144], "hold": 79, "float64": [79, 81], "a_forward": [79, 80, 81, 84], "optimalgo": 79, "claim": 79, "strategi": 79, "initili": 79, "ty": 79, "check_conv_fn": [79, 81], "check_iteration_fn": [79, 81], "get_auxiliary_vari": 79, "get_primal_vari": 79, "init_iterate_fn": [79, 81], "x_0": [79, 93], "u_0": [79, 93], "f_0": 79, "init_metrics_fn": [79, 81], "metric_nam": 79, "update_data_fidelity_fn": [79, 81], "update_metrics_fn": [79, 81], "update_params_fn": [79, 81], "update_prior_fn": [79, 81], "nonlinear": 80, "f_x": 80, "0000": [80, 84], "5000": [80, 84], "6000": [80, 84], "callabl": [80, 85, 87, 88, 91, 115, 121, 124, 143, 144], "nabla_x": [80, 87, 88], "grad_d": [80, 83, 84, 86], "nabla_u": [80, 86], "stepsize_int": [80, 86, 87], "max_iter_int": [80, 86, 87], "tol_int": [80, 86, 87], "prox_conjug": [80, 87], "front": [80, 82, 87], "prox_d": [80, 82, 83, 84, 86], "hspace": 81, "2cm": 81, "prox_g": [81, 109], "sign": [81, 83, 113], "initialis": [81, 121], "sol": 81, "proce": 81, "anderson_acceleration_step": 81, "tx_prev": 81, "x_hist": 81, "t_hist": 81, "evlauaton": 81, "hp": 81, "loop": 81, "f_k": 81, "commonli": 81, "init_anderson_acceler": 81, "insid": [82, 129, 134], "1e16": 82, "au": [82, 83, 84], "proj": 82, "normalis": 84, "grad_da": 84, "prox_da": 84, "bkg": 86, "densiti": 86, "absenc": 86, "overwrit": 87, "forget": 87, "rais": 87, "mmse": 89, "string": [91, 143, 144], "direct": 92, "invert": [92, 93, 94], "pd": [93, 96], "kx": 93, "hal": 93, "scienc": 93, "00490826": 93, "satisfi": [93, 97], "intiliaz": 93, "three": 93, "z_0": 93, "1f": 95, "abus": 96, "terminologi": 96, "relaxation_step": 96, "lip": 97, "primal_dual_cp": [108, 109], "unknown": [110, 119], "support": 110, "replic": [110, 111, 117, 123], "reflect": [110, 111, 117, 123], "listtensor": [110, 119], "blurri": 110, "delta": 110, "without": [111, 113, 115, 117, 123, 124, 129], "exact": [111, 113, 115, 117, 121, 123, 129], "fft": 112, "allow": [112, 120, 128, 145], "prod": 113, "iid": [113, 128], "orthogon": [113, 135], "sor": 113, "1506": 113, "03521": 113, "flip": 113, "dst": 113, "bigger": [113, 128, 150], "o": [113, 119, 128], "mn": [113, 128], "tend": 113, "due": [113, 129], "marcenko": 113, "pastur": 113, "law": 113, "discret": [113, 122], "sine": 113, "independ": [113, 128], "en": [113, 121, 129], "wiki": [113, 121, 129], "conjugate_gradient_method": [113, 121, 129], "pseudoinvers": [113, 115, 121, 124, 129], "rec601": 114, "parent": [115, 121, 124], "express": 115, "manner": [115, 138], "just": 116, "nonetyp": [117, 123], "use_fft": 117, "1510": 117, "00143": 117, "offset": 119, "5567108": 119, "exp": 119, "medium": 119, "transmiss": 119, "atmospher": 119, "light": 119, "hazi": 119, "match": [120, 127, 145], "simultan": 120, "sensor_model": [121, 124], "verifi": [121, 134, 136], "incorpor": [121, 124], "quantiz": [121, 124], "satur": [121, 124], "__add__": [121, 124, 145], "produc": [121, 124], "__mul__": [121, 124, 145], "concanten": [121, 124], "inde": 121, "quantiti": 121, "theoret": 121, "doubl": 121, "rel": 121, "image_s": 122, "320": 122, "acceleration_factor": 122, "magnet": 122, "reson": 122, "slice": 122, "sfx": 122, "reset": [122, 134, 138], "sample_mask": 122, "noise_color": 123, "noise_grai": 123, "randn": 123, "x_pinv": 123, "guess": [124, 132, 133], "mul": 124, "divid": [126, 145], "9127841": 127, "review": 127, "grid": [127, 150], "histogram": 127, "accord": 128, "integr": 129, "plane": 129, "rx": 129, "dimension": 129, "ramp": 129, "robust": 129, "uniformli": 129, "360": [129, 139], "inscrib": 129, "uniform": [130, 153], "amplitud": 130, "98989899": 131, "97979798": 131, "96969697": 131, "95959596": 131, "94949495": 131, "93939394": 131, "92929293": 131, "91919192": 131, "90909091": 131, "8989899": 131, "88888889": 131, "87878788": 131, "86868687": 131, "85858586": 131, "84848485": 131, "83838384": 131, "82828283": 131, "81818182": 131, "80808081": 131, "7979798": 131, "78787879": 131, "77777778": 131, "76767677": 131, "75757576": 131, "74747475": 131, "73737374": 131, "72727273": 131, "71717172": 131, "70707071": 131, "6969697": 131, "68686869": 131, "67676768": 131, "66666667": 131, "65656566": 131, "64646465": 131, "63636364": 131, "62626263": 131, "61616162": 131, "60606061": 131, "5959596": 131, "58585859": 131, "57575758": 131, "56565657": 131, "55555556": 131, "54545455": 131, "53535354": 131, "52525253": 131, "51515152": 131, "50505051": 131, "49494949": 131, "48484848": 131, "47474747": 131, "46464646": 131, "45454545": 131, "44444444": 131, "43434343": 131, "42424242": 131, "41414141": 131, "4040404": 131, "39393939": 131, "38383838": 131, "37373737": 131, "36363636": 131, "35353535": 131, "34343434": 131, "33333333": 131, "32323232": 131, "31313131": 131, "3030303": 131, "29292929": 131, "28282828": 131, "27272727": 131, "26262626": 131, "25252525": 131, "24242424": 131, "23232323": 131, "22222222": 131, "21212121": 131, "2020202": 131, "19191919": 131, "18181818": 131, "17171717": 131, "16161616": 131, "15151515": 131, "14141414": 131, "13131313": 131, "12121212": 131, "11111111": 131, "1010101": 131, "09090909": 131, "08080808": 131, "07070707": 131, "06060606": 131, "05050505": 131, "04040404": 131, "03030303": 131, "02020202": 131, "01010101": 131, "11793": 131, "save_iter": 132, "14687": 132, "compute_alpha_beta": 132, "2305": 133, "08995": 133, "varepsilon_t": 133, "tun": 133, "sigma_n": 133, "get_alpha_beta": 133, "get_noise_schedul": 133, "thresh_conv": [134, 135, 136], "save_chain": [134, 135, 136], "g_statist": [134, 135, 136], "sanpl": 134, "mykernel": 134, "iterator_param": 134, "new_x": 134, "mysampl": 134, "chain": [134, 135, 136], "welford": 134, "integ": [134, 135, 136, 140], "statist": [134, 135, 136], "percentag": [134, 135, 136], "burn": [134, 135, 136], "period": [134, 135, 136], "discard": [134, 135, 136], "constraint": [134, 135, 136], "function_handl": [134, 135, 136], "get_chain": 134, "mean_has_converg": 134, "var_has_converg": 134, "inner_it": 135, "rung": 135, "kutta": 135, "chebyshev": 135, "stabilis": 135, "varga": 135, "pereyra": 135, "zygalaki": 135, "1908": 135, "08845": 135, "tip": [135, 136], "damp": 135, "inner": 135, "outer": 135, "04715": 136, "pi_": 136, "interv": 136, "wandb_setup": [137, 138], "n_plot_max_wandb": [137, 138], "online_measur": [137, 138], "consol": [137, 138], "ai": [137, 138], "setup": [137, 138], "quickstart": [137, 138], "linear_std_psnr": 137, "grad_clip": 138, "inpu": 138, "wider": 138, "offlin": 138, "n_tran": [139, 140], "n_transf": [139, 140], "max_iter_backward": 141, "beta_anderson_acc_backward": 141, "eps_anderson_acc_backward": 141, "child": [141, 142], "baseiter": 142, "seamlessli": 145, "__neg__": 145, "negat": 145, "__sub__": 145, "substract": 145, "__truediv__": 145, "max_pixel": 146, "log_": 146, "max_i": 146, "2_2": 146, "chw": 146, "most": 147, "free": 147, "crop": 148, "img_list": 150, "tight": 150, "max_img": 150, "rescale_mod": 150, "min_max": 150, "row": 150, "img1": 150, "img2": 150, "img3": 150, "layout": 150, "linearli": 150}, "objects": {"deepinv.datasets": [[46, 0, 1, "", "HDF5Dataset"], [47, 0, 1, "", "generate_dataset"]], "deepinv.loss": [[48, 0, 1, "", "CharbonnierLoss"], [49, 0, 1, "", "EILoss"], [50, 0, 1, "", "FNEJacobianSpectralNorm"], [51, 0, 1, "", "JacobianSpectralNorm"], [52, 0, 1, "", "LpNorm"], [53, 0, 1, "", "MCLoss"], [54, 0, 1, "", "MOILoss"], [55, 0, 1, "", "Neighbor2Neighbor"], [56, 0, 1, "", "SplittingLoss"], [57, 0, 1, "", "SupLoss"], [58, 0, 1, "", "SureGaussianLoss"], [59, 0, 1, "", "SurePGLoss"], [60, 0, 1, "", "SurePoissonLoss"], [61, 0, 1, "", "TVLoss"]], "deepinv.loss.CharbonnierLoss": [[48, 1, 1, "", "forward"]], "deepinv.loss.EILoss": [[49, 1, 1, "", "forward"]], "deepinv.loss.FNEJacobianSpectralNorm": [[50, 1, 1, "", "forward"]], "deepinv.loss.JacobianSpectralNorm": [[51, 1, 1, "", "forward"]], "deepinv.loss.LpNorm": [[52, 1, 1, "", "forward"]], "deepinv.loss.MCLoss": [[53, 1, 1, "", "forward"]], "deepinv.loss.MOILoss": [[54, 1, 1, "", "forward"]], "deepinv.loss.Neighbor2Neighbor": [[55, 1, 1, "", "forward"]], "deepinv.loss.SplittingLoss": [[56, 1, 1, "", "forward"]], "deepinv.loss.SupLoss": [[57, 1, 1, "", "forward"]], "deepinv.loss.SureGaussianLoss": [[58, 1, 1, "", "forward"]], "deepinv.loss.SurePGLoss": [[59, 1, 1, "", "forward"]], "deepinv.loss.SurePoissonLoss": [[60, 1, 1, "", "forward"]], "deepinv.loss.TVLoss": [[61, 1, 1, "", "forward"]], "deepinv.models": [[62, 0, 1, "", "ArtifactRemoval"], [63, 0, 1, "", "AutoEncoder"], [64, 0, 1, "", "BM3D"], [65, 0, 1, "", "ConvDecoder"], [66, 0, 1, "", "DRUNet"], [67, 0, 1, "", "DeepImagePrior"], [68, 0, 1, "", "DiffUNet"], [69, 0, 1, "", "DnCNN"], [70, 0, 1, "", "GSDRUNet"], [71, 0, 1, "", "MedianFilter"], [72, 0, 1, "", "SCUNet"], [73, 0, 1, "", "SwinIR"], [74, 0, 1, "", "TGV"], [75, 0, 1, "", "TV"], [76, 0, 1, "", "UNet"], [77, 0, 1, "", "WaveletDict"], [78, 0, 1, "", "WaveletPrior"]], "deepinv.models.ArtifactRemoval": [[62, 1, 1, "", "forward"]], "deepinv.models.AutoEncoder": [[63, 1, 1, "", "forward"]], "deepinv.models.BM3D": [[64, 1, 1, "", "forward"]], "deepinv.models.ConvDecoder": [[65, 1, 1, "", "forward"]], "deepinv.models.DRUNet": [[66, 1, 1, "", "forward"]], "deepinv.models.DeepImagePrior": [[67, 1, 1, "", "forward"]], "deepinv.models.DiffUNet": [[68, 1, 1, "", "convert_to_fp16"], [68, 1, 1, "", "convert_to_fp32"], [68, 1, 1, "", "find_nearest"], [68, 1, 1, "", "forward"], [68, 1, 1, "", "forward_denoise"], [68, 1, 1, "", "forward_diffusion"], [68, 1, 1, "", "get_alpha_prod"]], "deepinv.models.DnCNN": [[69, 1, 1, "", "forward"]], "deepinv.models.MedianFilter": [[71, 1, 1, "", "forward"]], "deepinv.models.SCUNet": [[72, 1, 1, "", "forward"]], "deepinv.models.SwinIR": [[73, 1, 1, "", "forward"]], "deepinv.models.TGV": [[74, 1, 1, "", "forward"]], "deepinv.models.TV": [[75, 1, 1, "", "forward"]], "deepinv.models.UNet": [[76, 1, 1, "", "forward"]], "deepinv.models.WaveletDict": [[77, 1, 1, "", "forward"]], "deepinv.models.WaveletPrior": [[78, 1, 1, "", "forward"], [78, 1, 1, "", "hard_threshold_topk"], [78, 1, 1, "", "prox_l0"], [78, 1, 1, "", "prox_l1"]], "deepinv.optim": [[79, 0, 1, "", "BaseOptim"], [80, 0, 1, "", "DataFidelity"], [81, 0, 1, "", "FixedPoint"], [82, 0, 1, "", "IndicatorL2"], [83, 0, 1, "", "L1"], [84, 0, 1, "", "L2"], [85, 0, 1, "", "PnP"], [86, 0, 1, "", "PoissonLikelihood"], [87, 0, 1, "", "Prior"], [88, 0, 1, "", "RED"], [89, 0, 1, "", "ScorePrior"], [90, 0, 1, "", "Tikhonov"], [91, 2, 1, "", "optim_builder"]], "deepinv.optim.BaseOptim": [[79, 1, 1, "", "check_conv_fn"], [79, 1, 1, "", "check_iteration_fn"], [79, 1, 1, "", "forward"], [79, 1, 1, "", "get_auxiliary_variable"], [79, 1, 1, "", "get_primal_variable"], [79, 1, 1, "", "init_iterate_fn"], [79, 1, 1, "", "init_metrics_fn"], [79, 1, 1, "", "update_data_fidelity_fn"], [79, 1, 1, "", "update_metrics_fn"], [79, 1, 1, "", "update_params_fn"], [79, 1, 1, "", "update_prior_fn"]], "deepinv.optim.DataFidelity": [[80, 1, 1, "", "d"], [80, 1, 1, "", "forward"], [80, 1, 1, "", "grad"], [80, 1, 1, "", "grad_d"], [80, 1, 1, "", "prox"], [80, 1, 1, "", "prox_conjugate"], [80, 1, 1, "", "prox_d"], [80, 1, 1, "", "prox_d_conjugate"]], "deepinv.optim.FixedPoint": [[81, 1, 1, "", "anderson_acceleration_step"], [81, 1, 1, "", "forward"], [81, 1, 1, "", "init_anderson_acceleration"]], "deepinv.optim.IndicatorL2": [[82, 1, 1, "", "d"], [82, 1, 1, "", "prox"], [82, 1, 1, "", "prox_d"]], "deepinv.optim.L1": [[83, 1, 1, "", "d"], [83, 1, 1, "", "grad_d"], [83, 1, 1, "", "prox"], [83, 1, 1, "", "prox_d"]], "deepinv.optim.L2": [[84, 1, 1, "", "d"], [84, 1, 1, "", "grad_d"], [84, 1, 1, "", "prox"], [84, 1, 1, "", "prox_d"]], "deepinv.optim.PnP": [[85, 1, 1, "", "prox"]], "deepinv.optim.PoissonLikelihood": [[86, 1, 1, "", "d"], [86, 1, 1, "", "grad_d"], [86, 1, 1, "", "prox_d"]], "deepinv.optim.Prior": [[87, 1, 1, "", "forward"], [87, 1, 1, "", "g"], [87, 1, 1, "", "grad"], [87, 1, 1, "", "prox"], [87, 1, 1, "", "prox_conjugate"]], "deepinv.optim.RED": [[88, 1, 1, "", "grad"]], "deepinv.optim.ScorePrior": [[89, 1, 1, "", "forward"]], "deepinv.optim.Tikhonov": [[90, 1, 1, "", "g"], [90, 1, 1, "", "grad"], [90, 1, 1, "", "prox"]], "deepinv.optim.optim_iterators": [[92, 0, 1, "", "ADMMIteration"], [93, 0, 1, "", "CPIteration"], [94, 0, 1, "", "DRSIteration"], [95, 0, 1, "", "HQSIteration"], [96, 0, 1, "", "OptimIterator"], [97, 0, 1, "", "PGDIteration"]], "deepinv.optim.optim_iterators.ADMMIteration": [[92, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.CPIteration": [[93, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.DRSIteration": [[94, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.OptimIterator": [[96, 1, 1, "", "forward"], [96, 1, 1, "", "relaxation_step"]], "deepinv.optim.optim_iterators.admm": [[98, 0, 1, "", "fStepADMM"], [99, 0, 1, "", "gStepADMM"]], "deepinv.optim.optim_iterators.admm.fStepADMM": [[98, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.admm.gStepADMM": [[99, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.drs": [[100, 0, 1, "", "fStepDRS"], [101, 0, 1, "", "gStepDRS"]], "deepinv.optim.optim_iterators.drs.fStepDRS": [[100, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.drs.gStepDRS": [[101, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.hqs": [[102, 0, 1, "", "fStepHQS"], [103, 0, 1, "", "gStepHQS"]], "deepinv.optim.optim_iterators.hqs.fStepHQS": [[102, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.hqs.gStepHQS": [[103, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.optim_iterator": [[104, 0, 1, "", "fStep"], [105, 0, 1, "", "gStep"]], "deepinv.optim.optim_iterators.pgd": [[106, 0, 1, "", "fStepPGD"], [107, 0, 1, "", "gStepPGD"]], "deepinv.optim.optim_iterators.pgd.fStepPGD": [[106, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.pgd.gStepPGD": [[107, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.primal_dual_CP": [[108, 0, 1, "", "fStepCP"], [109, 0, 1, "", "gStepCP"]], "deepinv.optim.optim_iterators.primal_dual_CP.fStepCP": [[108, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.primal_dual_CP.gStepCP": [[109, 1, 1, "", "forward"]], "deepinv.physics": [[110, 0, 1, "", "BlindBlur"], [111, 0, 1, "", "Blur"], [112, 0, 1, "", "BlurFFT"], [113, 0, 1, "", "CompressedSensing"], [114, 0, 1, "", "Decolorize"], [115, 0, 1, "", "DecomposablePhysics"], [116, 0, 1, "", "Denoising"], [117, 0, 1, "", "Downsampling"], [118, 0, 1, "", "GaussianNoise"], [119, 0, 1, "", "Haze"], [120, 0, 1, "", "Inpainting"], [121, 0, 1, "", "LinearPhysics"], [122, 0, 1, "", "MRI"], [123, 0, 1, "", "Pansharpen"], [124, 0, 1, "", "Physics"], [125, 0, 1, "", "PoissonGaussianNoise"], [126, 0, 1, "", "PoissonNoise"], [127, 0, 1, "", "SinglePhotonLidar"], [128, 0, 1, "", "SinglePixelCamera"], [129, 0, 1, "", "Tomography"], [130, 0, 1, "", "UniformNoise"]], "deepinv.physics.BlindBlur": [[110, 1, 1, "", "A"], [110, 1, 1, "", "A_dagger"]], "deepinv.physics.Blur": [[111, 1, 1, "", "A"], [111, 1, 1, "", "A_adjoint"]], "deepinv.physics.CompressedSensing": [[113, 1, 1, "", "A"], [113, 1, 1, "", "A_adjoint"], [113, 1, 1, "", "A_dagger"]], "deepinv.physics.DecomposablePhysics": [[115, 1, 1, "", "A"], [115, 1, 1, "", "A_adjoint"], [115, 1, 1, "", "A_dagger"], [115, 1, 1, "", "prox_l2"]], "deepinv.physics.Downsampling": [[117, 1, 1, "", "A"], [117, 1, 1, "", "A_adjoint"], [117, 1, 1, "", "prox_l2"]], "deepinv.physics.GaussianNoise": [[118, 1, 1, "", "forward"]], "deepinv.physics.Haze": [[119, 1, 1, "", "A"], [119, 1, 1, "", "A_dagger"]], "deepinv.physics.LinearPhysics": [[121, 1, 1, "", "A_adjoint"], [121, 1, 1, "", "A_dagger"], [121, 1, 1, "", "__add__"], [121, 1, 1, "", "__mul__"], [121, 1, 1, "", "adjointness_test"], [121, 1, 1, "", "compute_norm"], [121, 1, 1, "", "prox_l2"]], "deepinv.physics.MRI": [[122, 1, 1, "", "reset"], [122, 1, 1, "", "sample_mask"]], "deepinv.physics.Pansharpen": [[123, 1, 1, "", "A"], [123, 1, 1, "", "A_adjoint"], [123, 1, 1, "", "forward"]], "deepinv.physics.Physics": [[124, 1, 1, "", "A"], [124, 1, 1, "", "A_dagger"], [124, 1, 1, "", "__add__"], [124, 1, 1, "", "__mul__"], [124, 1, 1, "", "forward"], [124, 1, 1, "", "noise"], [124, 1, 1, "", "sensor"]], "deepinv.physics.PoissonGaussianNoise": [[125, 1, 1, "", "forward"]], "deepinv.physics.PoissonNoise": [[126, 1, 1, "", "forward"]], "deepinv.physics.SinglePhotonLidar": [[127, 1, 1, "", "A"], [127, 1, 1, "", "A_dagger"]], "deepinv.physics.Tomography": [[129, 1, 1, "", "A"], [129, 1, 1, "", "A_adjoint"], [129, 1, 1, "", "A_dagger"]], "deepinv.physics.UniformNoise": [[130, 1, 1, "", "forward"]], "deepinv.sampling": [[131, 0, 1, "", "DDRM"], [132, 0, 1, "", "DPS"], [133, 0, 1, "", "DiffPIR"], [134, 0, 1, "", "MonteCarlo"], [135, 0, 1, "", "SKRock"], [136, 0, 1, "", "ULA"]], "deepinv.sampling.DDRM": [[131, 1, 1, "", "forward"]], "deepinv.sampling.DPS": [[132, 1, 1, "", "compute_alpha_betas"], [132, 1, 1, "", "forward"]], "deepinv.sampling.DiffPIR": [[133, 1, 1, "", "find_nearest"], [133, 1, 1, "", "forward"], [133, 1, 1, "", "get_alpha_beta"], [133, 1, 1, "", "get_alpha_prod"], [133, 1, 1, "", "get_noise_schedule"]], "deepinv.sampling.MonteCarlo": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "get_chain"], [134, 1, 1, "", "mean_has_converged"], [134, 1, 1, "", "reset"], [134, 1, 1, "", "var_has_converged"]], "deepinv": [[137, 2, 1, "", "test"], [138, 2, 1, "", "train"]], "deepinv.transform": [[139, 0, 1, "", "Rotate"], [140, 0, 1, "", "Shift"]], "deepinv.transform.Rotate": [[139, 1, 1, "", "forward"]], "deepinv.transform.Shift": [[140, 1, 1, "", "forward"]], "deepinv.unfolded": [[141, 0, 1, "", "BaseDEQ"], [142, 0, 1, "", "BaseUnfold"], [143, 2, 1, "", "DEQ_builder"], [144, 2, 1, "", "unfolded_builder"]], "deepinv.unfolded.BaseDEQ": [[141, 1, 1, "", "forward"]], "deepinv.utils": [[145, 0, 1, "", "TensorList"], [146, 2, 1, "", "cal_psnr"], [147, 2, 1, "", "get_freer_gpu"], [148, 2, 1, "", "load_url_image"], [149, 2, 1, "", "ones_like"], [150, 2, 1, "", "plot"], [151, 2, 1, "", "plot_curves"], [152, 2, 1, "", "plot_parameters"], [153, 2, 1, "", "rand_like"], [154, 2, 1, "", "randn_like"], [155, 2, 1, "", "zeros_like"]], "deepinv.utils.TensorList": [[145, 1, 1, "", "__add__"], [145, 1, 1, "", "__mul__"], [145, 1, 1, "", "__neg__"], [145, 1, 1, "", "__sub__"], [145, 1, 1, "", "__truediv__"], [145, 1, 1, "", "append"], [145, 1, 1, "", "flatten"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"imag": [0, 1, 2, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 45], "deblur": [0, 11, 27], "custom": [0, 6, 12, 13, 16, 29, 30], "deep": [0, 2, 27, 43, 45], "explicit": 0, "prior": [0, 2, 13, 16, 20, 29, 30, 39, 41, 87], "setup": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "path": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "data": [0, 1, 4, 8, 11, 12, 13, 14, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 39], "load": [0, 1, 2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "result": [0, 1, 2, 3, 4, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "base": [0, 1, 8, 11, 12, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "dataset": [0, 1, 8, 11, 12, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35], "degrad": [0, 1, 8, 11, 12, 13, 22, 23, 27, 28, 29, 30, 31, 32], "oper": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 27, 28, 29, 30, 31, 32, 40], "defin": [0, 2, 4, 8, 12, 16, 17, 19, 20, 27, 28, 29, 30, 31, 32], "physic": [0, 40, 124], "gener": [0, 1, 2, 3, 5, 6, 8, 11, 16, 17, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 39], "blur": [0, 7, 11, 111], "set": [0, 8, 11, 12, 14, 22, 23, 24, 25, 31], "up": [0, 8, 11, 12, 14, 22, 23, 24, 25, 31], "optim": [0, 12, 39], "algorithm": [0, 2, 11, 12, 13, 14, 16, 17, 18, 19, 20, 27, 28, 29, 30, 32, 41, 43], "solv": [0, 11, 12, 14], "invers": [0, 11, 12, 14, 18, 19], "problem": [0, 11, 12, 13, 14, 18, 19], "evalu": [0, 11, 12, 13, 14], "reconstruct": [0, 2, 8, 17, 22, 23, 31], "creat": [1, 3, 6, 16, 17, 20], "your": [1, 16, 18, 19], "own": 1, "dataload": 1, "an": [2, 18], "us": [2, 6, 18, 19, 46, 47, 49, 50, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 93, 96, 97, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152], "from": [2, 7, 16, 17, 20, 23], "internet": [2, 7, 16, 17, 20], "forward": [2, 3, 4, 5, 6, 7, 8, 12, 14, 16, 17, 20, 31], "nois": [2, 16, 17, 20, 40], "model": [2, 3, 4, 8, 11, 12, 13, 14, 16, 17, 19, 20, 31, 37], "measur": [2, 3, 16, 17, 20, 23, 28, 29], "run": [2, 16, 17, 20], "dip": 2, "plot": [2, 3, 12, 14, 16, 17, 20, 28, 29, 32, 44, 150], "singl": [3, 7], "photon": 3, "lidar": 3, "depth": 3, "rang": 3, "toi": [3, 5, 6], "signal": 3, "appli": 3, "match": 3, "filter": 3, "recov": 3, "save": [4, 31], "stack": 5, "concaten": 5, "verifi": [5, 6], "our": 6, "linear": [6, 40], "decompos": 6, "benefit": 6, "A": 7, "tour": 7, "sens": [7, 28], "denois": [7, 13, 17, 18, 19, 24, 25, 37, 41, 116], "inpaint": [7, 31, 120], "compress": [7, 28, 29], "comput": [7, 9, 14, 15, 21, 26, 33], "tomographi": [7, 14, 129], "mri": [7, 22, 122], "decolor": [7, 114], "pan": 7, "sharpen": 7, "pixel": 7, "camera": 7, "super": [7, 13, 32], "resolut": [7, 13, 27, 30, 32], "train": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 44, 138], "network": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 36], "test": [8, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 44, 137], "time": [9, 15, 21, 26, 33], "exampl": [10, 17, 46, 47, 49, 50, 53, 54, 55, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 93, 96, 97, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152], "basic": 10, "plug": 10, "plai": 10, "sampl": [10, 16, 17, 18, 20, 42], "self": [10, 22, 23, 24, 25, 36], "supervis": [10, 22, 23, 24, 25, 36], "learn": [10, 22, 23, 28, 29, 30, 36, 45], "unfold": [10, 28, 29, 31, 32, 43], "dpir": 11, "method": 11, "pnp": [11, 12, 13, 14, 20, 32, 41, 85], "condat": 12, "vu": 12, "primal": [12, 30, 39], "dual": [12, 30, 39], "fstep": [12, 104], "gstep": [12, 105], "modul": 12, "regular": [13, 36], "red": [13, 41, 88], "thi": 13, "involv": 13, "particular": 13, "definit": 13, "class": [13, 16], "vanilla": [14, 32], "ct": [14, 30], "paramet": [14, 22, 23, 24, 25, 27, 28, 29, 30, 32, 39], "build": 16, "iter": [16, 28, 29, 30, 39, 41], "sampler": [16, 17, 20], "precondit": 16, "standard": 16, "ula": [16, 20, 136], "diffus": [17, 19, 42], "mmse": 17, "mont": [17, 42], "carlo": [17, 42], "implement": [18, 19], "diffpir": [18, 133], "The": [18, 19], "step": [18, 19], "fidel": [18, 30, 39], "put": 18, "all": 18, "togeth": 18, "dp": [19, 132], "schedul": 19, "approxim": 19, "uncertainti": 20, "quantif": 20, "likelihood": 20, "mcmc": 20, "equivari": 22, "knee": 22, "incomplet": 23, "multipl": 23, "subsampl": 23, "neighbor2neighbor": [24, 55], "loss": [24, 25, 36], "noisi": [24, 25], "sure": 25, "equilibrium": [27, 43], "deq": 27, "low": [27, 30, 32], "soft": 28, "threshold": 28, "lista": 28, "proxim": [28, 29, 39], "gradient": [28, 29, 39], "weight": 29, "scan": 30, "pdnet": 30, "trainabl": 30, "term": 30, "chambol": [31, 39], "pock": [31, 39], "constrain": 31, "how": 34, "contribut": 34, "hd5dataset": 35, "transform": 36, "metric": 36, "classic": 37, "learnabl": 37, "math": 38, "notat": 38, "list": 38, "mathemat": 38, "symbol": 38, "admm": 39, "dougla": 39, "rachford": 39, "split": 39, "descent": 39, "half": 39, "quadrat": 39, "non": 40, "distribut": 40, "markov": 42, "chain": 42, "util": 44, "tensorlist": [44, 145], "other": 44, "deepinvers": 45, "pytorch": 45, "librari": 45, "featur": 45, "instal": 45, "get": 45, "start": 45, "find": 45, "help": 45, "lead": 45, "develop": 45, "hdf5dataset": 46, "generate_dataset": 47, "charbonnierloss": 48, "eiloss": 49, "fnejacobianspectralnorm": 50, "jacobianspectralnorm": 51, "lpnorm": 52, "mcloss": 53, "moiloss": 54, "splittingloss": 56, "suploss": 57, "suregaussianloss": 58, "surepgloss": 59, "surepoissonloss": 60, "tvloss": 61, "artifactremov": 62, "autoencod": 63, "bm3d": 64, "convdecod": 65, "drunet": 66, "deepimageprior": 67, "diffunet": 68, "dncnn": 69, "gsdrunet": 70, "medianfilt": 71, "scunet": 72, "swinir": 73, "tgv": 74, "tv": 75, "unet": 76, "waveletdict": 77, "waveletprior": 78, "baseoptim": 79, "datafidel": 80, "fixedpoint": 81, "indicatorl2": 82, "l1": 83, "l2": 84, "poissonlikelihood": 86, "scoreprior": 89, "tikhonov": 90, "optim_build": 91, "admmiter": 92, "cpiter": 93, "drsiter": 94, "hqsiter": 95, "optimiter": 96, "pgditer": 97, "fstepadmm": 98, "gstepadmm": 99, "fstepdr": 100, "gstepdr": 101, "fstephq": 102, "gstephq": 103, "fsteppgd": 106, "gsteppgd": 107, "fstepcp": 108, "gstepcp": 109, "blindblur": 110, "blurfft": 112, "compressedsens": 113, "decomposablephys": 115, "downsampl": 117, "gaussiannois": 118, "haze": 119, "linearphys": 121, "pansharpen": 123, "poissongaussiannois": 125, "poissonnois": 126, "singlephotonlidar": 127, "singlepixelcamera": 128, "uniformnois": 130, "ddrm": 131, "montecarlo": 134, "skrock": 135, "rotat": 139, "shift": 140, "basedeq": 141, "baseunfold": 142, "deq_build": 143, "unfolded_build": 144, "cal_psnr": 146, "get_freer_gpu": 147, "load_url_imag": 148, "ones_lik": 149, "plot_curv": 151, "plot_paramet": 152, "rand_lik": 153, "randn_lik": 154, "zeros_lik": 155}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Image deblurring with custom deep explicit prior.": [[0, "image-deblurring-with-custom-deep-explicit-prior"]], "Setup paths for data loading and results.": [[0, "setup-paths-for-data-loading-and-results"], [1, "setup-paths-for-data-loading-and-results"], [4, "setup-paths-for-data-loading-and-results"], [8, "setup-paths-for-data-loading-and-results"], [11, "setup-paths-for-data-loading-and-results"], [12, "setup-paths-for-data-loading-and-results"], [13, "setup-paths-for-data-loading-and-results"], [14, "setup-paths-for-data-loading-and-results"], [22, "setup-paths-for-data-loading-and-results"], [23, "setup-paths-for-data-loading-and-results"], [24, "setup-paths-for-data-loading-and-results"], [25, "setup-paths-for-data-loading-and-results"], [27, "setup-paths-for-data-loading-and-results"], [28, "setup-paths-for-data-loading-and-results"], [29, "setup-paths-for-data-loading-and-results"], [30, "setup-paths-for-data-loading-and-results"], [31, "setup-paths-for-data-loading-and-results"], [32, "setup-paths-for-data-loading-and-results"]], "Load base image datasets and degradation operators.": [[0, "load-base-image-datasets-and-degradation-operators"], [8, "load-base-image-datasets-and-degradation-operators"], [11, "load-base-image-datasets-and-degradation-operators"], [12, "load-base-image-datasets-and-degradation-operators"], [13, "load-base-image-datasets-and-degradation-operators"], [22, "load-base-image-datasets-and-degradation-operators"], [23, "load-base-image-datasets-and-degradation-operators"], [27, "load-base-image-datasets-and-degradation-operators"], [28, "load-base-image-datasets-and-degradation-operators"], [29, "load-base-image-datasets-and-degradation-operators"], [30, "load-base-image-datasets-and-degradation-operators"], [31, "load-base-image-datasets-and-degradation-operators"], [32, "load-base-image-datasets-and-degradation-operators"]], "Define physics operator": [[0, "define-physics-operator"]], "Generate a dataset of blurred images": [[0, "generate-a-dataset-of-blurred-images"]], "Set up the optimization algorithm to solve the inverse problem.": [[0, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"]], "Evaluate the reconstruction algorithm on the problem.": [[0, "evaluate-the-reconstruction-algorithm-on-the-problem"]], "Creating your own dataset": [[1, "creating-your-own-dataset"]], "Load base image datasets": [[1, "load-base-image-datasets"], [24, "load-base-image-datasets"], [25, "load-base-image-datasets"]], "Generate a dataset of degraded images and load it.": [[1, "generate-a-dataset-of-degraded-images-and-load-it"]], "Create a dataloader": [[1, "create-a-dataloader"]], "Reconstructing an image using the deep image prior.": [[2, "reconstructing-an-image-using-the-deep-image-prior"]], "Load image from the internet": [[2, "load-image-from-the-internet"], [7, "load-image-from-the-internet"], [16, "load-image-from-the-internet"], [20, "load-image-from-the-internet"]], "Define forward operator and noise model": [[2, "define-forward-operator-and-noise-model"], [16, "define-forward-operator-and-noise-model"], [17, "define-forward-operator-and-noise-model"], [20, "define-forward-operator-and-noise-model"]], "Generate the measurement": [[2, "generate-the-measurement"], [16, "generate-the-measurement"], [17, "generate-the-measurement"], [20, "generate-the-measurement"]], "Define the deep image prior": [[2, "define-the-deep-image-prior"]], "Run DIP algorithm and plot results": [[2, "run-dip-algorithm-and-plot-results"]], "Single photon lidar operator for depth ranging.": [[3, "single-photon-lidar-operator-for-depth-ranging"]], "Create forward model": [[3, "create-forward-model"]], "Generate toy signal and measurement": [[3, "generate-toy-signal-and-measurement"]], "Apply matched filtering to recover the signal and plot the results": [[3, "apply-matched-filtering-to-recover-the-signal-and-plot-the-results"]], "Saving and loading models": [[4, "saving-and-loading-models"]], "Define a forward operator": [[4, "define-a-forward-operator"]], "Define a model": [[4, "define-a-model"]], "Stacking and concatenating forward operators.": [[5, "stacking-and-concatenating-forward-operators"]], "Stacking forward operators.": [[5, "stacking-forward-operators"]], "Generate toy image": [[5, "generate-toy-image"], [6, "generate-toy-image"]], "Verifying the stacked operator": [[5, "verifying-the-stacked-operator"]], "Concatenating forward operators.": [[5, "concatenating-forward-operators"]], "Verifying the concatenated operator": [[5, "verifying-the-concatenated-operator"]], "Creating a forward operator.": [[6, "creating-a-forward-operator"]], "Creating a custom forward operator.": [[6, "creating-a-custom-forward-operator"]], "Verifying our linear operator": [[6, "verifying-our-linear-operator"]], "Creating a decomposable forward operator.": [[6, "creating-a-decomposable-forward-operator"]], "Benefits of using a decomposable forward operator.": [[6, "benefits-of-using-a-decomposable-forward-operator"]], "A tour of forward sensing operators": [[7, "a-tour-of-forward-sensing-operators"]], "Denoising": [[7, "denoising"], [116, "denoising"]], "Inpainting": [[7, "inpainting"], [120, "inpainting"]], "Compressed Sensing": [[7, "compressed-sensing"]], "Computed Tomography": [[7, "computed-tomography"]], "MRI": [[7, "mri"], [122, "mri"]], "Decolorize": [[7, "decolorize"], [114, "decolorize"]], "Pan-sharpening": [[7, "pan-sharpening"]], "Single-Pixel Camera": [[7, "single-pixel-camera"]], "Blur": [[7, "blur"], [111, "blur"]], "Super-Resolution": [[7, "super-resolution"]], "Training a reconstruction network.": [[8, "training-a-reconstruction-network"]], "Define forward operator and generate dataset": [[8, "define-forward-operator-and-generate-dataset"], [31, "define-forward-operator-and-generate-dataset"]], "Set up the reconstruction network": [[8, "set-up-the-reconstruction-network"], [22, "set-up-the-reconstruction-network"], [23, "set-up-the-reconstruction-network"], [31, "set-up-the-reconstruction-network"]], "Train the model": [[8, "train-the-model"], [31, "train-the-model"]], "Test the network": [[8, "test-the-network"], [22, "test-the-network"], [23, "test-the-network"], [24, "test-the-network"], [25, "test-the-network"], [27, "test-the-network"], [30, "test-the-network"], [31, "test-the-network"], [32, "test-the-network"]], "Computation times": [[9, "computation-times"], [15, "computation-times"], [21, "computation-times"], [26, "computation-times"], [33, "computation-times"]], "Examples": [[10, "examples"]], "Basics": [[10, "basics"]], "Plug-and-Play": [[10, "plug-and-play"]], "Sampling": [[10, "sampling"], [42, "sampling"]], "Self-Supervised Learning": [[10, "self-supervised-learning"], [36, "self-supervised-learning"]], "Unfolded": [[10, "unfolded"], [43, "id1"]], "DPIR method for PnP image deblurring.": [[11, "dpir-method-for-pnp-image-deblurring"]], "Generate a dataset of blurred images and load it.": [[11, "generate-a-dataset-of-blurred-images-and-load-it"]], "Set up the DPIR algorithm to solve the inverse problem.": [[11, "set-up-the-dpir-algorithm-to-solve-the-inverse-problem"]], "Evaluate the model on the problem.": [[11, "evaluate-the-model-on-the-problem"], [13, "evaluate-the-model-on-the-problem"]], "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)": [[12, "pnp-with-custom-optimization-algorithm-condat-vu-primal-dual"]], "Define a custom optimization algorithm": [[12, "define-a-custom-optimization-algorithm"]], "Define the custom fStep and gStep modules": [[12, "define-the-custom-fstep-and-gstep-modules"]], "Set the forward operator": [[12, "set-the-forward-operator"], [14, "set-the-forward-operator"]], "Set up the PnP algorithm to solve the inverse problem.": [[12, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"], [14, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"]], "Evaluate the model on the problem and plot the results.": [[12, "evaluate-the-model-on-the-problem-and-plot-the-results"], [14, "evaluate-the-model-on-the-problem-and-plot-the-results"]], "Regularization by Denoising (RED) for Super-Resolution.": [[13, "regularization-by-denoising-red-for-super-resolution"]], "Setup the PnP algorithm. This involves in particular the definition of a custom prior class.": [[13, "setup-the-pnp-algorithm-this-involves-in-particular-the-definition-of-a-custom-prior-class"]], "Vanilla PnP for computed tomography (CT).": [[14, "vanilla-pnp-for-computed-tomography-ct"]], "Load image and parameters": [[14, "load-image-and-parameters"]], "Building your custom sampling algorithm.": [[16, "building-your-custom-sampling-algorithm"]], "Define the sampling iteration": [[16, "define-the-sampling-iteration"]], "Build Sampler class": [[16, "build-sampler-class"]], "Define the prior": [[16, "define-the-prior"], [20, "define-the-prior"]], "Create the preconditioned and standard ULA samplers": [[16, "create-the-preconditioned-and-standard-ula-samplers"]], "Run sampling algorithms and plot results": [[16, "run-sampling-algorithms-and-plot-results"]], "Image reconstruction with a diffusion model": [[17, "image-reconstruction-with-a-diffusion-model"]], "Load example image from the internet": [[17, "load-example-image-from-the-internet"]], "Define the MMSE denoiser": [[17, "define-the-mmse-denoiser"]], "Create the Monte Carlo sampler": [[17, "create-the-monte-carlo-sampler"]], "Run the diffusion algorithm and plot results": [[17, "run-the-diffusion-algorithm-and-plot-results"]], "Create a Monte Carlo sampler": [[17, "create-a-monte-carlo-sampler"]], "Run sampling algorithm and plot results": [[17, "run-sampling-algorithm-and-plot-results"], [20, "run-sampling-algorithm-and-plot-results"]], "Implementing DiffPIR": [[18, "implementing-diffpir"]], "Generate an inverse problem": [[18, "generate-an-inverse-problem"]], "The DiffPIR algorithm": [[18, "the-diffpir-algorithm"]], "Denoising step": [[18, "denoising-step"], [19, "denoising-step"]], "Data fidelity step": [[18, "data-fidelity-step"]], "Sampling step": [[18, "sampling-step"]], "Putting it all together: the DiffPIR algorithm": [[18, "putting-it-all-together-the-diffpir-algorithm"]], "Using the DiffPIR algorithm in your inverse problem": [[18, "using-the-diffpir-algorithm-in-your-inverse-problem"]], "Implementing DPS": [[19, "implementing-dps"]], "Diffusion model loading": [[19, "diffusion-model-loading"]], "Define diffusion schedule": [[19, "define-diffusion-schedule"]], "The DPS algorithm": [[19, "the-dps-algorithm"]], "DPS approximation": [[19, "dps-approximation"]], "DPS Algorithm": [[19, "dps-algorithm"]], "Using DPS in your inverse problem": [[19, "using-dps-in-your-inverse-problem"]], "Uncertainty quantification with PnP-ULA.": [[20, "uncertainty-quantification-with-pnp-ula"]], "Define the likelihood": [[20, "define-the-likelihood"]], "Create the MCMC sampler": [[20, "create-the-mcmc-sampler"]], "Self-supervised learning with Equivariant Imaging for MRI.": [[22, "self-supervised-learning-with-equivariant-imaging-for-mri"]], "Generate a dataset of knee images and load it.": [[22, "generate-a-dataset-of-knee-images-and-load-it"]], "Set up the training parameters": [[22, "set-up-the-training-parameters"], [23, "set-up-the-training-parameters"], [24, "set-up-the-training-parameters"], [25, "set-up-the-training-parameters"]], "Train the network": [[22, "train-the-network"], [23, "train-the-network"], [24, "train-the-network"], [25, "train-the-network"], [27, "train-the-network"], [30, "train-the-network"], [32, "train-the-network"]], "Self-supervised learning from incomplete measurements of multiple operators.": [[23, "self-supervised-learning-from-incomplete-measurements-of-multiple-operators"]], "Generate a dataset of subsampled images and load it.": [[23, "generate-a-dataset-of-subsampled-images-and-load-it"]], "Self-supervised denoising with the Neighbor2Neighbor loss.": [[24, "self-supervised-denoising-with-the-neighbor2neighbor-loss"]], "Generate a dataset of noisy images": [[24, "generate-a-dataset-of-noisy-images"], [25, "generate-a-dataset-of-noisy-images"]], "Set up the denoiser network": [[24, "set-up-the-denoiser-network"], [25, "set-up-the-denoiser-network"]], "Self-supervised denoising with the SURE loss.": [[25, "self-supervised-denoising-with-the-sure-loss"]], "Deep Equilibrium (DEQ) algorithms for image deblurring": [[27, "deep-equilibrium-deq-algorithms-for-image-deblurring"]], "Generate a dataset of low resolution images and load it.": [[27, "generate-a-dataset-of-low-resolution-images-and-load-it"], [30, "generate-a-dataset-of-low-resolution-images-and-load-it"], [32, "generate-a-dataset-of-low-resolution-images-and-load-it"]], "Define the  DEQ algorithm.": [[27, "define-the-deq-algorithm"]], "Define the training parameters.": [[27, "define-the-training-parameters"], [28, "define-the-training-parameters"], [29, "define-the-training-parameters"], [30, "define-the-training-parameters"], [32, "define-the-training-parameters"]], "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing": [[28, "learned-iterative-soft-thresholding-algorithm-lista-for-compressed-sensing"]], "Generate a dataset of compressed measurements and load it.": [[28, "generate-a-dataset-of-compressed-measurements-and-load-it"], [29, "generate-a-dataset-of-compressed-measurements-and-load-it"]], "Define the unfolded Proximal Gradient algorithm.": [[28, "define-the-unfolded-proximal-gradient-algorithm"], [29, "define-the-unfolded-proximal-gradient-algorithm"]], "Train the network.": [[28, "train-the-network"], [29, "train-the-network"]], "Test the network.": [[28, "test-the-network"], [29, "test-the-network"]], "Plotting the learned parameters.": [[28, "plotting-the-learned-parameters"]], "Learned iterative custom prior": [[29, "learned-iterative-custom-prior"]], "Plotting the weights of the network.": [[29, "plotting-the-weights-of-the-network"]], "Learned Primal-Dual algorithm for CT scan.": [[30, "learned-primal-dual-algorithm-for-ct-scan"]], "Define a custom iterator for the PDNet learned primal-dual algorithm.": [[30, "define-a-custom-iterator-for-the-pdnet-learned-primal-dual-algorithm"]], "Define the trainable prior and data fidelity terms.": [[30, "define-the-trainable-prior-and-data-fidelity-terms"]], "Unfolded Chambolle-Pock for constrained image inpainting": [[31, "unfolded-chambolle-pock-for-constrained-image-inpainting"]], "Saving the model": [[31, "saving-the-model"]], "Loading the model": [[31, "loading-the-model"]], "Vanilla Unfolded algorithm for super-resolution": [[32, "vanilla-unfolded-algorithm-for-super-resolution"]], "Define the unfolded PnP algorithm.": [[32, "define-the-unfolded-pnp-algorithm"]], "Plotting the trained parameters.": [[32, "plotting-the-trained-parameters"]], "How to Contribute": [[34, "how-to-contribute"]], "Datasets": [[35, "datasets"]], "HD5Dataset": [[35, "hd5dataset"]], "Loss": [[36, "loss"]], "Supervised Learning": [[36, "supervised-learning"]], "Transforms": [[36, "transforms"]], "Network Regularization": [[36, "network-regularization"]], "Metrics": [[36, "metrics"]], "Models": [[37, "models"]], "Denoisers": [[37, "denoisers"]], "Classical Denoisers": [[37, "classical-denoisers"]], "Learnable Denoisers": [[37, "learnable-denoisers"]], "Math Notation": [[38, "math-notation"]], "List of mathematical symbols": [[38, "id1"]], "Optim": [[39, "optim"]], "Data Fidelity": [[39, "data-fidelity"]], "Priors": [[39, "priors"]], "Parameters": [[39, "parameters"]], "Iterators": [[39, "iterators"], [41, "iterators"]], "Generic optimizers": [[39, "generic-optimizers"]], "ADMM": [[39, "admm"]], "Douglas-Rachford Splitting": [[39, "douglas-rachford-splitting"]], "Gradient Descent": [[39, "gradient-descent"]], "Proximal Gradient Descent": [[39, "proximal-gradient-descent"]], "Half-Quadratic Splitting": [[39, "half-quadratic-splitting"]], "Chambolle-Pock Primal-Dual Splitting": [[39, "chambolle-pock-primal-dual-splitting"]], "Physics": [[40, "physics"], [124, "physics"]], "Linear operators": [[40, "linear-operators"]], "Non-linear operators": [[40, "non-linear-operators"]], "Noise distributions": [[40, "noise-distributions"]], "PnP and RED algorithms": [[41, "pnp-and-red-algorithms"]], "Priors and denoisers": [[41, "priors-and-denoisers"]], "Markov Chain Monte Carlo": [[42, "markov-chain-monte-carlo"]], "Diffusion": [[42, "diffusion"]], "Unfolded algorithms": [[43, "unfolded-algorithms"]], "Deep Equilibrium": [[43, "deep-equilibrium"]], "Utils": [[44, "utils"]], "Training and Testing": [[44, "training-and-testing"]], "Plotting": [[44, "plotting"]], "TensorList": [[44, "tensorlist"], [145, "tensorlist"]], "Other": [[44, "other"]], "DeepInverse: a Pytorch library for imaging with deep learning": [[45, "deepinverse-a-pytorch-library-for-imaging-with-deep-learning"]], "Featuring": [[45, "featuring"]], "Installation": [[45, "installation"]], "Getting Started": [[45, "getting-started"]], "Finding Help": [[45, "finding-help"]], "Lead Developers": [[45, "lead-developers"]], "HDF5Dataset": [[46, "hdf5dataset"]], "Examples using HDF5Dataset:": [[46, "examples-using-hdf5dataset"]], "generate_dataset": [[47, "generate-dataset"]], "Examples using generate_dataset:": [[47, "examples-using-generate-dataset"]], "CharbonnierLoss": [[48, "charbonnierloss"]], "EILoss": [[49, "eiloss"]], "Examples using EILoss:": [[49, "examples-using-eiloss"]], "FNEJacobianSpectralNorm": [[50, "fnejacobianspectralnorm"]], "Examples using FNEJacobianSpectralNorm:": [[50, "examples-using-fnejacobianspectralnorm"]], "JacobianSpectralNorm": [[51, "jacobianspectralnorm"]], "LpNorm": [[52, "lpnorm"]], "MCLoss": [[53, "mcloss"]], "Examples using MCLoss:": [[53, "examples-using-mcloss"]], "MOILoss": [[54, "moiloss"]], "Examples using MOILoss:": [[54, "examples-using-moiloss"]], "Neighbor2Neighbor": [[55, "neighbor2neighbor"]], "Examples using Neighbor2Neighbor:": [[55, "examples-using-neighbor2neighbor"]], "SplittingLoss": [[56, "splittingloss"]], "SupLoss": [[57, "suploss"]], "Examples using SupLoss:": [[57, "examples-using-suploss"]], "SureGaussianLoss": [[58, "suregaussianloss"]], "Examples using SureGaussianLoss:": [[58, "examples-using-suregaussianloss"]], "SurePGLoss": [[59, "surepgloss"]], "Examples using SurePGLoss:": [[59, "examples-using-surepgloss"]], "SurePoissonLoss": [[60, "surepoissonloss"]], "Examples using SurePoissonLoss:": [[60, "examples-using-surepoissonloss"]], "TVLoss": [[61, "tvloss"]], "ArtifactRemoval": [[62, "artifactremoval"]], "Examples using ArtifactRemoval:": [[62, "examples-using-artifactremoval"]], "AutoEncoder": [[63, "autoencoder"]], "BM3D": [[64, "bm3d"]], "ConvDecoder": [[65, "convdecoder"]], "Examples using ConvDecoder:": [[65, "examples-using-convdecoder"]], "DRUNet": [[66, "drunet"]], "Examples using DRUNet:": [[66, "examples-using-drunet"]], "DeepImagePrior": [[67, "deepimageprior"]], "Examples using DeepImagePrior:": [[67, "examples-using-deepimageprior"]], "DiffUNet": [[68, "diffunet"]], "Examples using DiffUNet:": [[68, "examples-using-diffunet"]], "DnCNN": [[69, "dncnn"]], "Examples using DnCNN:": [[69, "examples-using-dncnn"]], "GSDRUNet": [[70, "gsdrunet"]], "Examples using GSDRUNet:": [[70, "examples-using-gsdrunet"]], "MedianFilter": [[71, "medianfilter"]], "Examples using MedianFilter:": [[71, "examples-using-medianfilter"]], "SCUNet": [[72, "scunet"]], "SwinIR": [[73, "swinir"]], "TGV": [[74, "tgv"]], "TV": [[75, "tv"]], "UNet": [[76, "unet"]], "Examples using UNet:": [[76, "examples-using-unet"]], "WaveletDict": [[77, "waveletdict"]], "Examples using WaveletDict:": [[77, "examples-using-waveletdict"]], "WaveletPrior": [[78, "waveletprior"]], "Examples using WaveletPrior:": [[78, "examples-using-waveletprior"]], "BaseOptim": [[79, "baseoptim"]], "Examples using BaseOptim:": [[79, "examples-using-baseoptim"]], "DataFidelity": [[80, "datafidelity"]], "Examples using DataFidelity:": [[80, "examples-using-datafidelity"]], "FixedPoint": [[81, "fixedpoint"]], "IndicatorL2": [[82, "indicatorl2"]], "Examples using IndicatorL2:": [[82, "examples-using-indicatorl2"]], "L1": [[83, "l1"]], "L2": [[84, "l2"]], "Examples using L2:": [[84, "examples-using-l2"]], "PnP": [[85, "pnp"]], "Examples using PnP:": [[85, "examples-using-pnp"]], "PoissonLikelihood": [[86, "poissonlikelihood"]], "Examples using PoissonLikelihood:": [[86, "examples-using-poissonlikelihood"]], "Prior": [[87, "prior"]], "Examples using Prior:": [[87, "examples-using-prior"]], "RED": [[88, "red"]], "Examples using RED:": [[88, "examples-using-red"]], "ScorePrior": [[89, "scoreprior"]], "Examples using ScorePrior:": [[89, "examples-using-scoreprior"]], "Tikhonov": [[90, "tikhonov"]], "optim_builder": [[91, "optim-builder"]], "Examples using optim_builder:": [[91, "examples-using-optim-builder"]], "ADMMIteration": [[92, "admmiteration"]], "CPIteration": [[93, "cpiteration"]], "Examples using CPIteration:": [[93, "examples-using-cpiteration"]], "DRSIteration": [[94, "drsiteration"]], "HQSIteration": [[95, "hqsiteration"]], "OptimIterator": [[96, "optimiterator"]], "Examples using OptimIterator:": [[96, "examples-using-optimiterator"]], "PGDIteration": [[97, "pgditeration"]], "Examples using PGDIteration:": [[97, "examples-using-pgditeration"]], "fStepADMM": [[98, "fstepadmm"]], "gStepADMM": [[99, "gstepadmm"]], "fStepDRS": [[100, "fstepdrs"]], "gStepDRS": [[101, "gstepdrs"]], "fStepHQS": [[102, "fstephqs"]], "gStepHQS": [[103, "gstephqs"]], "fStep": [[104, "fstep"]], "gStep": [[105, "gstep"]], "fStepPGD": [[106, "fsteppgd"]], "gStepPGD": [[107, "gsteppgd"]], "fStepCP": [[108, "fstepcp"]], "gStepCP": [[109, "gstepcp"]], "BlindBlur": [[110, "blindblur"]], "Examples using Blur:": [[111, "examples-using-blur"]], "BlurFFT": [[112, "blurfft"]], "Examples using BlurFFT:": [[112, "examples-using-blurfft"]], "CompressedSensing": [[113, "compressedsensing"]], "Examples using CompressedSensing:": [[113, "examples-using-compressedsensing"]], "Examples using Decolorize:": [[114, "examples-using-decolorize"]], "DecomposablePhysics": [[115, "decomposablephysics"]], "Examples using DecomposablePhysics:": [[115, "examples-using-decomposablephysics"]], "Examples using Denoising:": [[116, "examples-using-denoising"]], "Downsampling": [[117, "downsampling"]], "Examples using Downsampling:": [[117, "examples-using-downsampling"]], "GaussianNoise": [[118, "gaussiannoise"]], "Examples using GaussianNoise:": [[118, "examples-using-gaussiannoise"]], "Haze": [[119, "haze"]], "Examples using Inpainting:": [[120, "examples-using-inpainting"]], "LinearPhysics": [[121, "linearphysics"]], "Examples using LinearPhysics:": [[121, "examples-using-linearphysics"]], "Examples using MRI:": [[122, "examples-using-mri"]], "Pansharpen": [[123, "pansharpen"]], "Examples using Pansharpen:": [[123, "examples-using-pansharpen"]], "Examples using Physics:": [[124, "examples-using-physics"]], "PoissonGaussianNoise": [[125, "poissongaussiannoise"]], "Examples using PoissonGaussianNoise:": [[125, "examples-using-poissongaussiannoise"]], "PoissonNoise": [[126, "poissonnoise"]], "Examples using PoissonNoise:": [[126, "examples-using-poissonnoise"]], "SinglePhotonLidar": [[127, "singlephotonlidar"]], "Examples using SinglePhotonLidar:": [[127, "examples-using-singlephotonlidar"]], "SinglePixelCamera": [[128, "singlepixelcamera"]], "Examples using SinglePixelCamera:": [[128, "examples-using-singlepixelcamera"]], "Tomography": [[129, "tomography"]], "Examples using Tomography:": [[129, "examples-using-tomography"]], "UniformNoise": [[130, "uniformnoise"]], "DDRM": [[131, "ddrm"]], "Examples using DDRM:": [[131, "examples-using-ddrm"]], "DPS": [[132, "dps"]], "Examples using DPS:": [[132, "examples-using-dps"]], "DiffPIR": [[133, "diffpir"]], "Examples using DiffPIR:": [[133, "examples-using-diffpir"]], "MonteCarlo": [[134, "montecarlo"]], "Examples using MonteCarlo:": [[134, "examples-using-montecarlo"]], "SKRock": [[135, "skrock"]], "ULA": [[136, "ula"]], "Examples using ULA:": [[136, "examples-using-ula"]], "test": [[137, "test"]], "Examples using test:": [[137, "examples-using-test"]], "train": [[138, "train"]], "Examples using train:": [[138, "examples-using-train"]], "Rotate": [[139, "rotate"]], "Examples using Rotate:": [[139, "examples-using-rotate"]], "Shift": [[140, "shift"]], "BaseDEQ": [[141, "basedeq"]], "Examples using BaseDEQ:": [[141, "examples-using-basedeq"]], "BaseUnfold": [[142, "baseunfold"]], "Examples using BaseUnfold:": [[142, "examples-using-baseunfold"]], "DEQ_builder": [[143, "deq-builder"]], "Examples using DEQ_builder:": [[143, "examples-using-deq-builder"]], "unfolded_builder": [[144, "unfolded-builder"]], "Examples using unfolded_builder:": [[144, "examples-using-unfolded-builder"]], "Examples using TensorList:": [[145, "examples-using-tensorlist"]], "cal_psnr": [[146, "cal-psnr"]], "Examples using cal_psnr:": [[146, "examples-using-cal-psnr"]], "get_freer_gpu": [[147, "get-freer-gpu"]], "Examples using get_freer_gpu:": [[147, "examples-using-get-freer-gpu"]], "load_url_image": [[148, "load-url-image"]], "Examples using load_url_image:": [[148, "examples-using-load-url-image"]], "ones_like": [[149, "ones-like"]], "plot": [[150, "plot"]], "Examples using plot:": [[150, "examples-using-plot"]], "plot_curves": [[151, "plot-curves"]], "Examples using plot_curves:": [[151, "examples-using-plot-curves"]], "plot_parameters": [[152, "plot-parameters"]], "Examples using plot_parameters:": [[152, "examples-using-plot-parameters"]], "rand_like": [[153, "rand-like"]], "randn_like": [[154, "randn-like"]], "zeros_like": [[155, "zeros-like"]]}, "indexentries": {"hdf5dataset (class in deepinv.datasets)": [[46, "deepinv.datasets.HDF5Dataset"]], "generate_dataset (class in deepinv.datasets)": [[47, "deepinv.datasets.generate_dataset"]], "charbonnierloss (class in deepinv.loss)": [[48, "deepinv.loss.CharbonnierLoss"]], "forward() (deepinv.loss.charbonnierloss method)": [[48, "deepinv.loss.CharbonnierLoss.forward"]], "eiloss (class in deepinv.loss)": [[49, "deepinv.loss.EILoss"]], "forward() (deepinv.loss.eiloss method)": [[49, "deepinv.loss.EILoss.forward"]], "fnejacobianspectralnorm (class in deepinv.loss)": [[50, "deepinv.loss.FNEJacobianSpectralNorm"]], "forward() (deepinv.loss.fnejacobianspectralnorm method)": [[50, "deepinv.loss.FNEJacobianSpectralNorm.forward"]], "jacobianspectralnorm (class in deepinv.loss)": [[51, "deepinv.loss.JacobianSpectralNorm"]], "forward() (deepinv.loss.jacobianspectralnorm method)": [[51, "deepinv.loss.JacobianSpectralNorm.forward"]], "lpnorm (class in deepinv.loss)": [[52, "deepinv.loss.LpNorm"]], "forward() (deepinv.loss.lpnorm method)": [[52, "deepinv.loss.LpNorm.forward"]], "mcloss (class in deepinv.loss)": [[53, "deepinv.loss.MCLoss"]], "forward() (deepinv.loss.mcloss method)": [[53, "deepinv.loss.MCLoss.forward"]], "moiloss (class in deepinv.loss)": [[54, "deepinv.loss.MOILoss"]], "forward() (deepinv.loss.moiloss method)": [[54, "deepinv.loss.MOILoss.forward"]], "neighbor2neighbor (class in deepinv.loss)": [[55, "deepinv.loss.Neighbor2Neighbor"]], "forward() (deepinv.loss.neighbor2neighbor method)": [[55, "deepinv.loss.Neighbor2Neighbor.forward"]], "splittingloss (class in deepinv.loss)": [[56, "deepinv.loss.SplittingLoss"]], "forward() (deepinv.loss.splittingloss method)": [[56, "deepinv.loss.SplittingLoss.forward"]], "suploss (class in deepinv.loss)": [[57, "deepinv.loss.SupLoss"]], "forward() (deepinv.loss.suploss method)": [[57, "deepinv.loss.SupLoss.forward"]], "suregaussianloss (class in deepinv.loss)": [[58, "deepinv.loss.SureGaussianLoss"]], "forward() (deepinv.loss.suregaussianloss method)": [[58, "deepinv.loss.SureGaussianLoss.forward"]], "surepgloss (class in deepinv.loss)": [[59, "deepinv.loss.SurePGLoss"]], "forward() (deepinv.loss.surepgloss method)": [[59, "deepinv.loss.SurePGLoss.forward"]], "surepoissonloss (class in deepinv.loss)": [[60, "deepinv.loss.SurePoissonLoss"]], "forward() (deepinv.loss.surepoissonloss method)": [[60, "deepinv.loss.SurePoissonLoss.forward"]], "tvloss (class in deepinv.loss)": [[61, "deepinv.loss.TVLoss"]], "forward() (deepinv.loss.tvloss method)": [[61, "deepinv.loss.TVLoss.forward"]], "artifactremoval (class in deepinv.models)": [[62, "deepinv.models.ArtifactRemoval"]], "forward() (deepinv.models.artifactremoval method)": [[62, "deepinv.models.ArtifactRemoval.forward"]], "autoencoder (class in deepinv.models)": [[63, "deepinv.models.AutoEncoder"]], "forward() (deepinv.models.autoencoder method)": [[63, "deepinv.models.AutoEncoder.forward"]], "bm3d (class in deepinv.models)": [[64, "deepinv.models.BM3D"]], "forward() (deepinv.models.bm3d method)": [[64, "deepinv.models.BM3D.forward"]], "convdecoder (class in deepinv.models)": [[65, "deepinv.models.ConvDecoder"]], "forward() (deepinv.models.convdecoder method)": [[65, "deepinv.models.ConvDecoder.forward"]], "drunet (class in deepinv.models)": [[66, "deepinv.models.DRUNet"]], "forward() (deepinv.models.drunet method)": [[66, "deepinv.models.DRUNet.forward"]], "deepimageprior (class in deepinv.models)": [[67, "deepinv.models.DeepImagePrior"]], "forward() (deepinv.models.deepimageprior method)": [[67, "deepinv.models.DeepImagePrior.forward"]], "diffunet (class in deepinv.models)": [[68, "deepinv.models.DiffUNet"]], "convert_to_fp16() (deepinv.models.diffunet method)": [[68, "deepinv.models.DiffUNet.convert_to_fp16"]], "convert_to_fp32() (deepinv.models.diffunet method)": [[68, "deepinv.models.DiffUNet.convert_to_fp32"]], "find_nearest() (deepinv.models.diffunet method)": [[68, "deepinv.models.DiffUNet.find_nearest"]], "forward() (deepinv.models.diffunet method)": [[68, "deepinv.models.DiffUNet.forward"]], "forward_denoise() (deepinv.models.diffunet method)": [[68, "deepinv.models.DiffUNet.forward_denoise"]], "forward_diffusion() (deepinv.models.diffunet method)": [[68, "deepinv.models.DiffUNet.forward_diffusion"]], "get_alpha_prod() (deepinv.models.diffunet method)": [[68, "deepinv.models.DiffUNet.get_alpha_prod"]], "dncnn (class in deepinv.models)": [[69, "deepinv.models.DnCNN"]], "forward() (deepinv.models.dncnn method)": [[69, "deepinv.models.DnCNN.forward"]], "gsdrunet (class in deepinv.models)": [[70, "deepinv.models.GSDRUNet"]], "medianfilter (class in deepinv.models)": [[71, "deepinv.models.MedianFilter"]], "forward() (deepinv.models.medianfilter method)": [[71, "deepinv.models.MedianFilter.forward"]], "scunet (class in deepinv.models)": [[72, "deepinv.models.SCUNet"]], "forward() (deepinv.models.scunet method)": [[72, "deepinv.models.SCUNet.forward"]], "swinir (class in deepinv.models)": [[73, "deepinv.models.SwinIR"]], "forward() (deepinv.models.swinir method)": [[73, "deepinv.models.SwinIR.forward"]], "tgv (class in deepinv.models)": [[74, "deepinv.models.TGV"]], "forward() (deepinv.models.tgv method)": [[74, "deepinv.models.TGV.forward"]], "tv (class in deepinv.models)": [[75, "deepinv.models.TV"]], "forward() (deepinv.models.tv method)": [[75, "deepinv.models.TV.forward"]], "unet (class in deepinv.models)": [[76, "deepinv.models.UNet"]], "forward() (deepinv.models.unet method)": [[76, "deepinv.models.UNet.forward"]], "waveletdict (class in deepinv.models)": [[77, "deepinv.models.WaveletDict"]], "forward() (deepinv.models.waveletdict method)": [[77, "deepinv.models.WaveletDict.forward"]], "waveletprior (class in deepinv.models)": [[78, "deepinv.models.WaveletPrior"]], "forward() (deepinv.models.waveletprior method)": [[78, "deepinv.models.WaveletPrior.forward"]], "hard_threshold_topk() (deepinv.models.waveletprior method)": [[78, "deepinv.models.WaveletPrior.hard_threshold_topk"]], "prox_l0() (deepinv.models.waveletprior method)": [[78, "deepinv.models.WaveletPrior.prox_l0"]], "prox_l1() (deepinv.models.waveletprior method)": [[78, "deepinv.models.WaveletPrior.prox_l1"]], "baseoptim (class in deepinv.optim)": [[79, "deepinv.optim.BaseOptim"]], "check_conv_fn() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.check_conv_fn"]], "check_iteration_fn() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.check_iteration_fn"]], "forward() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.forward"]], "get_auxiliary_variable() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.get_auxiliary_variable"]], "get_primal_variable() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.get_primal_variable"]], "init_iterate_fn() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.init_iterate_fn"]], "init_metrics_fn() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.init_metrics_fn"]], "update_data_fidelity_fn() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.update_data_fidelity_fn"]], "update_metrics_fn() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.update_metrics_fn"]], "update_params_fn() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.update_params_fn"]], "update_prior_fn() (deepinv.optim.baseoptim method)": [[79, "deepinv.optim.BaseOptim.update_prior_fn"]], "datafidelity (class in deepinv.optim)": [[80, "deepinv.optim.DataFidelity"]], "d() (deepinv.optim.datafidelity method)": [[80, "deepinv.optim.DataFidelity.d"]], "forward() (deepinv.optim.datafidelity method)": [[80, "deepinv.optim.DataFidelity.forward"]], "grad() (deepinv.optim.datafidelity method)": [[80, "deepinv.optim.DataFidelity.grad"]], "grad_d() (deepinv.optim.datafidelity method)": [[80, "deepinv.optim.DataFidelity.grad_d"]], "prox() (deepinv.optim.datafidelity method)": [[80, "deepinv.optim.DataFidelity.prox"]], "prox_conjugate() (deepinv.optim.datafidelity method)": [[80, "deepinv.optim.DataFidelity.prox_conjugate"]], "prox_d() (deepinv.optim.datafidelity method)": [[80, "deepinv.optim.DataFidelity.prox_d"]], "prox_d_conjugate() (deepinv.optim.datafidelity method)": [[80, "deepinv.optim.DataFidelity.prox_d_conjugate"]], "fixedpoint (class in deepinv.optim)": [[81, "deepinv.optim.FixedPoint"]], "anderson_acceleration_step() (deepinv.optim.fixedpoint method)": [[81, "deepinv.optim.FixedPoint.anderson_acceleration_step"]], "forward() (deepinv.optim.fixedpoint method)": [[81, "deepinv.optim.FixedPoint.forward"]], "init_anderson_acceleration() (deepinv.optim.fixedpoint method)": [[81, "deepinv.optim.FixedPoint.init_anderson_acceleration"]], "indicatorl2 (class in deepinv.optim)": [[82, "deepinv.optim.IndicatorL2"]], "d() (deepinv.optim.indicatorl2 method)": [[82, "deepinv.optim.IndicatorL2.d"]], "prox() (deepinv.optim.indicatorl2 method)": [[82, "deepinv.optim.IndicatorL2.prox"]], "prox_d() (deepinv.optim.indicatorl2 method)": [[82, "deepinv.optim.IndicatorL2.prox_d"]], "l1 (class in deepinv.optim)": [[83, "deepinv.optim.L1"]], "d() (deepinv.optim.l1 method)": [[83, "deepinv.optim.L1.d"]], "grad_d() (deepinv.optim.l1 method)": [[83, "deepinv.optim.L1.grad_d"]], "prox() (deepinv.optim.l1 method)": [[83, "deepinv.optim.L1.prox"]], "prox_d() (deepinv.optim.l1 method)": [[83, "deepinv.optim.L1.prox_d"]], "l2 (class in deepinv.optim)": [[84, "deepinv.optim.L2"]], "d() (deepinv.optim.l2 method)": [[84, "deepinv.optim.L2.d"]], "grad_d() (deepinv.optim.l2 method)": [[84, "deepinv.optim.L2.grad_d"]], "prox() (deepinv.optim.l2 method)": [[84, "deepinv.optim.L2.prox"]], "prox_d() (deepinv.optim.l2 method)": [[84, "deepinv.optim.L2.prox_d"]], "pnp (class in deepinv.optim)": [[85, "deepinv.optim.PnP"]], "prox() (deepinv.optim.pnp method)": [[85, "deepinv.optim.PnP.prox"]], "poissonlikelihood (class in deepinv.optim)": [[86, "deepinv.optim.PoissonLikelihood"]], "d() (deepinv.optim.poissonlikelihood method)": [[86, "deepinv.optim.PoissonLikelihood.d"]], "grad_d() (deepinv.optim.poissonlikelihood method)": [[86, "deepinv.optim.PoissonLikelihood.grad_d"]], "prox_d() (deepinv.optim.poissonlikelihood method)": [[86, "deepinv.optim.PoissonLikelihood.prox_d"]], "prior (class in deepinv.optim)": [[87, "deepinv.optim.Prior"]], "forward() (deepinv.optim.prior method)": [[87, "deepinv.optim.Prior.forward"]], "g() (deepinv.optim.prior method)": [[87, "deepinv.optim.Prior.g"]], "grad() (deepinv.optim.prior method)": [[87, "deepinv.optim.Prior.grad"]], "prox() (deepinv.optim.prior method)": [[87, "deepinv.optim.Prior.prox"]], "prox_conjugate() (deepinv.optim.prior method)": [[87, "deepinv.optim.Prior.prox_conjugate"]], "red (class in deepinv.optim)": [[88, "deepinv.optim.RED"]], "grad() (deepinv.optim.red method)": [[88, "deepinv.optim.RED.grad"]], "scoreprior (class in deepinv.optim)": [[89, "deepinv.optim.ScorePrior"]], "forward() (deepinv.optim.scoreprior method)": [[89, "deepinv.optim.ScorePrior.forward"]], "tikhonov (class in deepinv.optim)": [[90, "deepinv.optim.Tikhonov"]], "g() (deepinv.optim.tikhonov method)": [[90, "deepinv.optim.Tikhonov.g"]], "grad() (deepinv.optim.tikhonov method)": [[90, "deepinv.optim.Tikhonov.grad"]], "prox() (deepinv.optim.tikhonov method)": [[90, "deepinv.optim.Tikhonov.prox"]], "optim_builder() (in module deepinv.optim)": [[91, "deepinv.optim.optim_builder"]], "admmiteration (class in deepinv.optim.optim_iterators)": [[92, "deepinv.optim.optim_iterators.ADMMIteration"]], "forward() (deepinv.optim.optim_iterators.admmiteration method)": [[92, "deepinv.optim.optim_iterators.ADMMIteration.forward"]], "cpiteration (class in deepinv.optim.optim_iterators)": [[93, "deepinv.optim.optim_iterators.CPIteration"]], "forward() (deepinv.optim.optim_iterators.cpiteration method)": [[93, "deepinv.optim.optim_iterators.CPIteration.forward"]], "drsiteration (class in deepinv.optim.optim_iterators)": [[94, "deepinv.optim.optim_iterators.DRSIteration"]], "forward() (deepinv.optim.optim_iterators.drsiteration method)": [[94, "deepinv.optim.optim_iterators.DRSIteration.forward"]], "hqsiteration (class in deepinv.optim.optim_iterators)": [[95, "deepinv.optim.optim_iterators.HQSIteration"]], "optimiterator (class in deepinv.optim.optim_iterators)": [[96, "deepinv.optim.optim_iterators.OptimIterator"]], "forward() (deepinv.optim.optim_iterators.optimiterator method)": [[96, "deepinv.optim.optim_iterators.OptimIterator.forward"]], "relaxation_step() (deepinv.optim.optim_iterators.optimiterator method)": [[96, "deepinv.optim.optim_iterators.OptimIterator.relaxation_step"]], "pgditeration (class in deepinv.optim.optim_iterators)": [[97, "deepinv.optim.optim_iterators.PGDIteration"]], "fstepadmm (class in deepinv.optim.optim_iterators.admm)": [[98, "deepinv.optim.optim_iterators.admm.fStepADMM"]], "forward() (deepinv.optim.optim_iterators.admm.fstepadmm method)": [[98, "deepinv.optim.optim_iterators.admm.fStepADMM.forward"]], "forward() (deepinv.optim.optim_iterators.admm.gstepadmm method)": [[99, "deepinv.optim.optim_iterators.admm.gStepADMM.forward"]], "gstepadmm (class in deepinv.optim.optim_iterators.admm)": [[99, "deepinv.optim.optim_iterators.admm.gStepADMM"]], "fstepdrs (class in deepinv.optim.optim_iterators.drs)": [[100, "deepinv.optim.optim_iterators.drs.fStepDRS"]], "forward() (deepinv.optim.optim_iterators.drs.fstepdrs method)": [[100, "deepinv.optim.optim_iterators.drs.fStepDRS.forward"]], "forward() (deepinv.optim.optim_iterators.drs.gstepdrs method)": [[101, "deepinv.optim.optim_iterators.drs.gStepDRS.forward"]], "gstepdrs (class in deepinv.optim.optim_iterators.drs)": [[101, "deepinv.optim.optim_iterators.drs.gStepDRS"]], "fstephqs (class in deepinv.optim.optim_iterators.hqs)": [[102, "deepinv.optim.optim_iterators.hqs.fStepHQS"]], "forward() (deepinv.optim.optim_iterators.hqs.fstephqs method)": [[102, "deepinv.optim.optim_iterators.hqs.fStepHQS.forward"]], "forward() (deepinv.optim.optim_iterators.hqs.gstephqs method)": [[103, "deepinv.optim.optim_iterators.hqs.gStepHQS.forward"]], "gstephqs (class in deepinv.optim.optim_iterators.hqs)": [[103, "deepinv.optim.optim_iterators.hqs.gStepHQS"]], "fstep (class in deepinv.optim.optim_iterators.optim_iterator)": [[104, "deepinv.optim.optim_iterators.optim_iterator.fStep"]], "gstep (class in deepinv.optim.optim_iterators.optim_iterator)": [[105, "deepinv.optim.optim_iterators.optim_iterator.gStep"]], "fsteppgd (class in deepinv.optim.optim_iterators.pgd)": [[106, "deepinv.optim.optim_iterators.pgd.fStepPGD"]], "forward() (deepinv.optim.optim_iterators.pgd.fsteppgd method)": [[106, "deepinv.optim.optim_iterators.pgd.fStepPGD.forward"]], "forward() (deepinv.optim.optim_iterators.pgd.gsteppgd method)": [[107, "deepinv.optim.optim_iterators.pgd.gStepPGD.forward"]], "gsteppgd (class in deepinv.optim.optim_iterators.pgd)": [[107, "deepinv.optim.optim_iterators.pgd.gStepPGD"]], "fstepcp (class in deepinv.optim.optim_iterators.primal_dual_cp)": [[108, "deepinv.optim.optim_iterators.primal_dual_CP.fStepCP"]], "forward() (deepinv.optim.optim_iterators.primal_dual_cp.fstepcp method)": [[108, "deepinv.optim.optim_iterators.primal_dual_CP.fStepCP.forward"]], "forward() (deepinv.optim.optim_iterators.primal_dual_cp.gstepcp method)": [[109, "deepinv.optim.optim_iterators.primal_dual_CP.gStepCP.forward"]], "gstepcp (class in deepinv.optim.optim_iterators.primal_dual_cp)": [[109, "deepinv.optim.optim_iterators.primal_dual_CP.gStepCP"]], "a() (deepinv.physics.blindblur method)": [[110, "deepinv.physics.BlindBlur.A"]], "a_dagger() (deepinv.physics.blindblur method)": [[110, "deepinv.physics.BlindBlur.A_dagger"]], "blindblur (class in deepinv.physics)": [[110, "deepinv.physics.BlindBlur"]], "a() (deepinv.physics.blur method)": [[111, "deepinv.physics.Blur.A"]], "a_adjoint() (deepinv.physics.blur method)": [[111, "deepinv.physics.Blur.A_adjoint"]], "blur (class in deepinv.physics)": [[111, "deepinv.physics.Blur"]], "blurfft (class in deepinv.physics)": [[112, "deepinv.physics.BlurFFT"]], "a() (deepinv.physics.compressedsensing method)": [[113, "deepinv.physics.CompressedSensing.A"]], "a_adjoint() (deepinv.physics.compressedsensing method)": [[113, "deepinv.physics.CompressedSensing.A_adjoint"]], "a_dagger() (deepinv.physics.compressedsensing method)": [[113, "deepinv.physics.CompressedSensing.A_dagger"]], "compressedsensing (class in deepinv.physics)": [[113, "deepinv.physics.CompressedSensing"]], "decolorize (class in deepinv.physics)": [[114, "deepinv.physics.Decolorize"]], "a() (deepinv.physics.decomposablephysics method)": [[115, "deepinv.physics.DecomposablePhysics.A"]], "a_adjoint() (deepinv.physics.decomposablephysics method)": [[115, "deepinv.physics.DecomposablePhysics.A_adjoint"]], "a_dagger() (deepinv.physics.decomposablephysics method)": [[115, "deepinv.physics.DecomposablePhysics.A_dagger"]], "decomposablephysics (class in deepinv.physics)": [[115, "deepinv.physics.DecomposablePhysics"]], "prox_l2() (deepinv.physics.decomposablephysics method)": [[115, "deepinv.physics.DecomposablePhysics.prox_l2"]], "denoising (class in deepinv.physics)": [[116, "deepinv.physics.Denoising"]], "a() (deepinv.physics.downsampling method)": [[117, "deepinv.physics.Downsampling.A"]], "a_adjoint() (deepinv.physics.downsampling method)": [[117, "deepinv.physics.Downsampling.A_adjoint"]], "downsampling (class in deepinv.physics)": [[117, "deepinv.physics.Downsampling"]], "prox_l2() (deepinv.physics.downsampling method)": [[117, "deepinv.physics.Downsampling.prox_l2"]], "gaussiannoise (class in deepinv.physics)": [[118, "deepinv.physics.GaussianNoise"]], "forward() (deepinv.physics.gaussiannoise method)": [[118, "deepinv.physics.GaussianNoise.forward"]], "a() (deepinv.physics.haze method)": [[119, "deepinv.physics.Haze.A"]], "a_dagger() (deepinv.physics.haze method)": [[119, "deepinv.physics.Haze.A_dagger"]], "haze (class in deepinv.physics)": [[119, "deepinv.physics.Haze"]], "inpainting (class in deepinv.physics)": [[120, "deepinv.physics.Inpainting"]], "a_adjoint() (deepinv.physics.linearphysics method)": [[121, "deepinv.physics.LinearPhysics.A_adjoint"]], "a_dagger() (deepinv.physics.linearphysics method)": [[121, "deepinv.physics.LinearPhysics.A_dagger"]], "linearphysics (class in deepinv.physics)": [[121, "deepinv.physics.LinearPhysics"]], "__add__() (deepinv.physics.linearphysics method)": [[121, "deepinv.physics.LinearPhysics.__add__"]], "__mul__() (deepinv.physics.linearphysics method)": [[121, "deepinv.physics.LinearPhysics.__mul__"]], "adjointness_test() (deepinv.physics.linearphysics method)": [[121, "deepinv.physics.LinearPhysics.adjointness_test"]], "compute_norm() (deepinv.physics.linearphysics method)": [[121, "deepinv.physics.LinearPhysics.compute_norm"]], "prox_l2() (deepinv.physics.linearphysics method)": [[121, "deepinv.physics.LinearPhysics.prox_l2"]], "mri (class in deepinv.physics)": [[122, "deepinv.physics.MRI"]], "reset() (deepinv.physics.mri method)": [[122, "deepinv.physics.MRI.reset"]], "sample_mask() (deepinv.physics.mri method)": [[122, "deepinv.physics.MRI.sample_mask"]], "a() (deepinv.physics.pansharpen method)": [[123, "deepinv.physics.Pansharpen.A"]], "a_adjoint() (deepinv.physics.pansharpen method)": [[123, "deepinv.physics.Pansharpen.A_adjoint"]], "pansharpen (class in deepinv.physics)": [[123, "deepinv.physics.Pansharpen"]], "forward() (deepinv.physics.pansharpen method)": [[123, "deepinv.physics.Pansharpen.forward"]], "a() (deepinv.physics.physics method)": [[124, "deepinv.physics.Physics.A"]], "a_dagger() (deepinv.physics.physics method)": [[124, "deepinv.physics.Physics.A_dagger"]], "physics (class in deepinv.physics)": [[124, "deepinv.physics.Physics"]], "__add__() (deepinv.physics.physics method)": [[124, "deepinv.physics.Physics.__add__"]], "__mul__() (deepinv.physics.physics method)": [[124, "deepinv.physics.Physics.__mul__"]], "forward() (deepinv.physics.physics method)": [[124, "deepinv.physics.Physics.forward"]], "noise() (deepinv.physics.physics method)": [[124, "deepinv.physics.Physics.noise"]], "sensor() (deepinv.physics.physics method)": [[124, "deepinv.physics.Physics.sensor"]], "poissongaussiannoise (class in deepinv.physics)": [[125, "deepinv.physics.PoissonGaussianNoise"]], "forward() (deepinv.physics.poissongaussiannoise method)": [[125, "deepinv.physics.PoissonGaussianNoise.forward"]], "poissonnoise (class in deepinv.physics)": [[126, "deepinv.physics.PoissonNoise"]], "forward() (deepinv.physics.poissonnoise method)": [[126, "deepinv.physics.PoissonNoise.forward"]], "a() (deepinv.physics.singlephotonlidar method)": [[127, "deepinv.physics.SinglePhotonLidar.A"]], "a_dagger() (deepinv.physics.singlephotonlidar method)": [[127, "deepinv.physics.SinglePhotonLidar.A_dagger"]], "singlephotonlidar (class in deepinv.physics)": [[127, "deepinv.physics.SinglePhotonLidar"]], "singlepixelcamera (class in deepinv.physics)": [[128, "deepinv.physics.SinglePixelCamera"]], "a() (deepinv.physics.tomography method)": [[129, "deepinv.physics.Tomography.A"]], "a_adjoint() (deepinv.physics.tomography method)": [[129, "deepinv.physics.Tomography.A_adjoint"]], "a_dagger() (deepinv.physics.tomography method)": [[129, "deepinv.physics.Tomography.A_dagger"]], "tomography (class in deepinv.physics)": [[129, "deepinv.physics.Tomography"]], "uniformnoise (class in deepinv.physics)": [[130, "deepinv.physics.UniformNoise"]], "forward() (deepinv.physics.uniformnoise method)": [[130, "deepinv.physics.UniformNoise.forward"]], "ddrm (class in deepinv.sampling)": [[131, "deepinv.sampling.DDRM"]], "forward() (deepinv.sampling.ddrm method)": [[131, "deepinv.sampling.DDRM.forward"]], "dps (class in deepinv.sampling)": [[132, "deepinv.sampling.DPS"]], "compute_alpha_betas() (deepinv.sampling.dps method)": [[132, "deepinv.sampling.DPS.compute_alpha_betas"]], "forward() (deepinv.sampling.dps method)": [[132, "deepinv.sampling.DPS.forward"]], "diffpir (class in deepinv.sampling)": [[133, "deepinv.sampling.DiffPIR"]], "find_nearest() (deepinv.sampling.diffpir method)": [[133, "deepinv.sampling.DiffPIR.find_nearest"]], "forward() (deepinv.sampling.diffpir method)": [[133, "deepinv.sampling.DiffPIR.forward"]], "get_alpha_beta() (deepinv.sampling.diffpir method)": [[133, "deepinv.sampling.DiffPIR.get_alpha_beta"]], "get_alpha_prod() (deepinv.sampling.diffpir method)": [[133, "deepinv.sampling.DiffPIR.get_alpha_prod"]], "get_noise_schedule() (deepinv.sampling.diffpir method)": [[133, "deepinv.sampling.DiffPIR.get_noise_schedule"]], "montecarlo (class in deepinv.sampling)": [[134, "deepinv.sampling.MonteCarlo"]], "forward() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.forward"]], "get_chain() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.get_chain"]], "mean_has_converged() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.mean_has_converged"]], "reset() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.reset"]], "var_has_converged() (deepinv.sampling.montecarlo method)": [[134, "deepinv.sampling.MonteCarlo.var_has_converged"]], "skrock (class in deepinv.sampling)": [[135, "deepinv.sampling.SKRock"]], "ula (class in deepinv.sampling)": [[136, "deepinv.sampling.ULA"]], "test() (in module deepinv)": [[137, "deepinv.test"]], "train() (in module deepinv)": [[138, "deepinv.train"]], "rotate (class in deepinv.transform)": [[139, "deepinv.transform.Rotate"]], "forward() (deepinv.transform.rotate method)": [[139, "deepinv.transform.Rotate.forward"]], "shift (class in deepinv.transform)": [[140, "deepinv.transform.Shift"]], "forward() (deepinv.transform.shift method)": [[140, "deepinv.transform.Shift.forward"]], "basedeq (class in deepinv.unfolded)": [[141, "deepinv.unfolded.BaseDEQ"]], "forward() (deepinv.unfolded.basedeq method)": [[141, "deepinv.unfolded.BaseDEQ.forward"]], "baseunfold (class in deepinv.unfolded)": [[142, "deepinv.unfolded.BaseUnfold"]], "deq_builder() (in module deepinv.unfolded)": [[143, "deepinv.unfolded.DEQ_builder"]], "unfolded_builder() (in module deepinv.unfolded)": [[144, "deepinv.unfolded.unfolded_builder"]], "tensorlist (class in deepinv.utils)": [[145, "deepinv.utils.TensorList"]], "__add__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__add__"]], "__mul__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__mul__"]], "__neg__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__neg__"]], "__sub__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__sub__"]], "__truediv__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__truediv__"]], "append() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.append"]], "flatten() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.flatten"]], "cal_psnr() (in module deepinv.utils)": [[146, "deepinv.utils.cal_psnr"]], "get_freer_gpu() (in module deepinv.utils)": [[147, "deepinv.utils.get_freer_gpu"]], "load_url_image() (in module deepinv.utils)": [[148, "deepinv.utils.load_url_image"]], "ones_like() (in module deepinv.utils)": [[149, "deepinv.utils.ones_like"]], "plot() (in module deepinv.utils)": [[150, "deepinv.utils.plot"]], "plot_curves() (in module deepinv.utils)": [[151, "deepinv.utils.plot_curves"]], "plot_parameters() (in module deepinv.utils)": [[152, "deepinv.utils.plot_parameters"]], "rand_like() (in module deepinv.utils)": [[153, "deepinv.utils.rand_like"]], "randn_like() (in module deepinv.utils)": [[154, "deepinv.utils.randn_like"]], "zeros_like() (in module deepinv.utils)": [[155, "deepinv.utils.zeros_like"]]}})